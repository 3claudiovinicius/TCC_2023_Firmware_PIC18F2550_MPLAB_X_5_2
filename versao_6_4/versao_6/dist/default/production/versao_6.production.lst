

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Dec 14 20:52:23 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    78                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    79   000000                     
    80                           ; Version 2.40
    81                           ; Generated 04/07/2022 GMT
    82                           ; 
    83                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution. Publication is not required when
    97                           ;        this file is used in an embedded application.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F2550 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115   000000                     
   116                           	psect	smallconst
   117   000800                     __psmallconst:
   118                           	callstack 0
   119   000800  00                 	db	0
   120   000801  4260               	dw	16992
   121   000803  0DA2               	dw	3490
   122   000805                     __end_of_tiny:
   123                           	callstack 0
   124   000805  0FDB               	dw	4059
   125   000807  40C9               	dw	16585
   126   000809                     __end_of_s4pio2:
   127                           	callstack 0
   128   000809  CBE4               	dw	52196
   129   00080B  4096               	dw	16534
   130   00080D                     __end_of_s3pio2:
   131                           	callstack 0
   132   00080D  0FDB               	dw	4059
   133   00080F  4049               	dw	16457
   134   000811                     __end_of_s2pio2:
   135                           	callstack 0
   136   000811  0FDB               	dw	4059
   137   000813  3FC9               	dw	16329
   138   000815                     __end_of_s1pio2:
   139                           	callstack 0
   140   000815  9E26               	dw	40486
   141   000817  3E78               	dw	15992
   142   000819                     __end_of_Lg4:
   143                           	callstack 0
   144   000819  E9EE               	dw	59886
   145   00081B  3E91               	dw	16017
   146   00081D                     __end_of_Lg3:
   147                           	callstack 0
   148   00081D  CE13               	dw	52755
   149   00081F  3ECC               	dw	16076
   150   000821                     __end_of_Lg2:
   151                           	callstack 0
   152   000821  AAAA               	dw	43690
   153   000823  3F2A               	dw	16170
   154   000825                     __end_of_Lg1:
   155                           	callstack 0
   156   000825  F7D1               	dw	63441
   157   000827  3717               	dw	14103
   158   000829                     __end_of_ln2_lo:
   159                           	callstack 0
   160   000829  7180               	dw	29056
   161   00082B  3F31               	dw	16177
   162   00082D                     __end_of_ln2_hi:
   163                           	callstack 0
   164   00082D  6C3C               	dw	27708
   165   00082F  3636               	dw	13878
   166   000831                     __end_of_S4:
   167                           	callstack 0
   168   000831  07CF               	dw	1999
   169   000833  B950               	dw	47440
   170   000835                     __end_of_S3:
   171                           	callstack 0
   172   000835  8884               	dw	34948
   173   000837  3C08               	dw	15368
   174   000839                     __end_of_S2:
   175                           	callstack 0
   176   000839  AAAB               	dw	43691
   177   00083B  BE2A               	dw	48682
   178   00083D                     __end_of_S1:
   179                           	callstack 0
   180   00083D  85A3               	dw	34211
   181   00083F  3288               	dw	12936
   182   000841                     __end_of_pio2_1t:
   183                           	callstack 0
   184   000841  0FDA               	dw	4058
   185   000843  3FC9               	dw	16329
   186   000845                     __end_of_pio2_1:
   187                           	callstack 0
   188   000845  F983               	dw	63875
   189   000847  3F22               	dw	16162
   190   000849                     __end_of_invpio2:
   191                           	callstack 0
   192   000849  0000               	dw	0
   193   00084B  3F00               	dw	16128
   194   00084D                     __end_of_half:
   195                           	callstack 0
   196   00084D  0000               	dw	0
   197   00084F  4B40               	dw	19264
   198   000851                     __end_of_toint:
   199                           	callstack 0
   200   000851  9A17               	dw	39447
   201   000853  37CC               	dw	14284
   202   000855                     __end_of_C3:
   203                           	callstack 0
   204   000855  043F               	dw	1087
   205   000857  BAB6               	dw	47798
   206   000859                     __end_of_C2:
   207                           	callstack 0
   208   000859  AA9F               	dw	43679
   209   00085B  3D2A               	dw	15658
   210   00085D                     __end_of_C1:
   211                           	callstack 0
   212   00085D  0000               	dw	0
   213   00085F  BF00               	dw	48896
   214   000861                     __end_of_C0:
   215                           	callstack 0
   216   000861  0FDB               	dw	4059
   217   000863  40C9               	dw	16585
   218   000865                     __end_of_c4pio2:
   219                           	callstack 0
   220   000865  CBE4               	dw	52196
   221   000867  4096               	dw	16534
   222   000869                     __end_of_c3pio2:
   223                           	callstack 0
   224   000869  0FDB               	dw	4059
   225   00086B  4049               	dw	16457
   226   00086D                     __end_of_c2pio2:
   227                           	callstack 0
   228   00086D  0FDB               	dw	4059
   229   00086F  3FC9               	dw	16329
   230   000871                     __end_of_c1pio2:
   231                           	callstack 0
   232   000000                     _SSPSTATbits	set	4039
   233   000000                     _PORTAbits	set	3968
   234   000000                     _PORTBbits	set	3969
   235   000000                     _ADCON0	set	4034
   236   000000                     _T0CONbits	set	4053
   237   000000                     _INTCON	set	4082
   238   000000                     _TRISA5	set	31893
   239   000000                     _TRISB1	set	31897
   240   000000                     _TRISB0	set	31896
   241   000000                     _PORTA	set	3968
   242   000000                     _TRISB	set	3987
   243   000000                     _TMR0L	set	4054
   244   000000                     _INTCONbits	set	4082
   245   000000                     _INTCON2	set	4081
   246   000000                     _ADCON2	set	4032
   247   000000                     _ADCON1	set	4033
   248   000000                     _ADCON0bits	set	4034
   249   000000                     _ADRESL	set	4035
   250   000000                     _ADRESH	set	4036
   251   000000                     _RCON	set	4048
   252   000000                     _OSCCON	set	4051
   253   000000                     _TRISC7	set	31911
   254   000000                     _T0CON	set	4053
   255   000000                     _TRISA	set	3986
   256   000000                     _PORTC	set	3970
   257   000000                     _PORTB	set	3969
   258   000000                     _SSPCON1	set	4038
   259   000000                     _SSPBUF	set	4041
   260   000000                     _SSPSTAT	set	4039
   261   000871                     STR_4:
   262   000871  56                 	db	86	;'V'
   263   000872  5F                 	db	95	;'_'
   264   000873  62                 	db	98	;'b'
   265   000874  69                 	db	105	;'i'
   266   000875  61                 	db	97	;'a'
   267   000876  73                 	db	115	;'s'
   268   000877  20                 	db	32
   269   000878  3D                 	db	61	;'='
   270   000879  20                 	db	32
   271   00087A  25                 	db	37
   272   00087B  2E                 	db	46
   273   00087C  32                 	db	50	;'2'
   274   00087D  66                 	db	102	;'f'
   275   00087E  20                 	db	32
   276   00087F  56                 	db	86	;'V'
   277   000880  00                 	db	0
   278   000881                     STR_2:
   279   000881  56                 	db	86	;'V'
   280   000882  6F                 	db	111	;'o'
   281   000883  66                 	db	102	;'f'
   282   000884  66                 	db	102	;'f'
   283   000885  20                 	db	32
   284   000886  3D                 	db	61	;'='
   285   000887  20                 	db	32
   286   000888  25                 	db	37
   287   000889  2E                 	db	46
   288   00088A  32                 	db	50	;'2'
   289   00088B  66                 	db	102	;'f'
   290   00088C  20                 	db	32
   291   00088D  56                 	db	86	;'V'
   292   00088E  00                 	db	0
   293   00088F                     STR_1:
   294   00088F  49                 	db	73	;'I'
   295   000890  6E                 	db	110	;'n'
   296   000891  69                 	db	105	;'i'
   297   000892  63                 	db	99	;'c'
   298   000893  69                 	db	105	;'i'
   299   000894  61                 	db	97	;'a'
   300   000895  6E                 	db	110	;'n'
   301   000896  64                 	db	100	;'d'
   302   000897  6F                 	db	111	;'o'
   303   000898  2E                 	db	46
   304   000899  2E                 	db	46
   305   00089A  2E                 	db	46
   306   00089B  00                 	db	0
   307   00089C                     STR_5:
   308   00089C  44                 	db	68	;'D'
   309   00089D  32                 	db	50	;'2'
   310   00089E  6D                 	db	109	;'m'
   311   00089F  61                 	db	97	;'a'
   312   0008A0  78                 	db	120	;'x'
   313   0008A1  20                 	db	32
   314   0008A2  3D                 	db	61	;'='
   315   0008A3  20                 	db	32
   316   0008A4  25                 	db	37
   317   0008A5  2E                 	db	46
   318   0008A6  32                 	db	50	;'2'
   319   0008A7  66                 	db	102	;'f'
   320   0008A8  00                 	db	0
   321   0008A9                     STR_3:
   322   0008A9  44                 	db	68	;'D'
   323   0008AA  32                 	db	50	;'2'
   324   0008AB  20                 	db	32
   325   0008AC  3D                 	db	61	;'='
   326   0008AD  20                 	db	32
   327   0008AE  25                 	db	37
   328   0008AF  2E                 	db	46
   329   0008B0  32                 	db	50	;'2'
   330   0008B1  66                 	db	102	;'f'
   331   0008B2  00                 	db	0
   332   0008B3                     STR_7:
   333   0008B3  69                 	db	105	;'i'
   334   0008B4  6E                 	db	110	;'n'
   335   0008B5  66                 	db	102	;'f'
   336   0008B6  00                 	db	0
   337   0008B7                     STR_10:
   338   0008B7  6E                 	db	110	;'n'
   339   0008B8  61                 	db	97	;'a'
   340   0008B9  6E                 	db	110	;'n'
   341   0008BA  00                 	db	0
   342   0008BB                     STR_6:
   343   0008BB  46                 	db	70	;'F'
   344   0008BC  49                 	db	73	;'I'
   345   0008BD  4D                 	db	77	;'M'
   346   0008BE  00                 	db	0
   347   0008BF  00                 	db	0	; dummy byte at the end
   348   000000                     
   349                           ; #config settings
   350                           
   351                           	psect	cinit
   352   0068D8                     __pcinit:
   353                           	callstack 0
   354   0068D8                     start_initialization:
   355                           	callstack 0
   356   0068D8                     __initialization:
   357                           	callstack 0
   358                           
   359                           ; Clear objects allocated to BANK6 (128 bytes)
   360   0068D8  EE06  F000         	lfsr	0,__pbssBANK6
   361   0068DC  0E80               	movlw	128
   362   0068DE                     clear_0:
   363   0068DE  6AEE               	clrf	postinc0,c
   364   0068E0  06E8               	decf	wreg,f,c
   365   0068E2  E1FD               	bnz	clear_0
   366                           
   367                           ; Clear objects allocated to BANK5 (208 bytes)
   368   0068E4  EE05  F000         	lfsr	0,__pbssBANK5
   369   0068E8  0ED0               	movlw	208
   370   0068EA                     clear_1:
   371   0068EA  6AEE               	clrf	postinc0,c
   372   0068EC  06E8               	decf	wreg,f,c
   373   0068EE  E1FD               	bnz	clear_1
   374                           
   375                           ; Clear objects allocated to BANK4 (256 bytes)
   376   0068F0  EE04  F000         	lfsr	0,__pbssBANK4
   377   0068F4  EE11 F000          	lfsr	1,256
   378   0068F8                     clear_2:
   379   0068F8  6AEE               	clrf	postinc0,c
   380   0068FA  50E5               	movf	postdec1,w,c
   381   0068FC  50E1               	movf	fsr1l,w,c
   382   0068FE  E1FC               	bnz	clear_2
   383   006900  50E2               	movf	fsr1h,w,c
   384   006902  E1FA               	bnz	clear_2
   385                           
   386                           ; Clear objects allocated to BANK3 (208 bytes)
   387   006904  EE03  F000         	lfsr	0,__pbssBANK3
   388   006908  0ED0               	movlw	208
   389   00690A                     clear_3:
   390   00690A  6AEE               	clrf	postinc0,c
   391   00690C  06E8               	decf	wreg,f,c
   392   00690E  E1FD               	bnz	clear_3
   393                           
   394                           ; Clear objects allocated to BANK2 (256 bytes)
   395   006910  EE02  F000         	lfsr	0,__pbssBANK2
   396   006914  EE11 F000          	lfsr	1,256
   397   006918                     clear_4:
   398   006918  6AEE               	clrf	postinc0,c
   399   00691A  50E5               	movf	postdec1,w,c
   400   00691C  50E1               	movf	fsr1l,w,c
   401   00691E  E1FC               	bnz	clear_4
   402   006920  50E2               	movf	fsr1h,w,c
   403   006922  E1FA               	bnz	clear_4
   404                           
   405                           ; Clear objects allocated to BANK1 (139 bytes)
   406   006924  EE01  F000         	lfsr	0,__pbssBANK1
   407   006928  0E8B               	movlw	139
   408   00692A                     clear_5:
   409   00692A  6AEE               	clrf	postinc0,c
   410   00692C  06E8               	decf	wreg,f,c
   411   00692E  E1FD               	bnz	clear_5
   412                           
   413                           ; Clear objects allocated to COMRAM (12 bytes)
   414   006930  EE00  F046         	lfsr	0,__pbssCOMRAM
   415   006934  0E0C               	movlw	12
   416   006936                     clear_6:
   417   006936  6AEE               	clrf	postinc0,c
   418   006938  06E8               	decf	wreg,f,c
   419   00693A  E1FD               	bnz	clear_6
   420   00693C                     end_of_initialization:
   421                           	callstack 0
   422   00693C                     __end_of__initialization:
   423                           	callstack 0
   424   00693C  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   425   00693E  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   426   006940  0E00               	movlw	low (__Lmediumconst shr (0+16))
   427   006942  6EF8               	movwf	tblptru,c
   428   006944  0100               	movlb	0
   429   006946  EF60  F004         	goto	_main	;jump to C main() function
   430                           
   431                           	psect	bssCOMRAM
   432   000046                     __pbssCOMRAM:
   433                           	callstack 0
   434   000046                     ___rem_pio2f@F532:
   435                           	callstack 0
   436   000046                     	ds	4
   437   00004A                     _width:
   438                           	callstack 0
   439   00004A                     	ds	2
   440   00004C                     _prec:
   441                           	callstack 0
   442   00004C                     	ds	2
   443   00004E                     _errno:
   444                           	callstack 0
   445   00004E                     	ds	2
   446   000050                     _canal:
   447                           	callstack 0
   448   000050                     	ds	1
   449   000051                     _k:
   450                           	callstack 0
   451   000051                     	ds	1
   452                           
   453                           	psect	bssBANK1
   454   000100                     __pbssBANK1:
   455                           	callstack 0
   456   000100                     _D2:
   457                           	callstack 0
   458   000100                     	ds	80
   459   000150                     floorf@F526:
   460                           	callstack 0
   461   000150                     	ds	4
   462   000154                     ___fpclassifyf@F465:
   463                           	callstack 0
   464   000154                     	ds	4
   465   000158                     logf@F472:
   466                           	callstack 0
   467   000158                     	ds	4
   468   00015C                     fabsf@F465:
   469                           	callstack 0
   470   00015C                     	ds	4
   471   000160                     _max2:
   472                           	callstack 0
   473   000160                     	ds	4
   474   000164                     _max1:
   475                           	callstack 0
   476   000164                     	ds	4
   477   000168                     _aux_D2:
   478                           	callstack 0
   479   000168                     	ds	4
   480   00016C                     _aux_Voff:
   481                           	callstack 0
   482   00016C                     	ds	4
   483   000170                     _e:
   484                           	callstack 0
   485   000170                     	ds	2
   486   000172                     _v:
   487                           	callstack 0
   488   000172                     	ds	2
   489   000174                     _flags:
   490                           	callstack 0
   491   000174                     	ds	1
   492   000175                     _pot_value:
   493                           	callstack 0
   494   000175                     	ds	1
   495   000176                     _passo:
   496                           	callstack 0
   497   000176                     	ds	1
   498   000177                     _info2:
   499                           	callstack 0
   500   000177                     	ds	10
   501   000181                     _info:
   502                           	callstack 0
   503   000181                     	ds	10
   504                           
   505                           	psect	bssBANK2
   506   000200                     __pbssBANK2:
   507                           	callstack 0
   508   000200                     _Im_X1:
   509                           	callstack 0
   510   000200                     	ds	128
   511   000280                     _Re_X1:
   512                           	callstack 0
   513   000280                     	ds	128
   514                           
   515                           	psect	bssBANK3
   516   000300                     __pbssBANK3:
   517                           	callstack 0
   518   000300                     _voltage:
   519                           	callstack 0
   520   000300                     	ds	80
   521   000350                     _Re_X:
   522                           	callstack 0
   523   000350                     	ds	128
   524                           
   525                           	psect	bssBANK4
   526   000400                     __pbssBANK4:
   527                           	callstack 0
   528   000400                     _b:
   529                           	callstack 0
   530   000400                     	ds	64
   531   000440                     _a:
   532                           	callstack 0
   533   000440                     	ds	64
   534   000480                     _Im_X:
   535                           	callstack 0
   536   000480                     	ds	128
   537                           
   538                           	psect	bssBANK5
   539   000500                     __pbssBANK5:
   540                           	callstack 0
   541   000500                     _Re_Xm1:
   542                           	callstack 0
   543   000500                     	ds	128
   544   000580                     _dbuf:
   545                           	callstack 0
   546   000580                     	ds	80
   547                           
   548                           	psect	bssBANK6
   549   000600                     __pbssBANK6:
   550                           	callstack 0
   551   000600                     _Im_Xm1:
   552                           	callstack 0
   553   000600                     	ds	128
   554                           
   555                           	psect	cstackBANK3
   556   0003D0                     __pcstackBANK3:
   557                           	callstack 0
   558   0003D0                     main@aux:
   559                           	callstack 0
   560                           
   561                           ; 4 bytes @ 0x0
   562   0003D0                     	ds	4
   563   0003D4                     _main$1789:
   564                           	callstack 0
   565                           
   566                           ; 4 bytes @ 0x4
   567   0003D4                     	ds	4
   568   0003D8                     _main$1790:
   569                           	callstack 0
   570                           
   571                           ; 4 bytes @ 0x8
   572   0003D8                     	ds	4
   573   0003DC                     _main$1788:
   574                           	callstack 0
   575                           
   576                           ; 4 bytes @ 0xC
   577   0003DC                     	ds	4
   578                           
   579                           	psect	cstackBANK1
   580   00018B                     __pcstackBANK1:
   581                           	callstack 0
   582   00018B                     ?_cosf:
   583                           	callstack 0
   584   00018B                     ?_sinf:
   585                           	callstack 0
   586   00018B                     efgtoa@ne:
   587                           	callstack 0
   588   00018B                     cosf@x:
   589                           	callstack 0
   590   00018B                     sinf@x:
   591                           	callstack 0
   592                           
   593                           ; 4 bytes @ 0x0
   594   00018B                     	ds	2
   595   00018D                     efgtoa@p:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x2
   599   00018D                     	ds	2
   600   00018F                     ??_cosf:
   601   00018F                     ??_sinf:
   602   00018F                     efgtoa@t:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x4
   606   00018F                     	ds	2
   607   000191                     _efgtoa$1402:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x6
   611   000191                     	ds	2
   612   000193                     efgtoa@pp:
   613                           	callstack 0
   614   000193                     cosf@n:
   615                           	callstack 0
   616   000193                     sinf@n:
   617                           	callstack 0
   618                           
   619                           ; 4 bytes @ 0x8
   620   000193                     	ds	1
   621   000194                     efgtoa@mode:
   622                           	callstack 0
   623                           
   624                           ; 1 bytes @ 0x9
   625   000194                     	ds	1
   626   000195                     efgtoa@nmode:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0xA
   630   000195                     	ds	1
   631   000196                     efgtoa@d:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0xB
   635   000196                     	ds	1
   636   000197                     cosf@__xc8_float_word:
   637                           	callstack 0
   638   000197                     sinf@__xc8_float_word:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0xC
   642   000197                     	ds	1
   643   000198                     efgtoa@m:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0xD
   647   000198                     	ds	2
   648   00019A                     efgtoa@e:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0xF
   652   00019A                     	ds	1
   653   00019B                     _cosf$1173:
   654                           	callstack 0
   655   00019B                     _sinf$1556:
   656                           	callstack 0
   657                           
   658                           ; 4 bytes @ 0x10
   659   00019B                     	ds	1
   660   00019C                     efgtoa@w:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x11
   664   00019C                     	ds	2
   665   00019E                     efgtoa@ou:
   666                           	callstack 0
   667                           
   668                           ; 4 bytes @ 0x13
   669   00019E                     	ds	1
   670   00019F                     _cosf$1174:
   671                           	callstack 0
   672   00019F                     _sinf$1557:
   673                           	callstack 0
   674                           
   675                           ; 4 bytes @ 0x14
   676   00019F                     	ds	3
   677   0001A2                     efgtoa@i:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x17
   681   0001A2                     	ds	1
   682   0001A3                     sinf@sign:
   683                           	callstack 0
   684   0001A3                     _cosf$1797:
   685                           	callstack 0
   686                           
   687                           ; 4 bytes @ 0x18
   688   0001A3                     	ds	1
   689   0001A4                     efgtoa@h:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0x19
   693   0001A4                     	ds	1
   694   0001A5                     _sinf$1810:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x1A
   698   0001A5                     	ds	2
   699   0001A7                     cosf@sign:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x1C
   703   0001A7                     	ds	1
   704   0001A8                     efgtoa@l:
   705                           	callstack 0
   706                           
   707                           ; 4 bytes @ 0x1D
   708   0001A8                     	ds	1
   709   0001A9                     cosf@y:
   710                           	callstack 0
   711   0001A9                     sinf@y:
   712                           	callstack 0
   713                           
   714                           ; 4 bytes @ 0x1E
   715   0001A9                     	ds	3
   716   0001AC                     efgtoa@sign:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x21
   720   0001AC                     	ds	1
   721   0001AD                     cosf@ix:
   722                           	callstack 0
   723   0001AD                     efgtoa@g:
   724                           	callstack 0
   725   0001AD                     sinf@ix:
   726                           	callstack 0
   727                           
   728                           ; 4 bytes @ 0x22
   729   0001AD                     	ds	4
   730   0001B1                     FFT@N:
   731                           	callstack 0
   732   0001B1                     efgtoa@n:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x26
   736   0001B1                     	ds	2
   737   0001B3                     FFT@Re_X:
   738                           	callstack 0
   739   0001B3                     efgtoa@u:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x28
   743   0001B3                     	ds	2
   744   0001B5                     FFT@Im_X:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x2A
   748   0001B5                     	ds	2
   749   0001B7                     vfpfcnvrt@fp:
   750                           	callstack 0
   751   0001B7                     _FFT$1791:
   752                           	callstack 0
   753                           
   754                           ; 4 bytes @ 0x2C
   755   0001B7                     	ds	2
   756   0001B9                     vfpfcnvrt@fmt:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x2E
   760   0001B9                     	ds	2
   761   0001BB                     vfpfcnvrt@ap:
   762                           	callstack 0
   763   0001BB                     _FFT$1792:
   764                           	callstack 0
   765                           
   766                           ; 4 bytes @ 0x30
   767   0001BB                     	ds	2
   768   0001BD                     ?_vfprintf:
   769                           	callstack 0
   770   0001BD                     vfprintf@fp:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x32
   774   0001BD                     	ds	2
   775   0001BF                     vfprintf@fmt:
   776                           	callstack 0
   777   0001BF                     _FFT$1793:
   778                           	callstack 0
   779                           
   780                           ; 4 bytes @ 0x34
   781   0001BF                     	ds	2
   782   0001C1                     vfprintf@ap:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x36
   786   0001C1                     	ds	2
   787   0001C3                     ?_sprintf:
   788                           	callstack 0
   789   0001C3                     sprintf@s:
   790                           	callstack 0
   791   0001C3                     _FFT$1794:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0x38
   795   0001C3                     	ds	2
   796   0001C5                     sprintf@fmt:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x3A
   800   0001C5                     	ds	2
   801   0001C7                     _FFT$1795:
   802                           	callstack 0
   803                           
   804                           ; 4 bytes @ 0x3C
   805   0001C7                     	ds	4
   806   0001CB                     _FFT$1796:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0x40
   810   0001CB                     	ds	4
   811   0001CF                     FFT@M:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x44
   815   0001CF                     	ds	2
   816   0001D1                     FFT@tempI:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x46
   820   0001D1                     	ds	4
   821   0001D5                     FFT@sR:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x4A
   825   0001D5                     	ds	4
   826   0001D9                     FFT@sI:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x4E
   830   0001D9                     	ds	4
   831   0001DD                     FFT@p:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x52
   835   0001DD                     	ds	2
   836   0001DF                     FFT@uR:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x54
   840   0001DF                     	ds	4
   841   0001E3                     FFT@k:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x58
   845   0001E3                     	ds	2
   846   0001E5                     FFT@tempR:
   847                           	callstack 0
   848                           
   849                           ; 4 bytes @ 0x5A
   850   0001E5                     	ds	4
   851   0001E9                     FFT@uI:
   852                           	callstack 0
   853                           
   854                           ; 4 bytes @ 0x5E
   855   0001E9                     	ds	4
   856   0001ED                     FFT@m:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x62
   860   0001ED                     	ds	2
   861   0001EF                     FFT@L:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x64
   865   0001EF                     	ds	2
   866   0001F1                     FFT@n:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x66
   870   0001F1                     	ds	2
   871   0001F3                     ??_main:
   872                           
   873                           ; 1 bytes @ 0x68
   874   0001F3                     	ds	2
   875                           
   876                           	psect	cstackBANK0
   877   000060                     __pcstackBANK0:
   878                           	callstack 0
   879   000060                     ?_sqrtf:
   880                           	callstack 0
   881   000060                     ?___flsub:
   882                           	callstack 0
   883   000060                     ?___cosdf:
   884                           	callstack 0
   885   000060                     ___flsub@b:
   886                           	callstack 0
   887   000060                     ___cosdf@x:
   888                           	callstack 0
   889   000060                     sqrtf@x:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x0
   893   000060                     	ds	4
   894   000064                     ??_sqrtf:
   895   000064                     ___flsub@a:
   896                           	callstack 0
   897   000064                     ___cosdf@r:
   898                           	callstack 0
   899                           
   900                           ; 4 bytes @ 0x4
   901   000064                     	ds	4
   902   000068                     ?___fldiv:
   903                           	callstack 0
   904   000068                     ___fldiv@b:
   905                           	callstack 0
   906   000068                     ___cosdf$1798:
   907                           	callstack 0
   908                           
   909                           ; 4 bytes @ 0x8
   910   000068                     	ds	1
   911   000069                     sqrtf@s:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0x9
   915   000069                     	ds	3
   916   00006C                     ___fldiv@a:
   917                           	callstack 0
   918   00006C                     ___cosdf$1799:
   919                           	callstack 0
   920                           
   921                           ; 4 bytes @ 0xC
   922   00006C                     	ds	1
   923   00006D                     sqrtf@i:
   924                           	callstack 0
   925                           
   926                           ; 4 bytes @ 0xD
   927   00006D                     	ds	3
   928   000070                     ??___fldiv:
   929   000070                     ___cosdf$1800:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0x10
   933   000070                     	ds	1
   934   000071                     sqrtf@__xc8_float_word:
   935                           	callstack 0
   936                           
   937                           ; 4 bytes @ 0x11
   938   000071                     	ds	3
   939   000074                     ___fldiv@rem:
   940                           	callstack 0
   941   000074                     ___cosdf@w:
   942                           	callstack 0
   943                           
   944                           ; 4 bytes @ 0x14
   945   000074                     	ds	1
   946   000075                     sqrtf@q:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x15
   950   000075                     	ds	3
   951   000078                     ___fldiv@sign:
   952                           	callstack 0
   953   000078                     ___cosdf@z:
   954                           	callstack 0
   955                           
   956                           ; 4 bytes @ 0x18
   957   000078                     	ds	1
   958   000079                     ___fldiv@new_exp:
   959                           	callstack 0
   960   000079                     sqrtf@t:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x19
   964   000079                     	ds	2
   965   00007B                     ___fldiv@grs:
   966                           	callstack 0
   967                           
   968                           ; 4 bytes @ 0x1B
   969   00007B                     	ds	2
   970   00007D                     sqrtf@z:
   971                           	callstack 0
   972                           
   973                           ; 4 bytes @ 0x1D
   974   00007D                     	ds	2
   975   00007F                     ___fldiv@bexp:
   976                           	callstack 0
   977                           
   978                           ; 1 bytes @ 0x1F
   979   00007F                     	ds	1
   980   000080                     ___fldiv@aexp:
   981                           	callstack 0
   982                           
   983                           ; 1 bytes @ 0x20
   984   000080                     	ds	1
   985   000081                     ?_logf:
   986                           	callstack 0
   987   000081                     ?_floorf:
   988                           	callstack 0
   989   000081                     ?___flneg:
   990                           	callstack 0
   991   000081                     ___flneg@f1:
   992                           	callstack 0
   993   000081                     logf@x:
   994                           	callstack 0
   995   000081                     floorf@x:
   996                           	callstack 0
   997   000081                     sqrtf@m:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x21
  1001   000081                     	ds	4
  1002   000085                     ??_logf:
  1003   000085                     ??_floorf:
  1004   000085                     ?___sindf:
  1005                           	callstack 0
  1006   000085                     ___sindf@x:
  1007                           	callstack 0
  1008   000085                     sqrtf@r:
  1009                           	callstack 0
  1010                           
  1011                           ; 4 bytes @ 0x25
  1012   000085                     	ds	4
  1013   000089                     ___sindf@r:
  1014                           	callstack 0
  1015   000089                     sqrtf@ix:
  1016                           	callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x29
  1019   000089                     	ds	2
  1020   00008B                     logf@R:
  1021                           	callstack 0
  1022   00008B                     floorf@m:
  1023                           	callstack 0
  1024                           
  1025                           ; 4 bytes @ 0x2B
  1026   00008B                     	ds	2
  1027   00008D                     ___sindf@w:
  1028                           	callstack 0
  1029                           
  1030                           ; 4 bytes @ 0x2D
  1031   00008D                     	ds	2
  1032   00008F                     floorf@e:
  1033                           	callstack 0
  1034   00008F                     logf@t1:
  1035                           	callstack 0
  1036                           
  1037                           ; 4 bytes @ 0x2F
  1038   00008F                     	ds	2
  1039   000091                     floorf@u:
  1040                           	callstack 0
  1041   000091                     ___sindf$1802:
  1042                           	callstack 0
  1043                           
  1044                           ; 4 bytes @ 0x31
  1045   000091                     	ds	2
  1046   000093                     logf@t2:
  1047                           	callstack 0
  1048                           
  1049                           ; 4 bytes @ 0x33
  1050   000093                     	ds	2
  1051   000095                     ___sindf$1803:
  1052                           	callstack 0
  1053                           
  1054                           ; 4 bytes @ 0x35
  1055   000095                     	ds	2
  1056   000097                     _logf$1806:
  1057                           	callstack 0
  1058                           
  1059                           ; 4 bytes @ 0x37
  1060   000097                     	ds	2
  1061   000099                     ___sindf$1804:
  1062                           	callstack 0
  1063                           
  1064                           ; 4 bytes @ 0x39
  1065   000099                     	ds	2
  1066   00009B                     _logf$1807:
  1067                           	callstack 0
  1068                           
  1069                           ; 4 bytes @ 0x3B
  1070   00009B                     	ds	2
  1071   00009D                     ___sindf@s:
  1072                           	callstack 0
  1073                           
  1074                           ; 4 bytes @ 0x3D
  1075   00009D                     	ds	2
  1076   00009F                     _logf$1808:
  1077                           	callstack 0
  1078                           
  1079                           ; 4 bytes @ 0x3F
  1080   00009F                     	ds	2
  1081   0000A1                     ___sindf@z:
  1082                           	callstack 0
  1083                           
  1084                           ; 4 bytes @ 0x41
  1085   0000A1                     	ds	2
  1086   0000A3                     _logf$1809:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0x43
  1090   0000A3                     	ds	4
  1091   0000A7                     logf@k:
  1092                           	callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x47
  1095   0000A7                     	ds	2
  1096   0000A9                     logf@hfsq:
  1097                           	callstack 0
  1098                           
  1099                           ; 4 bytes @ 0x49
  1100   0000A9                     	ds	4
  1101   0000AD                     logf@dk:
  1102                           	callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x4D
  1105   0000AD                     	ds	4
  1106   0000B1                     logf@s:
  1107                           	callstack 0
  1108                           
  1109                           ; 4 bytes @ 0x51
  1110   0000B1                     	ds	4
  1111   0000B5                     logf@z:
  1112                           	callstack 0
  1113                           
  1114                           ; 4 bytes @ 0x55
  1115   0000B5                     	ds	4
  1116   0000B9                     logf@w:
  1117                           	callstack 0
  1118                           
  1119                           ; 4 bytes @ 0x59
  1120   0000B9                     	ds	4
  1121   0000BD                     _logf$1805:
  1122                           	callstack 0
  1123                           
  1124                           ; 4 bytes @ 0x5D
  1125   0000BD                     	ds	4
  1126   0000C1                     logf@u:
  1127                           	callstack 0
  1128                           
  1129                           ; 4 bytes @ 0x61
  1130   0000C1                     	ds	4
  1131   0000C5                     logf@f:
  1132                           	callstack 0
  1133                           
  1134                           ; 4 bytes @ 0x65
  1135   0000C5                     	ds	4
  1136   0000C9                     logf@ix:
  1137                           	callstack 0
  1138                           
  1139                           ; 4 bytes @ 0x69
  1140   0000C9                     	ds	4
  1141   0000CD                     ?___fltol:
  1142                           	callstack 0
  1143   0000CD                     ___fltol@f1:
  1144                           	callstack 0
  1145                           
  1146                           ; 4 bytes @ 0x6D
  1147   0000CD                     	ds	4
  1148   0000D1                     ??___fltol:
  1149                           
  1150                           ; 1 bytes @ 0x71
  1151   0000D1                     	ds	4
  1152   0000D5                     ?___rem_pio2f:
  1153                           	callstack 0
  1154   0000D5                     normalize@N:
  1155                           	callstack 0
  1156   0000D5                     efgtoa@fp:
  1157                           	callstack 0
  1158   0000D5                     ___rem_pio2f@x:
  1159                           	callstack 0
  1160                           
  1161                           ; 4 bytes @ 0x75
  1162   0000D5                     	ds	2
  1163   0000D7                     normalize@X:
  1164                           	callstack 0
  1165   0000D7                     efgtoa@f:
  1166                           	callstack 0
  1167                           
  1168                           ; 4 bytes @ 0x77
  1169   0000D7                     	ds	2
  1170   0000D9                     ??_normalize:
  1171   0000D9                     ___rem_pio2f@y:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x79
  1175   0000D9                     	ds	2
  1176   0000DB                     ??___rem_pio2f:
  1177   0000DB                     efgtoa@c:
  1178                           	callstack 0
  1179                           
  1180                           ; 1 bytes @ 0x7B
  1181   0000DB                     	ds	1
  1182   0000DC                     ??_efgtoa:
  1183                           
  1184                           ; 1 bytes @ 0x7C
  1185   0000DC                     	ds	1
  1186   0000DD                     normalize@media:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x7D
  1190   0000DD                     	ds	1
  1191   0000DE                     ??_vfpfcnvrt:
  1192                           
  1193                           ; 1 bytes @ 0x7E
  1194   0000DE                     	ds	1
  1195   0000DF                     normalize@k:
  1196                           	callstack 0
  1197   0000DF                     ___rem_pio2f@ty:
  1198                           	callstack 0
  1199                           
  1200                           ; 4 bytes @ 0x7F
  1201   0000DF                     	ds	2
  1202   0000E1                     vfpfcnvrt@convarg:
  1203                           	callstack 0
  1204                           
  1205                           ; 8 bytes @ 0x81
  1206   0000E1                     	ds	2
  1207   0000E3                     ___rem_pio2f@ix:
  1208                           	callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x83
  1211   0000E3                     	ds	4
  1212   0000E7                     ___rem_pio2f@sign:
  1213                           	callstack 0
  1214                           
  1215                           ; 2 bytes @ 0x87
  1216   0000E7                     	ds	2
  1217   0000E9                     vfpfcnvrt@c:
  1218                           	callstack 0
  1219   0000E9                     ___rem_pio2f@u:
  1220                           	callstack 0
  1221                           
  1222                           ; 4 bytes @ 0x89
  1223   0000E9                     	ds	1
  1224   0000EA                     vfpfcnvrt@cp:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x8A
  1228   0000EA                     	ds	2
  1229   0000EC                     vfprintf@cfmt:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x8C
  1233   0000EC                     	ds	1
  1234   0000ED                     ___rem_pio2f$1801:
  1235                           	callstack 0
  1236                           
  1237                           ; 4 bytes @ 0x8D
  1238   0000ED                     	ds	1
  1239   0000EE                     sprintf@ap:
  1240                           	callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x8E
  1243   0000EE                     	ds	2
  1244   0000F0                     sprintf@f:
  1245                           	callstack 0
  1246                           
  1247                           ; 11 bytes @ 0x90
  1248   0000F0                     	ds	1
  1249   0000F1                     ___rem_pio2f@fn:
  1250                           	callstack 0
  1251                           
  1252                           ; 4 bytes @ 0x91
  1253   0000F1                     	ds	4
  1254   0000F5                     ___rem_pio2f@t:
  1255                           	callstack 0
  1256                           
  1257                           ; 4 bytes @ 0x95
  1258   0000F5                     	ds	4
  1259   0000F9                     ___rem_pio2f@n:
  1260                           	callstack 0
  1261                           
  1262                           ; 4 bytes @ 0x99
  1263   0000F9                     	ds	2
  1264   0000FB                     ??_verifRes:
  1265                           
  1266                           ; 1 bytes @ 0x9B
  1267   0000FB                     	ds	2
  1268   0000FD                     ??_FFT:
  1269   0000FD                     verifRes@i:
  1270                           	callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x9D
  1273   0000FD                     	ds	3
  1274                           
  1275                           	psect	cstackCOMRAM
  1276   000001                     __pcstackCOMRAM:
  1277                           	callstack 0
  1278   000001                     ?_convAD:
  1279                           	callstack 0
  1280   000001                     
  1281                           ; 1 bytes @ 0x0
  1282   000001                     	ds	2
  1283   000003                     ??_convAD:
  1284                           
  1285                           ; 1 bytes @ 0x2
  1286   000003                     	ds	2
  1287   000005                     convAD@result:
  1288                           	callstack 0
  1289                           
  1290                           ; 2 bytes @ 0x4
  1291   000005                     	ds	2
  1292   000007                     ??_samples:
  1293                           
  1294                           ; 1 bytes @ 0x6
  1295   000007                     	ds	4
  1296   00000B                     samples@sample:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0xA
  1300   00000B                     	ds	2
  1301   00000D                     ??_regInit:
  1302   00000D                     ?___fpclassifyf:
  1303                           	callstack 0
  1304   00000D                     ?_isdigit:
  1305                           	callstack 0
  1306   00000D                     ?_isspace:
  1307                           	callstack 0
  1308   00000D                     ?___wmul:
  1309                           	callstack 0
  1310   00000D                     ?___awdiv:
  1311                           	callstack 0
  1312   00000D                     ?_fabsf:
  1313                           	callstack 0
  1314   00000D                     ?_labs:
  1315                           	callstack 0
  1316   00000D                     ?_nanf:
  1317                           	callstack 0
  1318   00000D                     ?___xxtofl:
  1319                           	callstack 0
  1320   00000D                     configADCON@adcon1:
  1321                           	callstack 0
  1322   00000D                     LCDWriteNibble@rs:
  1323                           	callstack 0
  1324   00000D                     SPI_transm@dado:
  1325                           	callstack 0
  1326   00000D                     ___wmul@multiplier:
  1327                           	callstack 0
  1328   00000D                     ___awdiv@dividend:
  1329                           	callstack 0
  1330   00000D                     isdigit@c:
  1331                           	callstack 0
  1332   00000D                     isspace@c:
  1333                           	callstack 0
  1334   00000D                     memcpy@d1:
  1335                           	callstack 0
  1336   00000D                     fputc@c:
  1337                           	callstack 0
  1338   00000D                     nanf@s:
  1339                           	callstack 0
  1340   00000D                     strcpy@dest:
  1341                           	callstack 0
  1342   00000D                     ___fleq@ff1:
  1343                           	callstack 0
  1344   00000D                     ___xxtofl@val:
  1345                           	callstack 0
  1346   00000D                     fabsf@x:
  1347                           	callstack 0
  1348   00000D                     ___fpclassifyf@x:
  1349                           	callstack 0
  1350   00000D                     labs@a:
  1351                           	callstack 0
  1352                           
  1353                           ; 4 bytes @ 0xC
  1354   00000D                     	ds	1
  1355   00000E                     ??_LCDWriteNibble:
  1356   00000E                     configADCON@adcon2:
  1357                           	callstack 0
  1358   00000E                     SPI_MCP41@dado:
  1359                           	callstack 0
  1360                           
  1361                           ; 1 bytes @ 0xD
  1362   00000E                     	ds	1
  1363   00000F                     ??_isdigit:
  1364   00000F                     ??_isspace:
  1365   00000F                     configADCON@adcon0:
  1366                           	callstack 0
  1367   00000F                     LCDWriteNibble@ch:
  1368                           	callstack 0
  1369   00000F                     SPI_MCP41@comando:
  1370                           	callstack 0
  1371   00000F                     regInit@j:
  1372                           	callstack 0
  1373   00000F                     ___wmul@multiplicand:
  1374                           	callstack 0
  1375   00000F                     ___awdiv@divisor:
  1376                           	callstack 0
  1377   00000F                     memcpy@s1:
  1378                           	callstack 0
  1379   00000F                     fputc@fp:
  1380                           	callstack 0
  1381   00000F                     strcpy@src:
  1382                           	callstack 0
  1383                           
  1384                           ; 2 bytes @ 0xE
  1385   00000F                     	ds	1
  1386   000010                     ??_LCDPutCmd:
  1387   000010                     ??_configSampling:
  1388   000010                     ??_LCDPutChar:
  1389                           
  1390                           ; 1 bytes @ 0xF
  1391   000010                     	ds	1
  1392   000011                     ??_fputc:
  1393   000011                     ??___fpclassifyf:
  1394   000011                     ??_labs:
  1395   000011                     ??___xxtofl:
  1396   000011                     LCDPutChar@ch:
  1397                           	callstack 0
  1398   000011                     LCDPutCmd@ch:
  1399                           	callstack 0
  1400   000011                     ___awdiv@counter:
  1401                           	callstack 0
  1402   000011                     _isspace$1480:
  1403                           	callstack 0
  1404   000011                     ___wmul@product:
  1405                           	callstack 0
  1406   000011                     memcpy@n:
  1407                           	callstack 0
  1408   000011                     strcpy@s:
  1409                           	callstack 0
  1410   000011                     ___fleq@ff2:
  1411                           	callstack 0
  1412   000011                     fabsf@u:
  1413                           	callstack 0
  1414   000011                     nanf@u:
  1415                           	callstack 0
  1416                           
  1417                           ; 4 bytes @ 0x10
  1418   000011                     	ds	1
  1419   000012                     ??_LCD_Initialize:
  1420   000012                     LCDGoto@ln:
  1421                           	callstack 0
  1422   000012                     ___awdiv@sign:
  1423                           	callstack 0
  1424   000012                     LCDPutStr@str:
  1425                           	callstack 0
  1426                           
  1427                           ; 2 bytes @ 0x11
  1428   000012                     	ds	1
  1429   000013                     ??_LCDGoto:
  1430   000013                     ?_atoi:
  1431                           	callstack 0
  1432   000013                     memcpy@tmp:
  1433                           	callstack 0
  1434   000013                     ___awdiv@quotient:
  1435                           	callstack 0
  1436   000013                     atoi@s:
  1437                           	callstack 0
  1438   000013                     strcpy@d:
  1439                           	callstack 0
  1440                           
  1441                           ; 2 bytes @ 0x12
  1442   000013                     	ds	1
  1443   000014                     ??_LCDPutStr:
  1444   000014                     memcpy@d:
  1445                           	callstack 0
  1446                           
  1447                           ; 2 bytes @ 0x13
  1448   000014                     	ds	1
  1449   000015                     ??_atoi:
  1450   000015                     ??___fleq:
  1451   000015                     ___xxtofl@sign:
  1452                           	callstack 0
  1453   000015                     bitrevsort@N:
  1454                           	callstack 0
  1455   000015                     _LCDGoto$659:
  1456                           	callstack 0
  1457   000015                     ___fpclassifyf@e:
  1458                           	callstack 0
  1459                           
  1460                           ; 2 bytes @ 0x14
  1461   000015                     	ds	1
  1462   000016                     LCDPutStr@i:
  1463                           	callstack 0
  1464   000016                     ___xxtofl@exp:
  1465                           	callstack 0
  1466   000016                     memcpy@s:
  1467                           	callstack 0
  1468   000016                     fputs@s:
  1469                           	callstack 0
  1470                           
  1471                           ; 2 bytes @ 0x15
  1472   000016                     	ds	1
  1473   000017                     LCDGoto@pos:
  1474                           	callstack 0
  1475   000017                     bitrevsort@Re_x:
  1476                           	callstack 0
  1477   000017                     ___xxtofl@arg:
  1478                           	callstack 0
  1479   000017                     ___fpclassifyf@u:
  1480                           	callstack 0
  1481                           
  1482                           ; 4 bytes @ 0x16
  1483   000017                     	ds	1
  1484   000018                     atoi@neg:
  1485                           	callstack 0
  1486   000018                     fputs@fp:
  1487                           	callstack 0
  1488                           
  1489                           ; 2 bytes @ 0x17
  1490   000018                     	ds	1
  1491   000019                     bitrevsort@Im_x:
  1492                           	callstack 0
  1493                           
  1494                           ; 2 bytes @ 0x18
  1495   000019                     	ds	1
  1496   00001A                     fputs@c:
  1497                           	callstack 0
  1498   00001A                     atoi@n:
  1499                           	callstack 0
  1500                           
  1501                           ; 2 bytes @ 0x19
  1502   00001A                     	ds	1
  1503   00001B                     ??_bitrevsort:
  1504   00001B                     ?___flmul:
  1505                           	callstack 0
  1506   00001B                     fputs@i:
  1507                           	callstack 0
  1508   00001B                     ___flmul@b:
  1509                           	callstack 0
  1510                           
  1511                           ; 4 bytes @ 0x1A
  1512   00001B                     	ds	2
  1513   00001D                     pad@fp:
  1514                           	callstack 0
  1515                           
  1516                           ; 2 bytes @ 0x1C
  1517   00001D                     	ds	1
  1518   00001E                     bitrevsort@tempR:
  1519                           	callstack 0
  1520                           
  1521                           ; 4 bytes @ 0x1D
  1522   00001E                     	ds	1
  1523   00001F                     pad@buf:
  1524                           	callstack 0
  1525   00001F                     ___flmul@a:
  1526                           	callstack 0
  1527                           
  1528                           ; 4 bytes @ 0x1E
  1529   00001F                     	ds	2
  1530   000021                     pad@p:
  1531                           	callstack 0
  1532                           
  1533                           ; 2 bytes @ 0x20
  1534   000021                     	ds	1
  1535   000022                     bitrevsort@tempI:
  1536                           	callstack 0
  1537                           
  1538                           ; 4 bytes @ 0x21
  1539   000022                     	ds	1
  1540   000023                     ??___flmul:
  1541   000023                     ??_pad:
  1542                           
  1543                           ; 1 bytes @ 0x22
  1544   000023                     	ds	1
  1545   000024                     pad@i:
  1546                           	callstack 0
  1547                           
  1548                           ; 2 bytes @ 0x23
  1549   000024                     	ds	2
  1550   000026                     bitrevsort@k:
  1551                           	callstack 0
  1552   000026                     pad@w:
  1553                           	callstack 0
  1554                           
  1555                           ; 2 bytes @ 0x25
  1556   000026                     	ds	1
  1557   000027                     ___flmul@sign:
  1558                           	callstack 0
  1559                           
  1560                           ; 1 bytes @ 0x26
  1561   000027                     	ds	1
  1562   000028                     ___flmul@aexp:
  1563                           	callstack 0
  1564   000028                     bitrevsort@n:
  1565                           	callstack 0
  1566                           
  1567                           ; 2 bytes @ 0x27
  1568   000028                     	ds	1
  1569   000029                     ___flmul@grs:
  1570                           	callstack 0
  1571                           
  1572                           ; 4 bytes @ 0x28
  1573   000029                     	ds	1
  1574   00002A                     bitrevsort@m:
  1575                           	callstack 0
  1576                           
  1577                           ; 2 bytes @ 0x29
  1578   00002A                     	ds	3
  1579   00002D                     ___flmul@bexp:
  1580                           	callstack 0
  1581                           
  1582                           ; 1 bytes @ 0x2C
  1583   00002D                     	ds	1
  1584   00002E                     ___flmul@prod:
  1585                           	callstack 0
  1586                           
  1587                           ; 4 bytes @ 0x2D
  1588   00002E                     	ds	4
  1589   000032                     ___flmul@temp:
  1590                           	callstack 0
  1591                           
  1592                           ; 2 bytes @ 0x31
  1593   000032                     	ds	2
  1594   000034                     ?___fladd:
  1595                           	callstack 0
  1596   000034                     ___flge@ff1:
  1597                           	callstack 0
  1598   000034                     ___fladd@b:
  1599                           	callstack 0
  1600                           
  1601                           ; 4 bytes @ 0x33
  1602   000034                     	ds	4
  1603   000038                     ___flge@ff2:
  1604                           	callstack 0
  1605   000038                     ___fladd@a:
  1606                           	callstack 0
  1607                           
  1608                           ; 4 bytes @ 0x37
  1609   000038                     	ds	4
  1610   00003C                     ??___fladd:
  1611   00003C                     ??___flge:
  1612                           
  1613                           ; 1 bytes @ 0x3B
  1614   00003C                     	ds	4
  1615   000040                     ___fladd@signs:
  1616                           	callstack 0
  1617                           
  1618                           ; 1 bytes @ 0x3F
  1619   000040                     	ds	1
  1620   000041                     ___fladd@aexp:
  1621                           	callstack 0
  1622                           
  1623                           ; 1 bytes @ 0x40
  1624   000041                     	ds	1
  1625   000042                     ___fladd@bexp:
  1626                           	callstack 0
  1627                           
  1628                           ; 1 bytes @ 0x41
  1629   000042                     	ds	1
  1630   000043                     ___fladd@grs:
  1631                           	callstack 0
  1632                           
  1633                           ; 1 bytes @ 0x42
  1634   000043                     	ds	1
  1635   000044                     ___fltol@sign1:
  1636                           	callstack 0
  1637                           
  1638                           ; 1 bytes @ 0x43
  1639   000044                     	ds	1
  1640   000045                     ___fltol@exp1:
  1641                           	callstack 0
  1642                           
  1643                           ; 1 bytes @ 0x44
  1644   000045                     	ds	1
  1645   000046                     
  1646                           ; 1 bytes @ 0x45
  1647 ;;
  1648 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1649 ;;
  1650 ;; *************** function _main *****************
  1651 ;; Defined at:
  1652 ;;		line 37 in file "main.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;		None
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  aux             4    0[BANK3 ] float 
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      void 
  1659 ;; Registers used:
  1660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1666 ;;      Params:         0       0       0       0       0       0       0       0       0
  1667 ;;      Locals:         0       0       0       0      16       0       0       0       0
  1668 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1669 ;;      Totals:         0       0       2       0      16       0       0       0       0
  1670 ;;Total ram usage:       18 bytes
  1671 ;; Hardware stack levels required when called: 11
  1672 ;; This function calls:
  1673 ;;		_FFT
  1674 ;;		_LCDPutCmd
  1675 ;;		_LCDPutStr
  1676 ;;		_LCD_Initialize
  1677 ;;		_SPI_config
  1678 ;;		___fladd
  1679 ;;		___fldiv
  1680 ;;		___flge
  1681 ;;		___flmul
  1682 ;;		___flsub
  1683 ;;		___fltol
  1684 ;;		___xxtofl
  1685 ;;		_bitrevsort
  1686 ;;		_configSampling
  1687 ;;		_logf
  1688 ;;		_normalize
  1689 ;;		_regInit
  1690 ;;		_sqrtf
  1691 ;;		_verifRes
  1692 ;; This function is called by:
  1693 ;;		Startup code after reset
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text0
  1698   0008C0                     __ptext0:
  1699                           	callstack 0
  1700   0008C0                     _main:
  1701                           	callstack 20
  1702   0008C0                     
  1703                           ;main.c: 38:     regInit();
  1704   0008C0  ECCA  F031         	call	_regInit	;wreg free
  1705   0008C4                     
  1706                           ;main.c: 39:     LCD_Initialize();
  1707   0008C4  EC3E  F035         	call	_LCD_Initialize	;wreg free
  1708   0008C8                     
  1709                           ;main.c: 40:     SPI_config();
  1710   0008C8  EC18  F037         	call	_SPI_config	;wreg free
  1711   0008CC                     
  1712                           ;main.c: 41:     LCDPutStr("Iniciando...");
  1713   0008CC  0E8F               	movlw	low STR_1
  1714   0008CE  6E12               	movwf	LCDPutStr@str^0,c
  1715   0008D0  0E08               	movlw	high STR_1
  1716   0008D2  6E13               	movwf	(LCDPutStr@str+1)^0,c
  1717   0008D4  EC2F  F034         	call	_LCDPutStr	;wreg free
  1718   0008D8                     
  1719                           ;main.c: 42:     _delay((unsigned long)((10000)*(16000000/4000.0)));
  1720   0008D8  0ECB               	movlw	203
  1721   0008DA  0101               	movlb	1	; () banked
  1722   0008DC  6FF4               	movwf	(??_main+1)& (0+255),b
  1723   0008DE  0EEC               	movlw	236
  1724   0008E0  6FF3               	movwf	??_main& (0+255),b
  1725   0008E2  0E84               	movlw	132
  1726   0008E4                     u8207:
  1727   0008E4  2EE8               	decfsz	wreg,f,c
  1728   0008E6  D7FE               	bra	u8207
  1729   0008E8  2FF3               	decfsz	??_main& (0+255),f,b
  1730   0008EA  D7FC               	bra	u8207
  1731   0008EC  2FF4               	decfsz	(??_main+1)& (0+255),f,b
  1732   0008EE  D7FA               	bra	u8207
  1733   0008F0  F000               	nop	
  1734   0008F2                     
  1735                           ;main.c: 43:     LCDPutCmd(0x01);
  1736   0008F2  0E01               	movlw	1
  1737   0008F4  ECC7  F036         	call	_LCDPutCmd
  1738   0008F8                     l8041:
  1739                           
  1740                           ;main.c: 45:         configSampling();
  1741   0008F8  EC64  F033         	call	_configSampling	;wreg free
  1742   0008FC                     
  1743                           ;main.c: 47:         for (k=0; k<32; k++){
  1744   0008FC  0E00               	movlw	0
  1745   0008FE  6E51               	movwf	_k^0,c
  1746   000900                     l8045:
  1747   000900  0E1F               	movlw	31
  1748   000902  6451               	cpfsgt	_k^0,c
  1749   000904  EF86  F004         	goto	u8111
  1750   000908  EF88  F004         	goto	u8110
  1751   00090C                     u8111:
  1752   00090C  EF8A  F004         	goto	l8049
  1753   000910                     u8110:
  1754   000910  EFB2  F004         	goto	l8055
  1755   000914                     l8049:
  1756                           
  1757                           ;main.c: 48:             Re_X1[k] = a[k];}
  1758   000914  5051               	movf	_k^0,w,c
  1759   000916  0D02               	mullw	2
  1760   000918  0E40               	movlw	low _a
  1761   00091A  24F3               	addwf	243,w,c
  1762   00091C  6ED9               	movwf	fsr2l,c
  1763   00091E  0E04               	movlw	high _a
  1764   000920  20F4               	addwfc	prodh,w,c
  1765   000922  6EDA               	movwf	fsr2h,c
  1766   000924  CFDE F1F3          	movff	postinc2,??_main
  1767   000928  CFDD F1F4          	movff	postdec2,??_main+1
  1768   00092C  C1F3  F00D         	movff	??_main,___xxtofl@val
  1769   000930  C1F4  F00E         	movff	??_main+1,___xxtofl@val+1
  1770   000934  6A0F               	clrf	(___xxtofl@val+2)^0,c
  1771   000936  6A10               	clrf	(___xxtofl@val+3)^0,c
  1772   000938  0E00               	movlw	0
  1773   00093A  ECC6  F02E         	call	___xxtofl
  1774   00093E  5051               	movf	_k^0,w,c
  1775   000940  0D04               	mullw	4
  1776   000942  0E80               	movlw	low _Re_X1
  1777   000944  24F3               	addwf	243,w,c
  1778   000946  6ED9               	movwf	fsr2l,c
  1779   000948  0E02               	movlw	high _Re_X1
  1780   00094A  20F4               	addwfc	prodh,w,c
  1781   00094C  6EDA               	movwf	fsr2h,c
  1782   00094E  C00D  FFDE         	movff	?___xxtofl,postinc2
  1783   000952  C00E  FFDE         	movff	?___xxtofl+1,postinc2
  1784   000956  C00F  FFDE         	movff	?___xxtofl+2,postinc2
  1785   00095A  C010  FFDE         	movff	?___xxtofl+3,postinc2
  1786   00095E  2A51               	incf	_k^0,f,c
  1787   000960  EF80  F004         	goto	l8045
  1788   000964                     l8055:
  1789                           
  1790                           ;main.c: 50:         normalize(32, Re_X1);
  1791   000964  0E00               	movlw	0
  1792   000966  0100               	movlb	0	; () banked
  1793   000968  6FD6               	movwf	(normalize@N+1)& (0+255),b
  1794   00096A  0E20               	movlw	32
  1795   00096C  6FD5               	movwf	normalize@N& (0+255),b
  1796   00096E  0E80               	movlw	low _Re_X1
  1797   000970  6FD7               	movwf	normalize@X& (0+255),b
  1798   000972  0E02               	movlw	high _Re_X1
  1799   000974  6FD8               	movwf	(normalize@X+1)& (0+255),b
  1800   000976  ECD8  F02D         	call	_normalize	;wreg free
  1801   00097A                     
  1802                           ;main.c: 52:         for (k=0; k<32; k++){
  1803   00097A  0E00               	movlw	0
  1804   00097C  6E51               	movwf	_k^0,c
  1805   00097E                     l8059:
  1806   00097E  0E1F               	movlw	31
  1807   000980  6451               	cpfsgt	_k^0,c
  1808   000982  EFC5  F004         	goto	u8121
  1809   000986  EFC7  F004         	goto	u8120
  1810   00098A                     u8121:
  1811   00098A  EFC9  F004         	goto	l8063
  1812   00098E                     u8120:
  1813   00098E  EFE4  F004         	goto	l8069
  1814   000992                     l8063:
  1815                           
  1816                           ;main.c: 53:             Re_X[k] = Re_X1[k];}
  1817   000992  5051               	movf	_k^0,w,c
  1818   000994  0D04               	mullw	4
  1819   000996  0E80               	movlw	low _Re_X1
  1820   000998  24F3               	addwf	243,w,c
  1821   00099A  6ED9               	movwf	fsr2l,c
  1822   00099C  0E02               	movlw	high _Re_X1
  1823   00099E  20F4               	addwfc	prodh,w,c
  1824   0009A0  6EDA               	movwf	fsr2h,c
  1825   0009A2  5051               	movf	_k^0,w,c
  1826   0009A4  0D04               	mullw	4
  1827   0009A6  0E50               	movlw	low _Re_X
  1828   0009A8  24F3               	addwf	243,w,c
  1829   0009AA  6EE1               	movwf	fsr1l,c
  1830   0009AC  0E03               	movlw	high _Re_X
  1831   0009AE  20F4               	addwfc	prodh,w,c
  1832   0009B0  6EE2               	movwf	fsr1h,c
  1833   0009B2  CFDE FFE6          	movff	postinc2,postinc1
  1834   0009B6  CFDE FFE6          	movff	postinc2,postinc1
  1835   0009BA  CFDE FFE6          	movff	postinc2,postinc1
  1836   0009BE  CFDE FFE6          	movff	postinc2,postinc1
  1837   0009C2  2A51               	incf	_k^0,f,c
  1838   0009C4  EFBF  F004         	goto	l8059
  1839   0009C8                     l8069:
  1840                           
  1841                           ;main.c: 55:         for (k=0; k<32; k++){
  1842   0009C8  0E00               	movlw	0
  1843   0009CA  6E51               	movwf	_k^0,c
  1844   0009CC                     l8071:
  1845   0009CC  0E1F               	movlw	31
  1846   0009CE  6451               	cpfsgt	_k^0,c
  1847   0009D0  EFEC  F004         	goto	u8131
  1848   0009D4  EFEE  F004         	goto	u8130
  1849   0009D8                     u8131:
  1850   0009D8  EFF0  F004         	goto	l8075
  1851   0009DC                     u8130:
  1852   0009DC  EF18  F005         	goto	l8081
  1853   0009E0                     l8075:
  1854                           
  1855                           ;main.c: 56:             Re_X1[k] = b[k];}
  1856   0009E0  5051               	movf	_k^0,w,c
  1857   0009E2  0D02               	mullw	2
  1858   0009E4  0E00               	movlw	low _b
  1859   0009E6  24F3               	addwf	243,w,c
  1860   0009E8  6ED9               	movwf	fsr2l,c
  1861   0009EA  0E04               	movlw	high _b
  1862   0009EC  20F4               	addwfc	prodh,w,c
  1863   0009EE  6EDA               	movwf	fsr2h,c
  1864   0009F0  CFDE F1F3          	movff	postinc2,??_main
  1865   0009F4  CFDD F1F4          	movff	postdec2,??_main+1
  1866   0009F8  C1F3  F00D         	movff	??_main,___xxtofl@val
  1867   0009FC  C1F4  F00E         	movff	??_main+1,___xxtofl@val+1
  1868   000A00  6A0F               	clrf	(___xxtofl@val+2)^0,c
  1869   000A02  6A10               	clrf	(___xxtofl@val+3)^0,c
  1870   000A04  0E00               	movlw	0
  1871   000A06  ECC6  F02E         	call	___xxtofl
  1872   000A0A  5051               	movf	_k^0,w,c
  1873   000A0C  0D04               	mullw	4
  1874   000A0E  0E80               	movlw	low _Re_X1
  1875   000A10  24F3               	addwf	243,w,c
  1876   000A12  6ED9               	movwf	fsr2l,c
  1877   000A14  0E02               	movlw	high _Re_X1
  1878   000A16  20F4               	addwfc	prodh,w,c
  1879   000A18  6EDA               	movwf	fsr2h,c
  1880   000A1A  C00D  FFDE         	movff	?___xxtofl,postinc2
  1881   000A1E  C00E  FFDE         	movff	?___xxtofl+1,postinc2
  1882   000A22  C00F  FFDE         	movff	?___xxtofl+2,postinc2
  1883   000A26  C010  FFDE         	movff	?___xxtofl+3,postinc2
  1884   000A2A  2A51               	incf	_k^0,f,c
  1885   000A2C  EFE6  F004         	goto	l8071
  1886   000A30                     l8081:
  1887                           
  1888                           ;main.c: 58:         normalize(32, Re_X1);
  1889   000A30  0E00               	movlw	0
  1890   000A32  0100               	movlb	0	; () banked
  1891   000A34  6FD6               	movwf	(normalize@N+1)& (0+255),b
  1892   000A36  0E20               	movlw	32
  1893   000A38  6FD5               	movwf	normalize@N& (0+255),b
  1894   000A3A  0E80               	movlw	low _Re_X1
  1895   000A3C  6FD7               	movwf	normalize@X& (0+255),b
  1896   000A3E  0E02               	movlw	high _Re_X1
  1897   000A40  6FD8               	movwf	(normalize@X+1)& (0+255),b
  1898   000A42  ECD8  F02D         	call	_normalize	;wreg free
  1899   000A46                     
  1900                           ;main.c: 60:         for (k=0; k<32; k++){
  1901   000A46  0E00               	movlw	0
  1902   000A48  6E51               	movwf	_k^0,c
  1903   000A4A                     l8085:
  1904   000A4A  0E1F               	movlw	31
  1905   000A4C  6451               	cpfsgt	_k^0,c
  1906   000A4E  EF2B  F005         	goto	u8141
  1907   000A52  EF2D  F005         	goto	u8140
  1908   000A56                     u8141:
  1909   000A56  EF2F  F005         	goto	l8089
  1910   000A5A                     u8140:
  1911   000A5A  EF4A  F005         	goto	l8095
  1912   000A5E                     l8089:
  1913                           
  1914                           ;main.c: 61:             Im_X[k] = Re_X1[k];}
  1915   000A5E  5051               	movf	_k^0,w,c
  1916   000A60  0D04               	mullw	4
  1917   000A62  0E80               	movlw	low _Re_X1
  1918   000A64  24F3               	addwf	243,w,c
  1919   000A66  6ED9               	movwf	fsr2l,c
  1920   000A68  0E02               	movlw	high _Re_X1
  1921   000A6A  20F4               	addwfc	prodh,w,c
  1922   000A6C  6EDA               	movwf	fsr2h,c
  1923   000A6E  5051               	movf	_k^0,w,c
  1924   000A70  0D04               	mullw	4
  1925   000A72  0E80               	movlw	low _Im_X
  1926   000A74  24F3               	addwf	243,w,c
  1927   000A76  6EE1               	movwf	fsr1l,c
  1928   000A78  0E04               	movlw	high _Im_X
  1929   000A7A  20F4               	addwfc	prodh,w,c
  1930   000A7C  6EE2               	movwf	fsr1h,c
  1931   000A7E  CFDE FFE6          	movff	postinc2,postinc1
  1932   000A82  CFDE FFE6          	movff	postinc2,postinc1
  1933   000A86  CFDE FFE6          	movff	postinc2,postinc1
  1934   000A8A  CFDE FFE6          	movff	postinc2,postinc1
  1935   000A8E  2A51               	incf	_k^0,f,c
  1936   000A90  EF25  F005         	goto	l8085
  1937   000A94                     l8095:
  1938                           
  1939                           ;main.c: 63:         bitrevsort (32, Re_X, Im_X);
  1940   000A94  0E00               	movlw	0
  1941   000A96  6E16               	movwf	(bitrevsort@N+1)^0,c
  1942   000A98  0E20               	movlw	32
  1943   000A9A  6E15               	movwf	bitrevsort@N^0,c
  1944   000A9C  0E50               	movlw	low _Re_X
  1945   000A9E  6E17               	movwf	bitrevsort@Re_x^0,c
  1946   000AA0  0E03               	movlw	high _Re_X
  1947   000AA2  6E18               	movwf	(bitrevsort@Re_x+1)^0,c
  1948   000AA4  0E80               	movlw	low _Im_X
  1949   000AA6  6E19               	movwf	bitrevsort@Im_x^0,c
  1950   000AA8  0E04               	movlw	high _Im_X
  1951   000AAA  6E1A               	movwf	(bitrevsort@Im_x+1)^0,c
  1952   000AAC  ECD5  F02B         	call	_bitrevsort	;wreg free
  1953   000AB0                     
  1954                           ;main.c: 65:         FFT (32, Re_X, Im_X);
  1955   000AB0  0E00               	movlw	0
  1956   000AB2  0101               	movlb	1	; () banked
  1957   000AB4  6FB2               	movwf	(FFT@N+1)& (0+255),b
  1958   000AB6  0E20               	movlw	32
  1959   000AB8  6FB1               	movwf	FFT@N& (0+255),b
  1960   000ABA  0E50               	movlw	low _Re_X
  1961   000ABC  6FB3               	movwf	FFT@Re_X& (0+255),b
  1962   000ABE  0E03               	movlw	high _Re_X
  1963   000AC0  6FB4               	movwf	(FFT@Re_X+1)& (0+255),b
  1964   000AC2  0E80               	movlw	low _Im_X
  1965   000AC4  6FB5               	movwf	FFT@Im_X& (0+255),b
  1966   000AC6  0E04               	movlw	high _Im_X
  1967   000AC8  6FB6               	movwf	(FFT@Im_X+1)& (0+255),b
  1968   000ACA  EC3B  F012         	call	_FFT	;wreg free
  1969   000ACE                     
  1970                           ;main.c: 67:         Re_Xm1[0] = Re_X[0];
  1971   000ACE  C350  F500         	movff	_Re_X,_Re_Xm1
  1972   000AD2  C351  F501         	movff	_Re_X+1,_Re_Xm1+1
  1973   000AD6  C352  F502         	movff	_Re_X+2,_Re_Xm1+2
  1974   000ADA  C353  F503         	movff	_Re_X+3,_Re_Xm1+3
  1975   000ADE                     
  1976                           ;main.c: 68:         Im_Xm1[0] = Im_X[0];
  1977   000ADE  C480  F600         	movff	_Im_X,_Im_Xm1
  1978   000AE2  C481  F601         	movff	_Im_X+1,_Im_Xm1+1
  1979   000AE6  C482  F602         	movff	_Im_X+2,_Im_Xm1+2
  1980   000AEA  C483  F603         	movff	_Im_X+3,_Im_Xm1+3
  1981   000AEE                     
  1982                           ;main.c: 70:         for (k=1; k<32; k++){
  1983   000AEE  0E01               	movlw	1
  1984   000AF0  6E51               	movwf	_k^0,c
  1985   000AF2                     l8105:
  1986   000AF2  0E1F               	movlw	31
  1987   000AF4  6451               	cpfsgt	_k^0,c
  1988   000AF6  EF7F  F005         	goto	u8151
  1989   000AFA  EF81  F005         	goto	u8150
  1990   000AFE                     u8151:
  1991   000AFE  EF83  F005         	goto	l8109
  1992   000B02                     u8150:
  1993   000B02  EFCF  F005         	goto	l8115
  1994   000B06                     l8109:
  1995                           
  1996                           ;main.c: 71:             Re_Xm1[32 -k]=Re_X[k];
  1997   000B06  5051               	movf	_k^0,w,c
  1998   000B08  0D04               	mullw	4
  1999   000B0A  0E50               	movlw	low _Re_X
  2000   000B0C  24F3               	addwf	243,w,c
  2001   000B0E  6ED9               	movwf	fsr2l,c
  2002   000B10  0E03               	movlw	high _Re_X
  2003   000B12  20F4               	addwfc	prodh,w,c
  2004   000B14  6EDA               	movwf	fsr2h,c
  2005   000B16  0E20               	movlw	32
  2006   000B18  0101               	movlb	1	; () banked
  2007   000B1A  6FF3               	movwf	??_main& (0+255),b
  2008   000B1C  0E00               	movlw	0
  2009   000B1E  6FF4               	movwf	(??_main+1)& (0+255),b
  2010   000B20  5051               	movf	_k^0,w,c
  2011   000B22  5FF3               	subwf	??_main& (0+255),f,b
  2012   000B24  0E00               	movlw	0
  2013   000B26  5BF4               	subwfb	(??_main+1)& (0+255),f,b
  2014   000B28  90D8               	bcf	status,0,c
  2015   000B2A  37F3               	rlcf	??_main& (0+255),f,b
  2016   000B2C  37F4               	rlcf	(??_main+1)& (0+255),f,b
  2017   000B2E  90D8               	bcf	status,0,c
  2018   000B30  37F3               	rlcf	??_main& (0+255),f,b
  2019   000B32  37F4               	rlcf	(??_main+1)& (0+255),f,b
  2020   000B34  0E00               	movlw	low _Re_Xm1
  2021   000B36  25F3               	addwf	??_main& (0+255),w,b
  2022   000B38  6EE1               	movwf	fsr1l,c
  2023   000B3A  0E05               	movlw	high _Re_Xm1
  2024   000B3C  21F4               	addwfc	(??_main+1)& (0+255),w,b
  2025   000B3E  6EE2               	movwf	fsr1h,c
  2026   000B40  CFDE FFE6          	movff	postinc2,postinc1
  2027   000B44  CFDE FFE6          	movff	postinc2,postinc1
  2028   000B48  CFDE FFE6          	movff	postinc2,postinc1
  2029   000B4C  CFDE FFE6          	movff	postinc2,postinc1
  2030                           
  2031                           ;main.c: 72:             Im_Xm1[32 -k]=Im_X[k];}
  2032   000B50  5051               	movf	_k^0,w,c
  2033   000B52  0D04               	mullw	4
  2034   000B54  0E80               	movlw	low _Im_X
  2035   000B56  24F3               	addwf	243,w,c
  2036   000B58  6ED9               	movwf	fsr2l,c
  2037   000B5A  0E04               	movlw	high _Im_X
  2038   000B5C  20F4               	addwfc	prodh,w,c
  2039   000B5E  6EDA               	movwf	fsr2h,c
  2040   000B60  0E20               	movlw	32
  2041   000B62  6FF3               	movwf	??_main& (0+255),b
  2042   000B64  0E00               	movlw	0
  2043   000B66  6FF4               	movwf	(??_main+1)& (0+255),b
  2044   000B68  5051               	movf	_k^0,w,c
  2045   000B6A  5FF3               	subwf	??_main& (0+255),f,b
  2046   000B6C  0E00               	movlw	0
  2047   000B6E  5BF4               	subwfb	(??_main+1)& (0+255),f,b
  2048   000B70  90D8               	bcf	status,0,c
  2049   000B72  37F3               	rlcf	??_main& (0+255),f,b
  2050   000B74  37F4               	rlcf	(??_main+1)& (0+255),f,b
  2051   000B76  90D8               	bcf	status,0,c
  2052   000B78  37F3               	rlcf	??_main& (0+255),f,b
  2053   000B7A  37F4               	rlcf	(??_main+1)& (0+255),f,b
  2054   000B7C  0E00               	movlw	low _Im_Xm1
  2055   000B7E  25F3               	addwf	??_main& (0+255),w,b
  2056   000B80  6EE1               	movwf	fsr1l,c
  2057   000B82  0E06               	movlw	high _Im_Xm1
  2058   000B84  21F4               	addwfc	(??_main+1)& (0+255),w,b
  2059   000B86  6EE2               	movwf	fsr1h,c
  2060   000B88  CFDE FFE6          	movff	postinc2,postinc1
  2061   000B8C  CFDE FFE6          	movff	postinc2,postinc1
  2062   000B90  CFDE FFE6          	movff	postinc2,postinc1
  2063   000B94  CFDE FFE6          	movff	postinc2,postinc1
  2064   000B98                     
  2065                           ; BSR set to: 1
  2066   000B98  2A51               	incf	_k^0,f,c
  2067   000B9A  EF79  F005         	goto	l8105
  2068   000B9E                     l8115:
  2069                           
  2070                           ;main.c: 74:         for (k=0; k<32; k++){
  2071   000B9E  0E00               	movlw	0
  2072   000BA0  6E51               	movwf	_k^0,c
  2073   000BA2                     l8117:
  2074   000BA2  0E1F               	movlw	31
  2075   000BA4  6451               	cpfsgt	_k^0,c
  2076   000BA6  EFD7  F005         	goto	u8161
  2077   000BAA  EFD9  F005         	goto	u8160
  2078   000BAE                     u8161:
  2079   000BAE  EFDB  F005         	goto	l8121
  2080   000BB2                     u8160:
  2081   000BB2  EF4A  F008         	goto	l8127
  2082   000BB6                     l8121:
  2083                           
  2084                           ;main.c: 75:             Re_X1[k] = (Re_X[k] + Re_Xm1[k])/2;
  2085   000BB6  5051               	movf	_k^0,w,c
  2086   000BB8  0D04               	mullw	4
  2087   000BBA  0E00               	movlw	low _Re_Xm1
  2088   000BBC  24F3               	addwf	243,w,c
  2089   000BBE  6ED9               	movwf	fsr2l,c
  2090   000BC0  0E05               	movlw	high _Re_Xm1
  2091   000BC2  20F4               	addwfc	prodh,w,c
  2092   000BC4  6EDA               	movwf	fsr2h,c
  2093   000BC6  CFDE F038          	movff	postinc2,___fladd@a
  2094   000BCA  CFDE F039          	movff	postinc2,___fladd@a+1
  2095   000BCE  CFDE F03A          	movff	postinc2,___fladd@a+2
  2096   000BD2  CFDE F03B          	movff	postinc2,___fladd@a+3
  2097   000BD6  5051               	movf	_k^0,w,c
  2098   000BD8  0D04               	mullw	4
  2099   000BDA  0E50               	movlw	low _Re_X
  2100   000BDC  24F3               	addwf	243,w,c
  2101   000BDE  6ED9               	movwf	fsr2l,c
  2102   000BE0  0E03               	movlw	high _Re_X
  2103   000BE2  20F4               	addwfc	prodh,w,c
  2104   000BE4  6EDA               	movwf	fsr2h,c
  2105   000BE6  CFDE F034          	movff	postinc2,___fladd@b
  2106   000BEA  CFDE F035          	movff	postinc2,___fladd@b+1
  2107   000BEE  CFDE F036          	movff	postinc2,___fladd@b+2
  2108   000BF2  CFDE F037          	movff	postinc2,___fladd@b+3
  2109   000BF6  ECD8  F01D         	call	___fladd	;wreg free
  2110   000BFA  C034  F068         	movff	?___fladd,___fldiv@b
  2111   000BFE  C035  F069         	movff	?___fladd+1,___fldiv@b+1
  2112   000C02  C036  F06A         	movff	?___fladd+2,___fldiv@b+2
  2113   000C06  C037  F06B         	movff	?___fladd+3,___fldiv@b+3
  2114   000C0A  0E00               	movlw	0
  2115   000C0C  0100               	movlb	0	; () banked
  2116   000C0E  6F6C               	movwf	___fldiv@a& (0+255),b
  2117   000C10  0E00               	movlw	0
  2118   000C12  6F6D               	movwf	(___fldiv@a+1)& (0+255),b
  2119   000C14  0E00               	movlw	0
  2120   000C16  6F6E               	movwf	(___fldiv@a+2)& (0+255),b
  2121   000C18  0E40               	movlw	64
  2122   000C1A  6F6F               	movwf	(___fldiv@a+3)& (0+255),b
  2123   000C1C  EC95  F024         	call	___fldiv	;wreg free
  2124   000C20  5051               	movf	_k^0,w,c
  2125   000C22  0D04               	mullw	4
  2126   000C24  0E80               	movlw	low _Re_X1
  2127   000C26  24F3               	addwf	243,w,c
  2128   000C28  6ED9               	movwf	fsr2l,c
  2129   000C2A  0E02               	movlw	high _Re_X1
  2130   000C2C  20F4               	addwfc	prodh,w,c
  2131   000C2E  6EDA               	movwf	fsr2h,c
  2132   000C30  0100               	movlb	0	; () banked
  2133   000C32  C068  FFDE         	movff	?___fldiv,postinc2
  2134   000C36  C069  FFDE         	movff	?___fldiv+1,postinc2
  2135   000C3A  C06A  FFDE         	movff	?___fldiv+2,postinc2
  2136   000C3E  C06B  FFDE         	movff	?___fldiv+3,postinc2
  2137                           
  2138                           ;main.c: 76:             Im_X1[k] = (Im_X[k] - Im_Xm1[k])/2;
  2139   000C42  5051               	movf	_k^0,w,c
  2140   000C44  0D04               	mullw	4
  2141   000C46  0E00               	movlw	low _Im_Xm1
  2142   000C48  24F3               	addwf	243,w,c
  2143   000C4A  6ED9               	movwf	fsr2l,c
  2144   000C4C  0E06               	movlw	high _Im_Xm1
  2145   000C4E  20F4               	addwfc	prodh,w,c
  2146   000C50  6EDA               	movwf	fsr2h,c
  2147   000C52  CFDE F064          	movff	postinc2,___flsub@a
  2148   000C56  CFDE F065          	movff	postinc2,___flsub@a+1
  2149   000C5A  CFDE F066          	movff	postinc2,___flsub@a+2
  2150   000C5E  CFDE F067          	movff	postinc2,___flsub@a+3
  2151   000C62  5051               	movf	_k^0,w,c
  2152   000C64  0D04               	mullw	4
  2153   000C66  0E80               	movlw	low _Im_X
  2154   000C68  24F3               	addwf	243,w,c
  2155   000C6A  6ED9               	movwf	fsr2l,c
  2156   000C6C  0E04               	movlw	high _Im_X
  2157   000C6E  20F4               	addwfc	prodh,w,c
  2158   000C70  6EDA               	movwf	fsr2h,c
  2159   000C72  CFDE F060          	movff	postinc2,___flsub@b
  2160   000C76  CFDE F061          	movff	postinc2,___flsub@b+1
  2161   000C7A  CFDE F062          	movff	postinc2,___flsub@b+2
  2162   000C7E  CFDE F063          	movff	postinc2,___flsub@b+3
  2163   000C82  ECBB  F035         	call	___flsub	;wreg free
  2164   000C86  C060  F068         	movff	?___flsub,___fldiv@b
  2165   000C8A  C061  F069         	movff	?___flsub+1,___fldiv@b+1
  2166   000C8E  C062  F06A         	movff	?___flsub+2,___fldiv@b+2
  2167   000C92  C063  F06B         	movff	?___flsub+3,___fldiv@b+3
  2168   000C96  0E00               	movlw	0
  2169   000C98  0100               	movlb	0	; () banked
  2170   000C9A  6F6C               	movwf	___fldiv@a& (0+255),b
  2171   000C9C  0E00               	movlw	0
  2172   000C9E  6F6D               	movwf	(___fldiv@a+1)& (0+255),b
  2173   000CA0  0E00               	movlw	0
  2174   000CA2  6F6E               	movwf	(___fldiv@a+2)& (0+255),b
  2175   000CA4  0E40               	movlw	64
  2176   000CA6  6F6F               	movwf	(___fldiv@a+3)& (0+255),b
  2177   000CA8  EC95  F024         	call	___fldiv	;wreg free
  2178   000CAC  5051               	movf	_k^0,w,c
  2179   000CAE  0D04               	mullw	4
  2180   000CB0  0E00               	movlw	low _Im_X1
  2181   000CB2  24F3               	addwf	243,w,c
  2182   000CB4  6ED9               	movwf	fsr2l,c
  2183   000CB6  0E02               	movlw	high _Im_X1
  2184   000CB8  20F4               	addwfc	prodh,w,c
  2185   000CBA  6EDA               	movwf	fsr2h,c
  2186   000CBC  0100               	movlb	0	; () banked
  2187   000CBE  C068  FFDE         	movff	?___fldiv,postinc2
  2188   000CC2  C069  FFDE         	movff	?___fldiv+1,postinc2
  2189   000CC6  C06A  FFDE         	movff	?___fldiv+2,postinc2
  2190   000CCA  C06B  FFDE         	movff	?___fldiv+3,postinc2
  2191                           
  2192                           ;main.c: 78:             Re_X1[k]=sqrtf(Re_X1[k]*Re_X1[k] + Im_X1[k]*Im_X1[k]);
  2193   000CCE  5051               	movf	_k^0,w,c
  2194   000CD0  0D04               	mullw	4
  2195   000CD2  0E80               	movlw	low _Re_X1
  2196   000CD4  24F3               	addwf	243,w,c
  2197   000CD6  6ED9               	movwf	fsr2l,c
  2198   000CD8  0E02               	movlw	high _Re_X1
  2199   000CDA  20F4               	addwfc	prodh,w,c
  2200   000CDC  6EDA               	movwf	fsr2h,c
  2201   000CDE  CFDE F01F          	movff	postinc2,___flmul@a
  2202   000CE2  CFDE F020          	movff	postinc2,___flmul@a+1
  2203   000CE6  CFDE F021          	movff	postinc2,___flmul@a+2
  2204   000CEA  CFDE F022          	movff	postinc2,___flmul@a+3
  2205   000CEE  5051               	movf	_k^0,w,c
  2206   000CF0  0D04               	mullw	4
  2207   000CF2  0E80               	movlw	low _Re_X1
  2208   000CF4  24F3               	addwf	243,w,c
  2209   000CF6  6ED9               	movwf	fsr2l,c
  2210   000CF8  0E02               	movlw	high _Re_X1
  2211   000CFA  20F4               	addwfc	prodh,w,c
  2212   000CFC  6EDA               	movwf	fsr2h,c
  2213   000CFE  CFDE F01B          	movff	postinc2,___flmul@b
  2214   000D02  CFDE F01C          	movff	postinc2,___flmul@b+1
  2215   000D06  CFDE F01D          	movff	postinc2,___flmul@b+2
  2216   000D0A  CFDE F01E          	movff	postinc2,___flmul@b+3
  2217   000D0E  EC80  F022         	call	___flmul	;wreg free
  2218   000D12  C01B  F034         	movff	?___flmul,___fladd@b
  2219   000D16  C01C  F035         	movff	?___flmul+1,___fladd@b+1
  2220   000D1A  C01D  F036         	movff	?___flmul+2,___fladd@b+2
  2221   000D1E  C01E  F037         	movff	?___flmul+3,___fladd@b+3
  2222   000D22  5051               	movf	_k^0,w,c
  2223   000D24  0D04               	mullw	4
  2224   000D26  0E00               	movlw	low _Im_X1
  2225   000D28  24F3               	addwf	243,w,c
  2226   000D2A  6ED9               	movwf	fsr2l,c
  2227   000D2C  0E02               	movlw	high _Im_X1
  2228   000D2E  20F4               	addwfc	prodh,w,c
  2229   000D30  6EDA               	movwf	fsr2h,c
  2230   000D32  CFDE F01F          	movff	postinc2,___flmul@a
  2231   000D36  CFDE F020          	movff	postinc2,___flmul@a+1
  2232   000D3A  CFDE F021          	movff	postinc2,___flmul@a+2
  2233   000D3E  CFDE F022          	movff	postinc2,___flmul@a+3
  2234   000D42  5051               	movf	_k^0,w,c
  2235   000D44  0D04               	mullw	4
  2236   000D46  0E00               	movlw	low _Im_X1
  2237   000D48  24F3               	addwf	243,w,c
  2238   000D4A  6ED9               	movwf	fsr2l,c
  2239   000D4C  0E02               	movlw	high _Im_X1
  2240   000D4E  20F4               	addwfc	prodh,w,c
  2241   000D50  6EDA               	movwf	fsr2h,c
  2242   000D52  CFDE F01B          	movff	postinc2,___flmul@b
  2243   000D56  CFDE F01C          	movff	postinc2,___flmul@b+1
  2244   000D5A  CFDE F01D          	movff	postinc2,___flmul@b+2
  2245   000D5E  CFDE F01E          	movff	postinc2,___flmul@b+3
  2246   000D62  EC80  F022         	call	___flmul	;wreg free
  2247   000D66  C01B  F038         	movff	?___flmul,___fladd@a
  2248   000D6A  C01C  F039         	movff	?___flmul+1,___fladd@a+1
  2249   000D6E  C01D  F03A         	movff	?___flmul+2,___fladd@a+2
  2250   000D72  C01E  F03B         	movff	?___flmul+3,___fladd@a+3
  2251   000D76  ECD8  F01D         	call	___fladd	;wreg free
  2252   000D7A  C034  F3DC         	movff	?___fladd,_main$1788
  2253   000D7E  C035  F3DD         	movff	?___fladd+1,_main$1788+1
  2254   000D82  C036  F3DE         	movff	?___fladd+2,_main$1788+2
  2255   000D86  C037  F3DF         	movff	?___fladd+3,_main$1788+3
  2256                           
  2257                           ;main.c: 78:             Re_X1[k]=sqrtf(Re_X1[k]*Re_X1[k] + Im_X1[k]*Im_X1[k]);
  2258   000D8A  C3DC  F060         	movff	_main$1788,sqrtf@x
  2259   000D8E  C3DD  F061         	movff	_main$1788+1,sqrtf@x+1
  2260   000D92  C3DE  F062         	movff	_main$1788+2,sqrtf@x+2
  2261   000D96  C3DF  F063         	movff	_main$1788+3,sqrtf@x+3
  2262   000D9A  EC78  F01B         	call	_sqrtf	;wreg free
  2263   000D9E  5051               	movf	_k^0,w,c
  2264   000DA0  0D04               	mullw	4
  2265   000DA2  0E80               	movlw	low _Re_X1
  2266   000DA4  24F3               	addwf	243,w,c
  2267   000DA6  6ED9               	movwf	fsr2l,c
  2268   000DA8  0E02               	movlw	high _Re_X1
  2269   000DAA  20F4               	addwfc	prodh,w,c
  2270   000DAC  6EDA               	movwf	fsr2h,c
  2271   000DAE  0100               	movlb	0	; () banked
  2272   000DB0  C060  FFDE         	movff	?_sqrtf,postinc2
  2273   000DB4  C061  FFDE         	movff	?_sqrtf+1,postinc2
  2274   000DB8  C062  FFDE         	movff	?_sqrtf+2,postinc2
  2275   000DBC  C063  FFDE         	movff	?_sqrtf+3,postinc2
  2276                           
  2277                           ;main.c: 79:             a[k] = 100*Re_X1[k];
  2278   000DC0  0E00               	movlw	0
  2279   000DC2  6E1F               	movwf	___flmul@a^0,c
  2280   000DC4  0E00               	movlw	0
  2281   000DC6  6E20               	movwf	(___flmul@a+1)^0,c
  2282   000DC8  0EC8               	movlw	200
  2283   000DCA  6E21               	movwf	(___flmul@a+2)^0,c
  2284   000DCC  0E42               	movlw	66
  2285   000DCE  6E22               	movwf	(___flmul@a+3)^0,c
  2286   000DD0  5051               	movf	_k^0,w,c
  2287   000DD2  0D04               	mullw	4
  2288   000DD4  0E80               	movlw	low _Re_X1
  2289   000DD6  24F3               	addwf	243,w,c
  2290   000DD8  6ED9               	movwf	fsr2l,c
  2291   000DDA  0E02               	movlw	high _Re_X1
  2292   000DDC  20F4               	addwfc	prodh,w,c
  2293   000DDE  6EDA               	movwf	fsr2h,c
  2294   000DE0  CFDE F01B          	movff	postinc2,___flmul@b
  2295   000DE4  CFDE F01C          	movff	postinc2,___flmul@b+1
  2296   000DE8  CFDE F01D          	movff	postinc2,___flmul@b+2
  2297   000DEC  CFDE F01E          	movff	postinc2,___flmul@b+3
  2298   000DF0  EC80  F022         	call	___flmul	;wreg free
  2299   000DF4  C01B  F0CD         	movff	?___flmul,___fltol@f1
  2300   000DF8  C01C  F0CE         	movff	?___flmul+1,___fltol@f1+1
  2301   000DFC  C01D  F0CF         	movff	?___flmul+2,___fltol@f1+2
  2302   000E00  C01E  F0D0         	movff	?___flmul+3,___fltol@f1+3
  2303   000E04  EC45  F030         	call	___fltol	;wreg free
  2304   000E08  5051               	movf	_k^0,w,c
  2305   000E0A  0D02               	mullw	2
  2306   000E0C  0E40               	movlw	low _a
  2307   000E0E  24F3               	addwf	243,w,c
  2308   000E10  6ED9               	movwf	fsr2l,c
  2309   000E12  0E04               	movlw	high _a
  2310   000E14  20F4               	addwfc	prodh,w,c
  2311   000E16  6EDA               	movwf	fsr2h,c
  2312   000E18  0100               	movlb	0	; () banked
  2313   000E1A  C0CD  FFDE         	movff	?___fltol,postinc2
  2314   000E1E  C0CE  FFDD         	movff	?___fltol+1,postdec2
  2315                           
  2316                           ;main.c: 81:             Re_X1[k] = (Im_X[k] + Im_Xm1[k])/2;
  2317   000E22  5051               	movf	_k^0,w,c
  2318   000E24  0D04               	mullw	4
  2319   000E26  0E00               	movlw	low _Im_Xm1
  2320   000E28  24F3               	addwf	243,w,c
  2321   000E2A  6ED9               	movwf	fsr2l,c
  2322   000E2C  0E06               	movlw	high _Im_Xm1
  2323   000E2E  20F4               	addwfc	prodh,w,c
  2324   000E30  6EDA               	movwf	fsr2h,c
  2325   000E32  CFDE F038          	movff	postinc2,___fladd@a
  2326   000E36  CFDE F039          	movff	postinc2,___fladd@a+1
  2327   000E3A  CFDE F03A          	movff	postinc2,___fladd@a+2
  2328   000E3E  CFDE F03B          	movff	postinc2,___fladd@a+3
  2329   000E42  5051               	movf	_k^0,w,c
  2330   000E44  0D04               	mullw	4
  2331   000E46  0E80               	movlw	low _Im_X
  2332   000E48  24F3               	addwf	243,w,c
  2333   000E4A  6ED9               	movwf	fsr2l,c
  2334   000E4C  0E04               	movlw	high _Im_X
  2335   000E4E  20F4               	addwfc	prodh,w,c
  2336   000E50  6EDA               	movwf	fsr2h,c
  2337   000E52  CFDE F034          	movff	postinc2,___fladd@b
  2338   000E56  CFDE F035          	movff	postinc2,___fladd@b+1
  2339   000E5A  CFDE F036          	movff	postinc2,___fladd@b+2
  2340   000E5E  CFDE F037          	movff	postinc2,___fladd@b+3
  2341   000E62  ECD8  F01D         	call	___fladd	;wreg free
  2342   000E66  C034  F068         	movff	?___fladd,___fldiv@b
  2343   000E6A  C035  F069         	movff	?___fladd+1,___fldiv@b+1
  2344   000E6E  C036  F06A         	movff	?___fladd+2,___fldiv@b+2
  2345   000E72  C037  F06B         	movff	?___fladd+3,___fldiv@b+3
  2346   000E76  0E00               	movlw	0
  2347   000E78  0100               	movlb	0	; () banked
  2348   000E7A  6F6C               	movwf	___fldiv@a& (0+255),b
  2349   000E7C  0E00               	movlw	0
  2350   000E7E  6F6D               	movwf	(___fldiv@a+1)& (0+255),b
  2351   000E80  0E00               	movlw	0
  2352   000E82  6F6E               	movwf	(___fldiv@a+2)& (0+255),b
  2353   000E84  0E40               	movlw	64
  2354   000E86  6F6F               	movwf	(___fldiv@a+3)& (0+255),b
  2355   000E88  EC95  F024         	call	___fldiv	;wreg free
  2356   000E8C  5051               	movf	_k^0,w,c
  2357   000E8E  0D04               	mullw	4
  2358   000E90  0E80               	movlw	low _Re_X1
  2359   000E92  24F3               	addwf	243,w,c
  2360   000E94  6ED9               	movwf	fsr2l,c
  2361   000E96  0E02               	movlw	high _Re_X1
  2362   000E98  20F4               	addwfc	prodh,w,c
  2363   000E9A  6EDA               	movwf	fsr2h,c
  2364   000E9C  0100               	movlb	0	; () banked
  2365   000E9E  C068  FFDE         	movff	?___fldiv,postinc2
  2366   000EA2  C069  FFDE         	movff	?___fldiv+1,postinc2
  2367   000EA6  C06A  FFDE         	movff	?___fldiv+2,postinc2
  2368   000EAA  C06B  FFDE         	movff	?___fldiv+3,postinc2
  2369                           
  2370                           ;main.c: 82:             Im_X1[k] = (Re_Xm1[k] - Re_X[k])/2;
  2371   000EAE  5051               	movf	_k^0,w,c
  2372   000EB0  0D04               	mullw	4
  2373   000EB2  0E50               	movlw	low _Re_X
  2374   000EB4  24F3               	addwf	243,w,c
  2375   000EB6  6ED9               	movwf	fsr2l,c
  2376   000EB8  0E03               	movlw	high _Re_X
  2377   000EBA  20F4               	addwfc	prodh,w,c
  2378   000EBC  6EDA               	movwf	fsr2h,c
  2379   000EBE  CFDE F064          	movff	postinc2,___flsub@a
  2380   000EC2  CFDE F065          	movff	postinc2,___flsub@a+1
  2381   000EC6  CFDE F066          	movff	postinc2,___flsub@a+2
  2382   000ECA  CFDE F067          	movff	postinc2,___flsub@a+3
  2383   000ECE  5051               	movf	_k^0,w,c
  2384   000ED0  0D04               	mullw	4
  2385   000ED2  0E00               	movlw	low _Re_Xm1
  2386   000ED4  24F3               	addwf	243,w,c
  2387   000ED6  6ED9               	movwf	fsr2l,c
  2388   000ED8  0E05               	movlw	high _Re_Xm1
  2389   000EDA  20F4               	addwfc	prodh,w,c
  2390   000EDC  6EDA               	movwf	fsr2h,c
  2391   000EDE  CFDE F060          	movff	postinc2,___flsub@b
  2392   000EE2  CFDE F061          	movff	postinc2,___flsub@b+1
  2393   000EE6  CFDE F062          	movff	postinc2,___flsub@b+2
  2394   000EEA  CFDE F063          	movff	postinc2,___flsub@b+3
  2395   000EEE  ECBB  F035         	call	___flsub	;wreg free
  2396   000EF2  C060  F068         	movff	?___flsub,___fldiv@b
  2397   000EF6  C061  F069         	movff	?___flsub+1,___fldiv@b+1
  2398   000EFA  C062  F06A         	movff	?___flsub+2,___fldiv@b+2
  2399   000EFE  C063  F06B         	movff	?___flsub+3,___fldiv@b+3
  2400   000F02  0E00               	movlw	0
  2401   000F04  0100               	movlb	0	; () banked
  2402   000F06  6F6C               	movwf	___fldiv@a& (0+255),b
  2403   000F08  0E00               	movlw	0
  2404   000F0A  6F6D               	movwf	(___fldiv@a+1)& (0+255),b
  2405   000F0C  0E00               	movlw	0
  2406   000F0E  6F6E               	movwf	(___fldiv@a+2)& (0+255),b
  2407   000F10  0E40               	movlw	64
  2408   000F12  6F6F               	movwf	(___fldiv@a+3)& (0+255),b
  2409   000F14  EC95  F024         	call	___fldiv	;wreg free
  2410   000F18  5051               	movf	_k^0,w,c
  2411   000F1A  0D04               	mullw	4
  2412   000F1C  0E00               	movlw	low _Im_X1
  2413   000F1E  24F3               	addwf	243,w,c
  2414   000F20  6ED9               	movwf	fsr2l,c
  2415   000F22  0E02               	movlw	high _Im_X1
  2416   000F24  20F4               	addwfc	prodh,w,c
  2417   000F26  6EDA               	movwf	fsr2h,c
  2418   000F28  0100               	movlb	0	; () banked
  2419   000F2A  C068  FFDE         	movff	?___fldiv,postinc2
  2420   000F2E  C069  FFDE         	movff	?___fldiv+1,postinc2
  2421   000F32  C06A  FFDE         	movff	?___fldiv+2,postinc2
  2422   000F36  C06B  FFDE         	movff	?___fldiv+3,postinc2
  2423                           
  2424                           ;main.c: 84:             Im_X1[k]=sqrtf(Re_X1[k]*Re_X1[k] + Im_X1[k]*Im_X1[k]);
  2425   000F3A  5051               	movf	_k^0,w,c
  2426   000F3C  0D04               	mullw	4
  2427   000F3E  0E80               	movlw	low _Re_X1
  2428   000F40  24F3               	addwf	243,w,c
  2429   000F42  6ED9               	movwf	fsr2l,c
  2430   000F44  0E02               	movlw	high _Re_X1
  2431   000F46  20F4               	addwfc	prodh,w,c
  2432   000F48  6EDA               	movwf	fsr2h,c
  2433   000F4A  CFDE F01F          	movff	postinc2,___flmul@a
  2434   000F4E  CFDE F020          	movff	postinc2,___flmul@a+1
  2435   000F52  CFDE F021          	movff	postinc2,___flmul@a+2
  2436   000F56  CFDE F022          	movff	postinc2,___flmul@a+3
  2437   000F5A  5051               	movf	_k^0,w,c
  2438   000F5C  0D04               	mullw	4
  2439   000F5E  0E80               	movlw	low _Re_X1
  2440   000F60  24F3               	addwf	243,w,c
  2441   000F62  6ED9               	movwf	fsr2l,c
  2442   000F64  0E02               	movlw	high _Re_X1
  2443   000F66  20F4               	addwfc	prodh,w,c
  2444   000F68  6EDA               	movwf	fsr2h,c
  2445   000F6A  CFDE F01B          	movff	postinc2,___flmul@b
  2446   000F6E  CFDE F01C          	movff	postinc2,___flmul@b+1
  2447   000F72  CFDE F01D          	movff	postinc2,___flmul@b+2
  2448   000F76  CFDE F01E          	movff	postinc2,___flmul@b+3
  2449   000F7A  EC80  F022         	call	___flmul	;wreg free
  2450   000F7E  C01B  F034         	movff	?___flmul,___fladd@b
  2451   000F82  C01C  F035         	movff	?___flmul+1,___fladd@b+1
  2452   000F86  C01D  F036         	movff	?___flmul+2,___fladd@b+2
  2453   000F8A  C01E  F037         	movff	?___flmul+3,___fladd@b+3
  2454   000F8E  5051               	movf	_k^0,w,c
  2455   000F90  0D04               	mullw	4
  2456   000F92  0E00               	movlw	low _Im_X1
  2457   000F94  24F3               	addwf	243,w,c
  2458   000F96  6ED9               	movwf	fsr2l,c
  2459   000F98  0E02               	movlw	high _Im_X1
  2460   000F9A  20F4               	addwfc	prodh,w,c
  2461   000F9C  6EDA               	movwf	fsr2h,c
  2462   000F9E  CFDE F01F          	movff	postinc2,___flmul@a
  2463   000FA2  CFDE F020          	movff	postinc2,___flmul@a+1
  2464   000FA6  CFDE F021          	movff	postinc2,___flmul@a+2
  2465   000FAA  CFDE F022          	movff	postinc2,___flmul@a+3
  2466   000FAE  5051               	movf	_k^0,w,c
  2467   000FB0  0D04               	mullw	4
  2468   000FB2  0E00               	movlw	low _Im_X1
  2469   000FB4  24F3               	addwf	243,w,c
  2470   000FB6  6ED9               	movwf	fsr2l,c
  2471   000FB8  0E02               	movlw	high _Im_X1
  2472   000FBA  20F4               	addwfc	prodh,w,c
  2473   000FBC  6EDA               	movwf	fsr2h,c
  2474   000FBE  CFDE F01B          	movff	postinc2,___flmul@b
  2475   000FC2  CFDE F01C          	movff	postinc2,___flmul@b+1
  2476   000FC6  CFDE F01D          	movff	postinc2,___flmul@b+2
  2477   000FCA  CFDE F01E          	movff	postinc2,___flmul@b+3
  2478   000FCE  EC80  F022         	call	___flmul	;wreg free
  2479   000FD2  C01B  F038         	movff	?___flmul,___fladd@a
  2480   000FD6  C01C  F039         	movff	?___flmul+1,___fladd@a+1
  2481   000FDA  C01D  F03A         	movff	?___flmul+2,___fladd@a+2
  2482   000FDE  C01E  F03B         	movff	?___flmul+3,___fladd@a+3
  2483   000FE2  ECD8  F01D         	call	___fladd	;wreg free
  2484   000FE6  C034  F3DC         	movff	?___fladd,_main$1788
  2485   000FEA  C035  F3DD         	movff	?___fladd+1,_main$1788+1
  2486   000FEE  C036  F3DE         	movff	?___fladd+2,_main$1788+2
  2487   000FF2  C037  F3DF         	movff	?___fladd+3,_main$1788+3
  2488                           
  2489                           ;main.c: 84:             Im_X1[k]=sqrtf(Re_X1[k]*Re_X1[k] + Im_X1[k]*Im_X1[k]);
  2490   000FF6  C3DC  F060         	movff	_main$1788,sqrtf@x
  2491   000FFA  C3DD  F061         	movff	_main$1788+1,sqrtf@x+1
  2492   000FFE  C3DE  F062         	movff	_main$1788+2,sqrtf@x+2
  2493   001002  C3DF  F063         	movff	_main$1788+3,sqrtf@x+3
  2494   001006  EC78  F01B         	call	_sqrtf	;wreg free
  2495   00100A  5051               	movf	_k^0,w,c
  2496   00100C  0D04               	mullw	4
  2497   00100E  0E00               	movlw	low _Im_X1
  2498   001010  24F3               	addwf	243,w,c
  2499   001012  6ED9               	movwf	fsr2l,c
  2500   001014  0E02               	movlw	high _Im_X1
  2501   001016  20F4               	addwfc	prodh,w,c
  2502   001018  6EDA               	movwf	fsr2h,c
  2503   00101A  0100               	movlb	0	; () banked
  2504   00101C  C060  FFDE         	movff	?_sqrtf,postinc2
  2505   001020  C061  FFDE         	movff	?_sqrtf+1,postinc2
  2506   001024  C062  FFDE         	movff	?_sqrtf+2,postinc2
  2507   001028  C063  FFDE         	movff	?_sqrtf+3,postinc2
  2508                           
  2509                           ;main.c: 85:             b[k] = 100*Im_X1[k];}
  2510   00102C  0E00               	movlw	0
  2511   00102E  6E1F               	movwf	___flmul@a^0,c
  2512   001030  0E00               	movlw	0
  2513   001032  6E20               	movwf	(___flmul@a+1)^0,c
  2514   001034  0EC8               	movlw	200
  2515   001036  6E21               	movwf	(___flmul@a+2)^0,c
  2516   001038  0E42               	movlw	66
  2517   00103A  6E22               	movwf	(___flmul@a+3)^0,c
  2518   00103C  5051               	movf	_k^0,w,c
  2519   00103E  0D04               	mullw	4
  2520   001040  0E00               	movlw	low _Im_X1
  2521   001042  24F3               	addwf	243,w,c
  2522   001044  6ED9               	movwf	fsr2l,c
  2523   001046  0E02               	movlw	high _Im_X1
  2524   001048  20F4               	addwfc	prodh,w,c
  2525   00104A  6EDA               	movwf	fsr2h,c
  2526   00104C  CFDE F01B          	movff	postinc2,___flmul@b
  2527   001050  CFDE F01C          	movff	postinc2,___flmul@b+1
  2528   001054  CFDE F01D          	movff	postinc2,___flmul@b+2
  2529   001058  CFDE F01E          	movff	postinc2,___flmul@b+3
  2530   00105C  EC80  F022         	call	___flmul	;wreg free
  2531   001060  C01B  F0CD         	movff	?___flmul,___fltol@f1
  2532   001064  C01C  F0CE         	movff	?___flmul+1,___fltol@f1+1
  2533   001068  C01D  F0CF         	movff	?___flmul+2,___fltol@f1+2
  2534   00106C  C01E  F0D0         	movff	?___flmul+3,___fltol@f1+3
  2535   001070  EC45  F030         	call	___fltol	;wreg free
  2536   001074  5051               	movf	_k^0,w,c
  2537   001076  0D02               	mullw	2
  2538   001078  0E00               	movlw	low _b
  2539   00107A  24F3               	addwf	243,w,c
  2540   00107C  6ED9               	movwf	fsr2l,c
  2541   00107E  0E04               	movlw	high _b
  2542   001080  20F4               	addwfc	prodh,w,c
  2543   001082  6EDA               	movwf	fsr2h,c
  2544   001084  0100               	movlb	0	; () banked
  2545   001086  C0CD  FFDE         	movff	?___fltol,postinc2
  2546   00108A  C0CE  FFDD         	movff	?___fltol+1,postdec2
  2547   00108E                     
  2548                           ; BSR set to: 0
  2549   00108E  2A51               	incf	_k^0,f,c
  2550   001090  EFD1  F005         	goto	l8117
  2551   001094                     l8127:
  2552                           
  2553                           ;main.c: 87:         max1=0;
  2554   001094  0E00               	movlw	0
  2555   001096  0101               	movlb	1	; () banked
  2556   001098  6F64               	movwf	_max1& (0+255),b
  2557   00109A  0E00               	movlw	0
  2558   00109C  6F65               	movwf	(_max1+1)& (0+255),b
  2559   00109E  0E00               	movlw	0
  2560   0010A0  6F66               	movwf	(_max1+2)& (0+255),b
  2561   0010A2  0E00               	movlw	0
  2562   0010A4  6F67               	movwf	(_max1+3)& (0+255),b
  2563                           
  2564                           ;main.c: 88:         max2=0;
  2565   0010A6  0E00               	movlw	0
  2566   0010A8  6F60               	movwf	_max2& (0+255),b
  2567   0010AA  0E00               	movlw	0
  2568   0010AC  6F61               	movwf	(_max2+1)& (0+255),b
  2569   0010AE  0E00               	movlw	0
  2570   0010B0  6F62               	movwf	(_max2+2)& (0+255),b
  2571   0010B2  0E00               	movlw	0
  2572   0010B4  6F63               	movwf	(_max2+3)& (0+255),b
  2573                           
  2574                           ;main.c: 89:         for (k=20; k<32; k++){
  2575   0010B6  0E14               	movlw	20
  2576   0010B8  6E51               	movwf	_k^0,c
  2577   0010BA                     l8129:
  2578   0010BA  0E1F               	movlw	31
  2579   0010BC  6451               	cpfsgt	_k^0,c
  2580   0010BE  EF63  F008         	goto	u8171
  2581   0010C2  EF65  F008         	goto	u8170
  2582   0010C6                     u8171:
  2583   0010C6  EF67  F008         	goto	l8133
  2584   0010CA                     u8170:
  2585   0010CA  EF00  F009         	goto	l8143
  2586   0010CE                     l8133:
  2587                           
  2588                           ;main.c: 90:             if (max1 < a[k]){
  2589   0010CE  C164  F034         	movff	_max1,___flge@ff1
  2590   0010D2  C165  F035         	movff	_max1+1,___flge@ff1+1
  2591   0010D6  C166  F036         	movff	_max1+2,___flge@ff1+2
  2592   0010DA  C167  F037         	movff	_max1+3,___flge@ff1+3
  2593   0010DE  5051               	movf	_k^0,w,c
  2594   0010E0  0D02               	mullw	2
  2595   0010E2  0E40               	movlw	low _a
  2596   0010E4  24F3               	addwf	243,w,c
  2597   0010E6  6ED9               	movwf	fsr2l,c
  2598   0010E8  0E04               	movlw	high _a
  2599   0010EA  20F4               	addwfc	prodh,w,c
  2600   0010EC  6EDA               	movwf	fsr2h,c
  2601   0010EE  CFDE F1F3          	movff	postinc2,??_main
  2602   0010F2  CFDD F1F4          	movff	postdec2,??_main+1
  2603   0010F6  C1F3  F00D         	movff	??_main,___xxtofl@val
  2604   0010FA  C1F4  F00E         	movff	??_main+1,___xxtofl@val+1
  2605   0010FE  6A0F               	clrf	(___xxtofl@val+2)^0,c
  2606   001100  6A10               	clrf	(___xxtofl@val+3)^0,c
  2607   001102  0E00               	movlw	0
  2608   001104  ECC6  F02E         	call	___xxtofl
  2609   001108  C00D  F038         	movff	?___xxtofl,___flge@ff2
  2610   00110C  C00E  F039         	movff	?___xxtofl+1,___flge@ff2+1
  2611   001110  C00F  F03A         	movff	?___xxtofl+2,___flge@ff2+2
  2612   001114  C010  F03B         	movff	?___xxtofl+3,___flge@ff2+3
  2613   001118  ECC9  F030         	call	___flge	;wreg free
  2614   00111C  B0D8               	btfsc	status,0,c
  2615   00111E  EF93  F008         	goto	u8181
  2616   001122  EF95  F008         	goto	u8180
  2617   001126                     u8181:
  2618   001126  EFB2  F008         	goto	l172
  2619   00112A                     u8180:
  2620   00112A                     
  2621                           ;main.c: 91:                 max1 = a[k];}
  2622   00112A  5051               	movf	_k^0,w,c
  2623   00112C  0D02               	mullw	2
  2624   00112E  0E40               	movlw	low _a
  2625   001130  24F3               	addwf	243,w,c
  2626   001132  6ED9               	movwf	fsr2l,c
  2627   001134  0E04               	movlw	high _a
  2628   001136  20F4               	addwfc	prodh,w,c
  2629   001138  6EDA               	movwf	fsr2h,c
  2630   00113A  CFDE F1F3          	movff	postinc2,??_main
  2631   00113E  CFDD F1F4          	movff	postdec2,??_main+1
  2632   001142  C1F3  F00D         	movff	??_main,___xxtofl@val
  2633   001146  C1F4  F00E         	movff	??_main+1,___xxtofl@val+1
  2634   00114A  6A0F               	clrf	(___xxtofl@val+2)^0,c
  2635   00114C  6A10               	clrf	(___xxtofl@val+3)^0,c
  2636   00114E  0E00               	movlw	0
  2637   001150  ECC6  F02E         	call	___xxtofl
  2638   001154  C00D  F164         	movff	?___xxtofl,_max1
  2639   001158  C00E  F165         	movff	?___xxtofl+1,_max1+1
  2640   00115C  C00F  F166         	movff	?___xxtofl+2,_max1+2
  2641   001160  C010  F167         	movff	?___xxtofl+3,_max1+3
  2642   001164                     l172:
  2643                           
  2644                           ;main.c: 92:             if (max2 < b[k]){
  2645   001164  C160  F034         	movff	_max2,___flge@ff1
  2646   001168  C161  F035         	movff	_max2+1,___flge@ff1+1
  2647   00116C  C162  F036         	movff	_max2+2,___flge@ff1+2
  2648   001170  C163  F037         	movff	_max2+3,___flge@ff1+3
  2649   001174  5051               	movf	_k^0,w,c
  2650   001176  0D02               	mullw	2
  2651   001178  0E00               	movlw	low _b
  2652   00117A  24F3               	addwf	243,w,c
  2653   00117C  6ED9               	movwf	fsr2l,c
  2654   00117E  0E04               	movlw	high _b
  2655   001180  20F4               	addwfc	prodh,w,c
  2656   001182  6EDA               	movwf	fsr2h,c
  2657   001184  CFDE F1F3          	movff	postinc2,??_main
  2658   001188  CFDD F1F4          	movff	postdec2,??_main+1
  2659   00118C  C1F3  F00D         	movff	??_main,___xxtofl@val
  2660   001190  C1F4  F00E         	movff	??_main+1,___xxtofl@val+1
  2661   001194  6A0F               	clrf	(___xxtofl@val+2)^0,c
  2662   001196  6A10               	clrf	(___xxtofl@val+3)^0,c
  2663   001198  0E00               	movlw	0
  2664   00119A  ECC6  F02E         	call	___xxtofl
  2665   00119E  C00D  F038         	movff	?___xxtofl,___flge@ff2
  2666   0011A2  C00E  F039         	movff	?___xxtofl+1,___flge@ff2+1
  2667   0011A6  C00F  F03A         	movff	?___xxtofl+2,___flge@ff2+2
  2668   0011AA  C010  F03B         	movff	?___xxtofl+3,___flge@ff2+3
  2669   0011AE  ECC9  F030         	call	___flge	;wreg free
  2670   0011B2  B0D8               	btfsc	status,0,c
  2671   0011B4  EFDE  F008         	goto	u8191
  2672   0011B8  EFE0  F008         	goto	u8190
  2673   0011BC                     u8191:
  2674   0011BC  EFFD  F008         	goto	l8139
  2675   0011C0                     u8190:
  2676   0011C0                     
  2677                           ;main.c: 93:                 max2 = b[k];}}
  2678   0011C0  5051               	movf	_k^0,w,c
  2679   0011C2  0D02               	mullw	2
  2680   0011C4  0E00               	movlw	low _b
  2681   0011C6  24F3               	addwf	243,w,c
  2682   0011C8  6ED9               	movwf	fsr2l,c
  2683   0011CA  0E04               	movlw	high _b
  2684   0011CC  20F4               	addwfc	prodh,w,c
  2685   0011CE  6EDA               	movwf	fsr2h,c
  2686   0011D0  CFDE F1F3          	movff	postinc2,??_main
  2687   0011D4  CFDD F1F4          	movff	postdec2,??_main+1
  2688   0011D8  C1F3  F00D         	movff	??_main,___xxtofl@val
  2689   0011DC  C1F4  F00E         	movff	??_main+1,___xxtofl@val+1
  2690   0011E0  6A0F               	clrf	(___xxtofl@val+2)^0,c
  2691   0011E2  6A10               	clrf	(___xxtofl@val+3)^0,c
  2692   0011E4  0E00               	movlw	0
  2693   0011E6  ECC6  F02E         	call	___xxtofl
  2694   0011EA  C00D  F160         	movff	?___xxtofl,_max2
  2695   0011EE  C00E  F161         	movff	?___xxtofl+1,_max2+1
  2696   0011F2  C00F  F162         	movff	?___xxtofl+2,_max2+2
  2697   0011F6  C010  F163         	movff	?___xxtofl+3,_max2+3
  2698   0011FA                     l8139:
  2699   0011FA  2A51               	incf	_k^0,f,c
  2700   0011FC  EF5D  F008         	goto	l8129
  2701   001200                     l8143:
  2702                           
  2703                           ;main.c: 95:         float aux;;main.c: 96:         aux=max1/max2;
  2704   001200  C164  F068         	movff	_max1,___fldiv@b
  2705   001204  C165  F069         	movff	_max1+1,___fldiv@b+1
  2706   001208  C166  F06A         	movff	_max1+2,___fldiv@b+2
  2707   00120C  C167  F06B         	movff	_max1+3,___fldiv@b+3
  2708   001210  C160  F06C         	movff	_max2,___fldiv@a
  2709   001214  C161  F06D         	movff	_max2+1,___fldiv@a+1
  2710   001218  C162  F06E         	movff	_max2+2,___fldiv@a+2
  2711   00121C  C163  F06F         	movff	_max2+3,___fldiv@a+3
  2712   001220  EC95  F024         	call	___fldiv	;wreg free
  2713   001224  C068  F3D0         	movff	?___fldiv,main@aux
  2714   001228  C069  F3D1         	movff	?___fldiv+1,main@aux+1
  2715   00122C  C06A  F3D2         	movff	?___fldiv+2,main@aux+2
  2716   001230  C06B  F3D3         	movff	?___fldiv+3,main@aux+3
  2717   001234                     
  2718                           ;main.c: 97:         D2[e]=1000*logf(aux)/logf(2);
  2719   001234  C3D0  F081         	movff	main@aux,logf@x
  2720   001238  C3D1  F082         	movff	main@aux+1,logf@x+1
  2721   00123C  C3D2  F083         	movff	main@aux+2,logf@x+2
  2722   001240  C3D3  F084         	movff	main@aux+3,logf@x+3
  2723   001244  EC96  F00E         	call	_logf	;wreg free
  2724   001248  C081  F3D4         	movff	?_logf,_main$1789
  2725   00124C  C082  F3D5         	movff	?_logf+1,_main$1789+1
  2726   001250  C083  F3D6         	movff	?_logf+2,_main$1789+2
  2727   001254  C084  F3D7         	movff	?_logf+3,_main$1789+3
  2728   001258                     
  2729                           ;main.c: 97:         D2[e]=1000*logf(aux)/logf(2);
  2730   001258  0E00               	movlw	0
  2731   00125A  0100               	movlb	0	; () banked
  2732   00125C  6F81               	movwf	logf@x& (0+255),b
  2733   00125E  0E00               	movlw	0
  2734   001260  6F82               	movwf	(logf@x+1)& (0+255),b
  2735   001262  0E00               	movlw	0
  2736   001264  6F83               	movwf	(logf@x+2)& (0+255),b
  2737   001266  0E40               	movlw	64
  2738   001268  6F84               	movwf	(logf@x+3)& (0+255),b
  2739   00126A  EC96  F00E         	call	_logf	;wreg free
  2740   00126E  C081  F3D8         	movff	?_logf,_main$1790
  2741   001272  C082  F3D9         	movff	?_logf+1,_main$1790+1
  2742   001276  C083  F3DA         	movff	?_logf+2,_main$1790+2
  2743   00127A  C084  F3DB         	movff	?_logf+3,_main$1790+3
  2744   00127E                     
  2745                           ;main.c: 97:         D2[e]=1000*logf(aux)/logf(2);
  2746   00127E  0E00               	movlw	0
  2747   001280  6E1F               	movwf	___flmul@a^0,c
  2748   001282  0E00               	movlw	0
  2749   001284  6E20               	movwf	(___flmul@a+1)^0,c
  2750   001286  0E7A               	movlw	122
  2751   001288  6E21               	movwf	(___flmul@a+2)^0,c
  2752   00128A  0E44               	movlw	68
  2753   00128C  6E22               	movwf	(___flmul@a+3)^0,c
  2754   00128E  C3D4  F01B         	movff	_main$1789,___flmul@b
  2755   001292  C3D5  F01C         	movff	_main$1789+1,___flmul@b+1
  2756   001296  C3D6  F01D         	movff	_main$1789+2,___flmul@b+2
  2757   00129A  C3D7  F01E         	movff	_main$1789+3,___flmul@b+3
  2758   00129E  EC80  F022         	call	___flmul	;wreg free
  2759   0012A2  C01B  F068         	movff	?___flmul,___fldiv@b
  2760   0012A6  C01C  F069         	movff	?___flmul+1,___fldiv@b+1
  2761   0012AA  C01D  F06A         	movff	?___flmul+2,___fldiv@b+2
  2762   0012AE  C01E  F06B         	movff	?___flmul+3,___fldiv@b+3
  2763   0012B2  C3D8  F06C         	movff	_main$1790,___fldiv@a
  2764   0012B6  C3D9  F06D         	movff	_main$1790+1,___fldiv@a+1
  2765   0012BA  C3DA  F06E         	movff	_main$1790+2,___fldiv@a+2
  2766   0012BE  C3DB  F06F         	movff	_main$1790+3,___fldiv@a+3
  2767   0012C2  EC95  F024         	call	___fldiv	;wreg free
  2768   0012C6  0E00               	movlw	low _D2
  2769   0012C8  0101               	movlb	1	; () banked
  2770   0012CA  6FF3               	movwf	??_main& (0+255),b
  2771   0012CC  0E01               	movlw	high _D2
  2772   0012CE  6FF4               	movwf	(??_main+1)& (0+255),b
  2773   0012D0  90D8               	bcf	status,0,c
  2774   0012D2  3570               	rlcf	_e& (0+255),w,b
  2775   0012D4  6ED9               	movwf	fsr2l,c
  2776   0012D6  3571               	rlcf	(_e+1)& (0+255),w,b
  2777   0012D8  6EDA               	movwf	fsr2h,c
  2778   0012DA  90D8               	bcf	status,0,c
  2779   0012DC  36D9               	rlcf	fsr2l,f,c
  2780   0012DE  36DA               	rlcf	fsr2h,f,c
  2781   0012E0  51F3               	movf	??_main& (0+255),w,b
  2782   0012E2  26D9               	addwf	fsr2l,f,c
  2783   0012E4  51F4               	movf	(??_main+1)& (0+255),w,b
  2784   0012E6  22DA               	addwfc	fsr2h,f,c
  2785   0012E8  0100               	movlb	0	; () banked
  2786   0012EA  C068  FFDE         	movff	?___fldiv,postinc2
  2787   0012EE  C069  FFDE         	movff	?___fldiv+1,postinc2
  2788   0012F2  C06A  FFDE         	movff	?___fldiv+2,postinc2
  2789   0012F6  C06B  FFDE         	movff	?___fldiv+3,postinc2
  2790   0012FA                     
  2791                           ; BSR set to: 0
  2792                           ;main.c: 98:         verifRes();
  2793   0012FA  EC63  F026         	call	_verifRes	;wreg free
  2794   0012FE  EF7C  F004         	goto	l8041
  2795   001302  EF07  F000         	goto	start
  2796   001306                     __end_of_main:
  2797                           	callstack 0
  2798                           
  2799 ;; *************** function _verifRes *****************
  2800 ;; Defined at:
  2801 ;;		line 156 in file "main.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;		None
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  i               2  157[BANK0 ] int 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2815 ;;      Params:         0       0       0       0       0       0       0       0       0
  2816 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2817 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2818 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2819 ;;Total ram usage:        4 bytes
  2820 ;; Hardware stack levels used: 1
  2821 ;; Hardware stack levels required when called: 10
  2822 ;; This function calls:
  2823 ;;		_LCDGoto
  2824 ;;		_LCDPutCmd
  2825 ;;		_LCDPutStr
  2826 ;;		_SPI_MCP41
  2827 ;;		___fldiv
  2828 ;;		___flge
  2829 ;;		___flmul
  2830 ;;		___xxtofl
  2831 ;;		_configADCON
  2832 ;;		_regInit
  2833 ;;		_sprintf
  2834 ;; This function is called by:
  2835 ;;		_main
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text1
  2840   004CC6                     __ptext1:
  2841                           	callstack 0
  2842   004CC6                     _verifRes:
  2843                           	callstack 20
  2844   004CC6                     
  2845                           ;main.c: 157:     configADCON(0b00110000,0b00000010,0b10101101);
  2846   004CC6  0E02               	movlw	2
  2847   004CC8  6E0D               	movwf	configADCON@adcon1^0,c
  2848   004CCA  0EAD               	movlw	173
  2849   004CCC  6E0E               	movwf	configADCON@adcon2^0,c
  2850   004CCE  0E30               	movlw	48
  2851   004CD0  EC3D  F037         	call	_configADCON
  2852   004CD4                     
  2853                           ;main.c: 158:     ADRESH=0;
  2854   004CD4  0E00               	movlw	0
  2855   004CD6  6EC4               	movwf	196,c	;volatile
  2856   004CD8                     
  2857                           ;main.c: 159:     ADRESL=0;
  2858   004CD8  0E00               	movlw	0
  2859   004CDA  6EC3               	movwf	195,c	;volatile
  2860   004CDC                     
  2861                           ;main.c: 160:     ADCON0bits.ADON=1;
  2862   004CDC  80C2               	bsf	194,0,c	;volatile
  2863   004CDE                     
  2864                           ;main.c: 161:     ADCON0bits.GO=1;
  2865   004CDE  82C2               	bsf	194,1,c	;volatile
  2866   004CE0                     l196:
  2867   004CE0  B2C2               	btfsc	194,1,c	;volatile
  2868   004CE2  EF75  F026         	goto	u8071
  2869   004CE6  EF77  F026         	goto	u8070
  2870   004CEA                     u8071:
  2871   004CEA  EF70  F026         	goto	l196
  2872   004CEE                     u8070:
  2873   004CEE                     
  2874                           ;main.c: 163:     v=((unsigned int)ADRESH<<8) | (ADRESL);
  2875   004CEE  50C4               	movf	196,w,c	;volatile
  2876   004CF0  0100               	movlb	0	; () banked
  2877   004CF2  6FFB               	movwf	??_verifRes& (0+255),b
  2878   004CF4  50C3               	movf	195,w,c	;volatile
  2879   004CF6  0101               	movlb	1	; () banked
  2880   004CF8  6F72               	movwf	_v& (0+255),b
  2881   004CFA  C0FB  F173         	movff	??_verifRes,_v+1
  2882   004CFE                     
  2883                           ; BSR set to: 1
  2884                           ;main.c: 164:     voltage[e]=v*(float)5/1023;
  2885   004CFE  0E00               	movlw	0
  2886   004D00  6E1F               	movwf	___flmul@a^0,c
  2887   004D02  0E00               	movlw	0
  2888   004D04  6E20               	movwf	(___flmul@a+1)^0,c
  2889   004D06  0EA0               	movlw	160
  2890   004D08  6E21               	movwf	(___flmul@a+2)^0,c
  2891   004D0A  0E40               	movlw	64
  2892   004D0C  6E22               	movwf	(___flmul@a+3)^0,c
  2893   004D0E  C172  F00D         	movff	_v,___xxtofl@val
  2894   004D12  C173  F00E         	movff	_v+1,___xxtofl@val+1
  2895   004D16  6A0F               	clrf	(___xxtofl@val+2)^0,c
  2896   004D18  6A10               	clrf	(___xxtofl@val+3)^0,c
  2897   004D1A  0E00               	movlw	0
  2898   004D1C  ECC6  F02E         	call	___xxtofl
  2899   004D20  C00D  F01B         	movff	?___xxtofl,___flmul@b
  2900   004D24  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  2901   004D28  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  2902   004D2C  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  2903   004D30  EC80  F022         	call	___flmul	;wreg free
  2904   004D34  C01B  F068         	movff	?___flmul,___fldiv@b
  2905   004D38  C01C  F069         	movff	?___flmul+1,___fldiv@b+1
  2906   004D3C  C01D  F06A         	movff	?___flmul+2,___fldiv@b+2
  2907   004D40  C01E  F06B         	movff	?___flmul+3,___fldiv@b+3
  2908   004D44  0E00               	movlw	0
  2909   004D46  0100               	movlb	0	; () banked
  2910   004D48  6F6C               	movwf	___fldiv@a& (0+255),b
  2911   004D4A  0EC0               	movlw	192
  2912   004D4C  6F6D               	movwf	(___fldiv@a+1)& (0+255),b
  2913   004D4E  0E7F               	movlw	127
  2914   004D50  6F6E               	movwf	(___fldiv@a+2)& (0+255),b
  2915   004D52  0E44               	movlw	68
  2916   004D54  6F6F               	movwf	(___fldiv@a+3)& (0+255),b
  2917   004D56  EC95  F024         	call	___fldiv	;wreg free
  2918   004D5A  0E00               	movlw	low _voltage
  2919   004D5C  0100               	movlb	0	; () banked
  2920   004D5E  6FFB               	movwf	??_verifRes& (0+255),b
  2921   004D60  0E03               	movlw	high _voltage
  2922   004D62  6FFC               	movwf	(??_verifRes+1)& (0+255),b
  2923   004D64  90D8               	bcf	status,0,c
  2924   004D66  0101               	movlb	1	; () banked
  2925   004D68  3570               	rlcf	_e& (0+255),w,b
  2926   004D6A  6ED9               	movwf	fsr2l,c
  2927   004D6C  3571               	rlcf	(_e+1)& (0+255),w,b
  2928   004D6E  6EDA               	movwf	fsr2h,c
  2929   004D70  90D8               	bcf	status,0,c
  2930   004D72  36D9               	rlcf	fsr2l,f,c
  2931   004D74  36DA               	rlcf	fsr2h,f,c
  2932   004D76  0100               	movlb	0	; () banked
  2933   004D78  51FB               	movf	??_verifRes& (0+255),w,b
  2934   004D7A  26D9               	addwf	fsr2l,f,c
  2935   004D7C  51FC               	movf	(??_verifRes+1)& (0+255),w,b
  2936   004D7E  22DA               	addwfc	fsr2h,f,c
  2937   004D80  C068  FFDE         	movff	?___fldiv,postinc2
  2938   004D84  C069  FFDE         	movff	?___fldiv+1,postinc2
  2939   004D88  C06A  FFDE         	movff	?___fldiv+2,postinc2
  2940   004D8C  C06B  FFDE         	movff	?___fldiv+3,postinc2
  2941   004D90                     
  2942                           ; BSR set to: 0
  2943                           ;main.c: 166:     sprintf(info,"Voff = %.2f V",voltage[e]);
  2944   004D90  0E81               	movlw	low _info
  2945   004D92  0101               	movlb	1	; () banked
  2946   004D94  6FC3               	movwf	sprintf@s& (0+255),b
  2947   004D96  0E01               	movlw	high _info
  2948   004D98  6FC4               	movwf	(sprintf@s+1)& (0+255),b
  2949   004D9A  0E81               	movlw	low STR_2
  2950   004D9C  6FC5               	movwf	sprintf@fmt& (0+255),b
  2951   004D9E  0E08               	movlw	high STR_2
  2952   004DA0  6FC6               	movwf	(sprintf@fmt+1)& (0+255),b
  2953   004DA2  0E00               	movlw	low _voltage
  2954   004DA4  0100               	movlb	0	; () banked
  2955   004DA6  6FFB               	movwf	??_verifRes& (0+255),b
  2956   004DA8  0E03               	movlw	high _voltage
  2957   004DAA  6FFC               	movwf	(??_verifRes+1)& (0+255),b
  2958   004DAC  90D8               	bcf	status,0,c
  2959   004DAE  0101               	movlb	1	; () banked
  2960   004DB0  3570               	rlcf	_e& (0+255),w,b
  2961   004DB2  6ED9               	movwf	fsr2l,c
  2962   004DB4  3571               	rlcf	(_e+1)& (0+255),w,b
  2963   004DB6  6EDA               	movwf	fsr2h,c
  2964   004DB8  90D8               	bcf	status,0,c
  2965   004DBA  36D9               	rlcf	fsr2l,f,c
  2966   004DBC  36DA               	rlcf	fsr2h,f,c
  2967   004DBE  0100               	movlb	0	; () banked
  2968   004DC0  51FB               	movf	??_verifRes& (0+255),w,b
  2969   004DC2  26D9               	addwf	fsr2l,f,c
  2970   004DC4  51FC               	movf	(??_verifRes+1)& (0+255),w,b
  2971   004DC6  22DA               	addwfc	fsr2h,f,c
  2972   004DC8  CFDE F1C7          	movff	postinc2,?_sprintf+4
  2973   004DCC  CFDE F1C8          	movff	postinc2,?_sprintf+5
  2974   004DD0  CFDE F1C9          	movff	postinc2,?_sprintf+6
  2975   004DD4  CFDE F1CA          	movff	postinc2,?_sprintf+7
  2976   004DD8  EC11  F035         	call	_sprintf	;wreg free
  2977   004DDC                     
  2978                           ;main.c: 167:     LCDPutStr(info);
  2979   004DDC  0E81               	movlw	low _info
  2980   004DDE  6E12               	movwf	LCDPutStr@str^0,c
  2981   004DE0  0E01               	movlw	high _info
  2982   004DE2  6E13               	movwf	(LCDPutStr@str+1)^0,c
  2983   004DE4  EC2F  F034         	call	_LCDPutStr	;wreg free
  2984   004DE8                     
  2985                           ;main.c: 168:     LCDGoto(0,1);
  2986   004DE8  0E01               	movlw	1
  2987   004DEA  6E12               	movwf	LCDGoto@ln^0,c
  2988   004DEC  0E00               	movlw	0
  2989   004DEE  ECA5  F034         	call	_LCDGoto
  2990   004DF2                     
  2991                           ;main.c: 169:     sprintf(info,"D2 = %.2f",D2[e]);
  2992   004DF2  0E81               	movlw	low _info
  2993   004DF4  0101               	movlb	1	; () banked
  2994   004DF6  6FC3               	movwf	sprintf@s& (0+255),b
  2995   004DF8  0E01               	movlw	high _info
  2996   004DFA  6FC4               	movwf	(sprintf@s+1)& (0+255),b
  2997   004DFC  0EA9               	movlw	low STR_3
  2998   004DFE  6FC5               	movwf	sprintf@fmt& (0+255),b
  2999   004E00  0E08               	movlw	high STR_3
  3000   004E02  6FC6               	movwf	(sprintf@fmt+1)& (0+255),b
  3001   004E04  0E00               	movlw	low _D2
  3002   004E06  0100               	movlb	0	; () banked
  3003   004E08  6FFB               	movwf	??_verifRes& (0+255),b
  3004   004E0A  0E01               	movlw	high _D2
  3005   004E0C  6FFC               	movwf	(??_verifRes+1)& (0+255),b
  3006   004E0E  90D8               	bcf	status,0,c
  3007   004E10  0101               	movlb	1	; () banked
  3008   004E12  3570               	rlcf	_e& (0+255),w,b
  3009   004E14  6ED9               	movwf	fsr2l,c
  3010   004E16  3571               	rlcf	(_e+1)& (0+255),w,b
  3011   004E18  6EDA               	movwf	fsr2h,c
  3012   004E1A  90D8               	bcf	status,0,c
  3013   004E1C  36D9               	rlcf	fsr2l,f,c
  3014   004E1E  36DA               	rlcf	fsr2h,f,c
  3015   004E20  0100               	movlb	0	; () banked
  3016   004E22  51FB               	movf	??_verifRes& (0+255),w,b
  3017   004E24  26D9               	addwf	fsr2l,f,c
  3018   004E26  51FC               	movf	(??_verifRes+1)& (0+255),w,b
  3019   004E28  22DA               	addwfc	fsr2h,f,c
  3020   004E2A  CFDE F1C7          	movff	postinc2,?_sprintf+4
  3021   004E2E  CFDE F1C8          	movff	postinc2,?_sprintf+5
  3022   004E32  CFDE F1C9          	movff	postinc2,?_sprintf+6
  3023   004E36  CFDE F1CA          	movff	postinc2,?_sprintf+7
  3024   004E3A  EC11  F035         	call	_sprintf	;wreg free
  3025   004E3E                     
  3026                           ;main.c: 170:     LCDPutStr(info);
  3027   004E3E  0E81               	movlw	low _info
  3028   004E40  6E12               	movwf	LCDPutStr@str^0,c
  3029   004E42  0E01               	movlw	high _info
  3030   004E44  6E13               	movwf	(LCDPutStr@str+1)^0,c
  3031   004E46  EC2F  F034         	call	_LCDPutStr	;wreg free
  3032   004E4A                     
  3033                           ;main.c: 171:     _delay((unsigned long)((3000)*(16000000/4000.0)));
  3034   004E4A  0E3D               	movlw	61
  3035   004E4C  0100               	movlb	0	; () banked
  3036   004E4E  6FFC               	movwf	(??_verifRes+1)& (0+255),b
  3037   004E50  0EE1               	movlw	225
  3038   004E52  6FFB               	movwf	??_verifRes& (0+255),b
  3039   004E54  0E3F               	movlw	63
  3040   004E56                     u8217:
  3041   004E56  2EE8               	decfsz	wreg,f,c
  3042   004E58  D7FE               	bra	u8217
  3043   004E5A  2FFB               	decfsz	??_verifRes& (0+255),f,b
  3044   004E5C  D7FC               	bra	u8217
  3045   004E5E  2FFC               	decfsz	(??_verifRes+1)& (0+255),f,b
  3046   004E60  D7FA               	bra	u8217
  3047   004E62  D000               	nop2	
  3048   004E64                     
  3049                           ;main.c: 172:     LCDPutCmd(0x01);
  3050   004E64  0E01               	movlw	1
  3051   004E66  ECC7  F036         	call	_LCDPutCmd
  3052   004E6A                     
  3053                           ;main.c: 174:     pot_value=pot_value+passo;
  3054   004E6A  0101               	movlb	1	; () banked
  3055   004E6C  5175               	movf	_pot_value& (0+255),w,b
  3056   004E6E  2576               	addwf	_passo& (0+255),w,b
  3057   004E70  6F75               	movwf	_pot_value& (0+255),b
  3058   004E72                     
  3059                           ; BSR set to: 1
  3060                           ;main.c: 175:     SPI_MCP41(0x11,pot_value);
  3061   004E72  C175  F00E         	movff	_pot_value,SPI_MCP41@dado
  3062   004E76  0E11               	movlw	17
  3063   004E78  EC33  F037         	call	_SPI_MCP41
  3064   004E7C                     
  3065                           ;main.c: 177:     e+=1;
  3066   004E7C  0101               	movlb	1	; () banked
  3067   004E7E  4B70               	infsnz	_e& (0+255),f,b
  3068   004E80  2B71               	incf	(_e+1)& (0+255),f,b
  3069   004E82                     
  3070                           ; BSR set to: 1
  3071                           ;main.c: 178:     v=0;
  3072   004E82  0E00               	movlw	0
  3073   004E84  6F73               	movwf	(_v+1)& (0+255),b
  3074   004E86  0E00               	movlw	0
  3075   004E88  6F72               	movwf	_v& (0+255),b
  3076   004E8A                     
  3077                           ; BSR set to: 1
  3078                           ;main.c: 180:     if(pot_value==0x82){
  3079   004E8A  0E82               	movlw	130
  3080   004E8C  1975               	xorwf	_pot_value& (0+255),w,b
  3081   004E8E  A4D8               	btfss	status,2,c
  3082   004E90  EF4C  F027         	goto	u8081
  3083   004E94  EF4E  F027         	goto	u8080
  3084   004E98                     u8081:
  3085   004E98  EF24  F028         	goto	l203
  3086   004E9C                     u8080:
  3087   004E9C                     
  3088                           ; BSR set to: 1
  3089                           ;main.c: 182:         pot_value=0x1E;
  3090   004E9C  0E1E               	movlw	30
  3091   004E9E  6F75               	movwf	_pot_value& (0+255),b
  3092   004EA0                     
  3093                           ; BSR set to: 1
  3094                           ;main.c: 183:         SPI_MCP41(0x11,pot_value);
  3095   004EA0  C175  F00E         	movff	_pot_value,SPI_MCP41@dado
  3096   004EA4  0E11               	movlw	17
  3097   004EA6  EC33  F037         	call	_SPI_MCP41
  3098   004EAA                     
  3099                           ;main.c: 185:         for(int i=0;i<20;i++){
  3100   004EAA  0E00               	movlw	0
  3101   004EAC  0100               	movlb	0	; () banked
  3102   004EAE  6FFE               	movwf	(verifRes@i+1)& (0+255),b
  3103   004EB0  0E00               	movlw	0
  3104   004EB2  6FFD               	movwf	verifRes@i& (0+255),b
  3105   004EB4                     l7999:
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;main.c: 186:             if(aux_D2<D2[i]){
  3109   004EB4  C168  F034         	movff	_aux_D2,___flge@ff1
  3110   004EB8  C169  F035         	movff	_aux_D2+1,___flge@ff1+1
  3111   004EBC  C16A  F036         	movff	_aux_D2+2,___flge@ff1+2
  3112   004EC0  C16B  F037         	movff	_aux_D2+3,___flge@ff1+3
  3113   004EC4  0E00               	movlw	low _D2
  3114   004EC6  6FFB               	movwf	??_verifRes& (0+255),b
  3115   004EC8  0E01               	movlw	high _D2
  3116   004ECA  6FFC               	movwf	(??_verifRes+1)& (0+255),b
  3117   004ECC  90D8               	bcf	status,0,c
  3118   004ECE  35FD               	rlcf	verifRes@i& (0+255),w,b
  3119   004ED0  6ED9               	movwf	fsr2l,c
  3120   004ED2  35FE               	rlcf	(verifRes@i+1)& (0+255),w,b
  3121   004ED4  6EDA               	movwf	fsr2h,c
  3122   004ED6  90D8               	bcf	status,0,c
  3123   004ED8  36D9               	rlcf	fsr2l,f,c
  3124   004EDA  36DA               	rlcf	fsr2h,f,c
  3125   004EDC  51FB               	movf	??_verifRes& (0+255),w,b
  3126   004EDE  26D9               	addwf	fsr2l,f,c
  3127   004EE0  51FC               	movf	(??_verifRes+1)& (0+255),w,b
  3128   004EE2  22DA               	addwfc	fsr2h,f,c
  3129   004EE4  CFDE F038          	movff	postinc2,___flge@ff2
  3130   004EE8  CFDE F039          	movff	postinc2,___flge@ff2+1
  3131   004EEC  CFDE F03A          	movff	postinc2,___flge@ff2+2
  3132   004EF0  CFDE F03B          	movff	postinc2,___flge@ff2+3
  3133   004EF4  ECC9  F030         	call	___flge	;wreg free
  3134   004EF8  B0D8               	btfsc	status,0,c
  3135   004EFA  EF81  F027         	goto	u8091
  3136   004EFE  EF83  F027         	goto	u8090
  3137   004F02                     u8091:
  3138   004F02  EFB4  F027         	goto	l8003
  3139   004F06                     u8090:
  3140   004F06                     
  3141                           ;main.c: 187:                 aux_D2=D2[i];
  3142   004F06  0E00               	movlw	low _D2
  3143   004F08  0100               	movlb	0	; () banked
  3144   004F0A  6FFB               	movwf	??_verifRes& (0+255),b
  3145   004F0C  0E01               	movlw	high _D2
  3146   004F0E  6FFC               	movwf	(??_verifRes+1)& (0+255),b
  3147   004F10  90D8               	bcf	status,0,c
  3148   004F12  35FD               	rlcf	verifRes@i& (0+255),w,b
  3149   004F14  6ED9               	movwf	fsr2l,c
  3150   004F16  35FE               	rlcf	(verifRes@i+1)& (0+255),w,b
  3151   004F18  6EDA               	movwf	fsr2h,c
  3152   004F1A  90D8               	bcf	status,0,c
  3153   004F1C  36D9               	rlcf	fsr2l,f,c
  3154   004F1E  36DA               	rlcf	fsr2h,f,c
  3155   004F20  51FB               	movf	??_verifRes& (0+255),w,b
  3156   004F22  26D9               	addwf	fsr2l,f,c
  3157   004F24  51FC               	movf	(??_verifRes+1)& (0+255),w,b
  3158   004F26  22DA               	addwfc	fsr2h,f,c
  3159   004F28  CFDE F168          	movff	postinc2,_aux_D2
  3160   004F2C  CFDE F169          	movff	postinc2,_aux_D2+1
  3161   004F30  CFDE F16A          	movff	postinc2,_aux_D2+2
  3162   004F34  CFDE F16B          	movff	postinc2,_aux_D2+3
  3163                           
  3164                           ;main.c: 188:                 aux_Voff=voltage[i];
  3165   004F38  0E00               	movlw	low _voltage
  3166   004F3A  6FFB               	movwf	??_verifRes& (0+255),b
  3167   004F3C  0E03               	movlw	high _voltage
  3168   004F3E  6FFC               	movwf	(??_verifRes+1)& (0+255),b
  3169   004F40  90D8               	bcf	status,0,c
  3170   004F42  35FD               	rlcf	verifRes@i& (0+255),w,b
  3171   004F44  6ED9               	movwf	fsr2l,c
  3172   004F46  35FE               	rlcf	(verifRes@i+1)& (0+255),w,b
  3173   004F48  6EDA               	movwf	fsr2h,c
  3174   004F4A  90D8               	bcf	status,0,c
  3175   004F4C  36D9               	rlcf	fsr2l,f,c
  3176   004F4E  36DA               	rlcf	fsr2h,f,c
  3177   004F50  51FB               	movf	??_verifRes& (0+255),w,b
  3178   004F52  26D9               	addwf	fsr2l,f,c
  3179   004F54  51FC               	movf	(??_verifRes+1)& (0+255),w,b
  3180   004F56  22DA               	addwfc	fsr2h,f,c
  3181   004F58  CFDE F16C          	movff	postinc2,_aux_Voff
  3182   004F5C  CFDE F16D          	movff	postinc2,_aux_Voff+1
  3183   004F60  CFDE F16E          	movff	postinc2,_aux_Voff+2
  3184   004F64  CFDE F16F          	movff	postinc2,_aux_Voff+3
  3185   004F68                     l8003:
  3186                           
  3187                           ;main.c: 190:         }
  3188   004F68  0100               	movlb	0	; () banked
  3189   004F6A  4BFD               	infsnz	verifRes@i& (0+255),f,b
  3190   004F6C  2BFE               	incf	(verifRes@i+1)& (0+255),f,b
  3191   004F6E                     
  3192                           ; BSR set to: 0
  3193   004F6E  BFFE               	btfsc	(verifRes@i+1)& (0+255),7,b
  3194   004F70  EFC3  F027         	goto	u8101
  3195   004F74  51FE               	movf	(verifRes@i+1)& (0+255),w,b
  3196   004F76  E109               	bnz	u8100
  3197   004F78  0E14               	movlw	20
  3198   004F7A  5DFD               	subwf	verifRes@i& (0+255),w,b
  3199   004F7C  A0D8               	btfss	status,0,c
  3200   004F7E  EFC3  F027         	goto	u8101
  3201   004F82  EFC5  F027         	goto	u8100
  3202   004F86                     u8101:
  3203   004F86  EF5A  F027         	goto	l7999
  3204   004F8A                     u8100:
  3205   004F8A                     
  3206                           ; BSR set to: 0
  3207                           ;main.c: 191:         sprintf(info2,"V_bias = %.2f V",aux_Voff);
  3208   004F8A  0E77               	movlw	low _info2
  3209   004F8C  0101               	movlb	1	; () banked
  3210   004F8E  6FC3               	movwf	sprintf@s& (0+255),b
  3211   004F90  0E01               	movlw	high _info2
  3212   004F92  6FC4               	movwf	(sprintf@s+1)& (0+255),b
  3213   004F94  0E71               	movlw	low STR_4
  3214   004F96  6FC5               	movwf	sprintf@fmt& (0+255),b
  3215   004F98  0E08               	movlw	high STR_4
  3216   004F9A  6FC6               	movwf	(sprintf@fmt+1)& (0+255),b
  3217   004F9C  C16C  F1C7         	movff	_aux_Voff,?_sprintf+4
  3218   004FA0  C16D  F1C8         	movff	_aux_Voff+1,?_sprintf+5
  3219   004FA4  C16E  F1C9         	movff	_aux_Voff+2,?_sprintf+6
  3220   004FA8  C16F  F1CA         	movff	_aux_Voff+3,?_sprintf+7
  3221   004FAC  EC11  F035         	call	_sprintf	;wreg free
  3222   004FB0                     
  3223                           ;main.c: 192:         LCDPutStr(info2);
  3224   004FB0  0E77               	movlw	low _info2
  3225   004FB2  6E12               	movwf	LCDPutStr@str^0,c
  3226   004FB4  0E01               	movlw	high _info2
  3227   004FB6  6E13               	movwf	(LCDPutStr@str+1)^0,c
  3228   004FB8  EC2F  F034         	call	_LCDPutStr	;wreg free
  3229   004FBC                     
  3230                           ;main.c: 193:         LCDGoto(0,1);
  3231   004FBC  0E01               	movlw	1
  3232   004FBE  6E12               	movwf	LCDGoto@ln^0,c
  3233   004FC0  0E00               	movlw	0
  3234   004FC2  ECA5  F034         	call	_LCDGoto
  3235   004FC6                     
  3236                           ;main.c: 194:         sprintf(info2,"D2max = %.2f",aux_D2);
  3237   004FC6  0E77               	movlw	low _info2
  3238   004FC8  0101               	movlb	1	; () banked
  3239   004FCA  6FC3               	movwf	sprintf@s& (0+255),b
  3240   004FCC  0E01               	movlw	high _info2
  3241   004FCE  6FC4               	movwf	(sprintf@s+1)& (0+255),b
  3242   004FD0  0E9C               	movlw	low STR_5
  3243   004FD2  6FC5               	movwf	sprintf@fmt& (0+255),b
  3244   004FD4  0E08               	movlw	high STR_5
  3245   004FD6  6FC6               	movwf	(sprintf@fmt+1)& (0+255),b
  3246   004FD8  C168  F1C7         	movff	_aux_D2,?_sprintf+4
  3247   004FDC  C169  F1C8         	movff	_aux_D2+1,?_sprintf+5
  3248   004FE0  C16A  F1C9         	movff	_aux_D2+2,?_sprintf+6
  3249   004FE4  C16B  F1CA         	movff	_aux_D2+3,?_sprintf+7
  3250   004FE8  EC11  F035         	call	_sprintf	;wreg free
  3251   004FEC                     
  3252                           ;main.c: 195:         LCDPutStr(info2);
  3253   004FEC  0E77               	movlw	low _info2
  3254   004FEE  6E12               	movwf	LCDPutStr@str^0,c
  3255   004FF0  0E01               	movlw	high _info2
  3256   004FF2  6E13               	movwf	(LCDPutStr@str+1)^0,c
  3257   004FF4  EC2F  F034         	call	_LCDPutStr	;wreg free
  3258   004FF8                     
  3259                           ;main.c: 196:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  3260   004FF8  0E15               	movlw	21
  3261   004FFA  0100               	movlb	0	; () banked
  3262   004FFC  6FFC               	movwf	(??_verifRes+1)& (0+255),b
  3263   004FFE  0E4B               	movlw	75
  3264   005000  6FFB               	movwf	??_verifRes& (0+255),b
  3265   005002  0EBE               	movlw	190
  3266   005004                     u8227:
  3267   005004  2EE8               	decfsz	wreg,f,c
  3268   005006  D7FE               	bra	u8227
  3269   005008  2FFB               	decfsz	??_verifRes& (0+255),f,b
  3270   00500A  D7FC               	bra	u8227
  3271   00500C  2FFC               	decfsz	(??_verifRes+1)& (0+255),f,b
  3272   00500E  D7FA               	bra	u8227
  3273   005010  F000               	nop	
  3274   005012                     
  3275                           ;main.c: 197:         LCDPutCmd(0x01);
  3276   005012  0E01               	movlw	1
  3277   005014  ECC7  F036         	call	_LCDPutCmd
  3278   005018                     
  3279                           ;main.c: 199:         LCDPutStr("FIM");
  3280   005018  0EBB               	movlw	low STR_6
  3281   00501A  6E12               	movwf	LCDPutStr@str^0,c
  3282   00501C  0E08               	movlw	high STR_6
  3283   00501E  6E13               	movwf	(LCDPutStr@str+1)^0,c
  3284   005020  EC2F  F034         	call	_LCDPutStr	;wreg free
  3285   005024                     
  3286                           ;main.c: 200:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  3287   005024  0E15               	movlw	21
  3288   005026  0100               	movlb	0	; () banked
  3289   005028  6FFC               	movwf	(??_verifRes+1)& (0+255),b
  3290   00502A  0E4B               	movlw	75
  3291   00502C  6FFB               	movwf	??_verifRes& (0+255),b
  3292   00502E  0EBE               	movlw	190
  3293   005030                     u8237:
  3294   005030  2EE8               	decfsz	wreg,f,c
  3295   005032  D7FE               	bra	u8237
  3296   005034  2FFB               	decfsz	??_verifRes& (0+255),f,b
  3297   005036  D7FC               	bra	u8237
  3298   005038  2FFC               	decfsz	(??_verifRes+1)& (0+255),f,b
  3299   00503A  D7FA               	bra	u8237
  3300   00503C  F000               	nop	
  3301   00503E                     
  3302                           ;main.c: 201:         LCDPutCmd(0x01);
  3303   00503E  0E01               	movlw	1
  3304   005040  ECC7  F036         	call	_LCDPutCmd
  3305   005044                     
  3306                           ;main.c: 203:         regInit();
  3307   005044  ECCA  F031         	call	_regInit	;wreg free
  3308   005048                     l203:
  3309   005048  0012               	return		;funcret
  3310   00504A                     __end_of_verifRes:
  3311                           	callstack 0
  3312                           
  3313 ;; *************** function _sprintf *****************
  3314 ;; Defined at:
  3315 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;  s               2   56[BANK1 ] PTR unsigned char 
  3318 ;;		 -> info2(10), info(10), 
  3319 ;;  fmt             2   58[BANK1 ] PTR const unsigned char 
  3320 ;;		 -> STR_5(13), STR_4(16), STR_3(10), STR_2(14), 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  f              11  144[BANK0 ] struct _IO_FILE
  3323 ;;  ap              2  142[BANK0 ] PTR void [1]
  3324 ;;		 -> ?_sprintf(2), 
  3325 ;;  ret             2    0        int 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  2   56[BANK1 ] int 
  3328 ;; Registers used:
  3329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3335 ;;      Params:         0       0       8       0       0       0       0       0       0
  3336 ;;      Locals:         0      13       0       0       0       0       0       0       0
  3337 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3338 ;;      Totals:         0      13       8       0       0       0       0       0       0
  3339 ;;Total ram usage:       21 bytes
  3340 ;; Hardware stack levels used: 1
  3341 ;; Hardware stack levels required when called: 9
  3342 ;; This function calls:
  3343 ;;		_vfprintf
  3344 ;; This function is called by:
  3345 ;;		_verifRes
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text2
  3350   006A22                     __ptext2:
  3351                           	callstack 0
  3352   006A22                     _sprintf:
  3353                           	callstack 20
  3354   006A22  0EC7               	movlw	low (?_sprintf+4)
  3355   006A24  0100               	movlb	0	; () banked
  3356   006A26  6FEE               	movwf	sprintf@ap& (0+255),b
  3357   006A28  0E01               	movlw	high (?_sprintf+4)
  3358   006A2A  6FEF               	movwf	(sprintf@ap+1)& (0+255),b
  3359   006A2C  C1C3  F0F0         	movff	sprintf@s,sprintf@f
  3360   006A30  C1C4  F0F1         	movff	sprintf@s+1,sprintf@f+1
  3361   006A34                     
  3362                           ; BSR set to: 0
  3363   006A34  0E00               	movlw	0
  3364   006A36  6FF4               	movwf	(sprintf@f+4)& (0+255),b
  3365   006A38  0E00               	movlw	0
  3366   006A3A  6FF3               	movwf	(sprintf@f+3)& (0+255),b
  3367   006A3C                     
  3368                           ; BSR set to: 0
  3369   006A3C  0E00               	movlw	0
  3370   006A3E  6FFA               	movwf	(sprintf@f+10)& (0+255),b
  3371   006A40  0E00               	movlw	0
  3372   006A42  6FF9               	movwf	(sprintf@f+9)& (0+255),b
  3373   006A44                     
  3374                           ; BSR set to: 0
  3375   006A44  0EF0               	movlw	low sprintf@f
  3376   006A46  0101               	movlb	1	; () banked
  3377   006A48  6FBD               	movwf	vfprintf@fp& (0+255),b
  3378   006A4A  0E00               	movlw	high sprintf@f
  3379   006A4C  6FBE               	movwf	(vfprintf@fp+1)& (0+255),b
  3380   006A4E  C1C5  F1BF         	movff	sprintf@fmt,vfprintf@fmt
  3381   006A52  C1C6  F1C0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3382   006A56  0EEE               	movlw	low sprintf@ap
  3383   006A58  6FC1               	movwf	vfprintf@ap& (0+255),b
  3384   006A5A  0E00               	movlw	high sprintf@ap
  3385   006A5C  6FC2               	movwf	(vfprintf@ap+1)& (0+255),b
  3386   006A5E  EC6A  F035         	call	_vfprintf	;wreg free
  3387   006A62  0100               	movlb	0	; () banked
  3388   006A64  51F3               	movf	(sprintf@f+3)& (0+255),w,b
  3389   006A66  0101               	movlb	1	; () banked
  3390   006A68  25C3               	addwf	sprintf@s& (0+255),w,b
  3391   006A6A  6ED9               	movwf	fsr2l,c
  3392   006A6C  0100               	movlb	0	; () banked
  3393   006A6E  51F4               	movf	(sprintf@f+4)& (0+255),w,b
  3394   006A70  0101               	movlb	1	; () banked
  3395   006A72  21C4               	addwfc	(sprintf@s+1)& (0+255),w,b
  3396   006A74  6EDA               	movwf	fsr2h,c
  3397   006A76  0E00               	movlw	0
  3398   006A78  6EDF               	movwf	indf2,c
  3399   006A7A                     
  3400                           ; BSR set to: 1
  3401   006A7A  0012               	return		;funcret
  3402   006A7C                     __end_of_sprintf:
  3403                           	callstack 0
  3404                           
  3405 ;; *************** function _vfprintf *****************
  3406 ;; Defined at:
  3407 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  fp              2   50[BANK1 ] PTR struct _IO_FILE
  3410 ;;		 -> sprintf@f(11), 
  3411 ;;  fmt             2   52[BANK1 ] PTR const unsigned char 
  3412 ;;		 -> STR_5(13), STR_4(16), STR_3(10), STR_2(14), 
  3413 ;;  ap              2   54[BANK1 ] PTR PTR void 
  3414 ;;		 -> sprintf@ap(2), 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  cfmt            2  140[BANK0 ] PTR unsigned char 
  3417 ;;		 -> STR_5(13), STR_4(16), STR_3(10), STR_2(14), 
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  2   50[BANK1 ] int 
  3420 ;; Registers used:
  3421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3427 ;;      Params:         0       0       6       0       0       0       0       0       0
  3428 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3429 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3430 ;;      Totals:         0       2       6       0       0       0       0       0       0
  3431 ;;Total ram usage:        8 bytes
  3432 ;; Hardware stack levels used: 1
  3433 ;; Hardware stack levels required when called: 8
  3434 ;; This function calls:
  3435 ;;		_vfpfcnvrt
  3436 ;; This function is called by:
  3437 ;;		_sprintf
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           	psect	text3
  3442   006AD4                     __ptext3:
  3443                           	callstack 0
  3444   006AD4                     _vfprintf:
  3445                           	callstack 20
  3446   006AD4                     
  3447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  3448   006AD4  C1BF  F0EC         	movff	vfprintf@fmt,vfprintf@cfmt
  3449   006AD8  C1C0  F0ED         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3450                           
  3451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3452   006ADC  EF7F  F035         	goto	l7267
  3453   006AE0                     l7265:
  3454                           
  3455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3456   006AE0  C1BD  F1B7         	movff	vfprintf@fp,vfpfcnvrt@fp
  3457   006AE4  C1BE  F1B8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3458   006AE8  0EEC               	movlw	low vfprintf@cfmt
  3459   006AEA  0101               	movlb	1	; () banked
  3460   006AEC  6FB9               	movwf	vfpfcnvrt@fmt& (0+255),b
  3461   006AEE  0E00               	movlw	high vfprintf@cfmt
  3462   006AF0  6FBA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3463   006AF2  C1C1  F1BB         	movff	vfprintf@ap,vfpfcnvrt@ap
  3464   006AF6  C1C2  F1BC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3465   006AFA  EC25  F028         	call	_vfpfcnvrt	;wreg free
  3466   006AFE                     l7267:
  3467                           
  3468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3469   006AFE  C0EC  FFF6         	movff	vfprintf@cfmt,tblptrl
  3470   006B02  C0ED  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3471   006B06                     	if	0	;tblptru may be non-zero
  3472   006B06                     	endif
  3473   006B06                     	if	0	;tblptru may be non-zero
  3474   006B06                     	endif
  3475   006B06  0008               	tblrd		*
  3476   006B08  50F5               	movf	tablat,w,c
  3477   006B0A  0900               	iorlw	0
  3478   006B0C  A4D8               	btfss	status,2,c
  3479   006B0E  EF8B  F035         	goto	u7351
  3480   006B12  EF8D  F035         	goto	u7350
  3481   006B16                     u7351:
  3482   006B16  EF70  F035         	goto	l7265
  3483   006B1A                     u7350:
  3484   006B1A                     
  3485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  3486   006B1A  0E00               	movlw	0
  3487   006B1C  0101               	movlb	1	; () banked
  3488   006B1E  6FBE               	movwf	(?_vfprintf+1)& (0+255),b
  3489   006B20  0E00               	movlw	0
  3490   006B22  6FBD               	movwf	?_vfprintf& (0+255),b
  3491   006B24                     
  3492                           ; BSR set to: 1
  3493   006B24  0012               	return		;funcret
  3494   006B26                     __end_of_vfprintf:
  3495                           	callstack 0
  3496                           
  3497 ;; *************** function _vfpfcnvrt *****************
  3498 ;; Defined at:
  3499 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;  fp              2   44[BANK1 ] PTR struct _IO_FILE
  3502 ;;		 -> sprintf@f(11), 
  3503 ;;  fmt             2   46[BANK1 ] PTR PTR unsigned char 
  3504 ;;		 -> vfprintf@cfmt(2), 
  3505 ;;  ap              2   48[BANK1 ] PTR PTR void 
  3506 ;;		 -> sprintf@ap(2), 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;  convarg         8  129[BANK0 ] struct .
  3509 ;;  cp              2  138[BANK0 ] PTR unsigned char 
  3510 ;;		 -> STR_5(13), STR_4(16), STR_3(10), STR_2(14), 
  3511 ;;  i               2    0        int 
  3512 ;;  done            2    0        int 
  3513 ;;  c               1  137[BANK0 ] unsigned char 
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  1    wreg      void 
  3516 ;; Registers used:
  3517 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3523 ;;      Params:         0       0       6       0       0       0       0       0       0
  3524 ;;      Locals:         0      11       0       0       0       0       0       0       0
  3525 ;;      Temps:          0       3       0       0       0       0       0       0       0
  3526 ;;      Totals:         0      14       6       0       0       0       0       0       0
  3527 ;;Total ram usage:       20 bytes
  3528 ;; Hardware stack levels used: 1
  3529 ;; Hardware stack levels required when called: 7
  3530 ;; This function calls:
  3531 ;;		_atoi
  3532 ;;		_efgtoa
  3533 ;;		_fputc
  3534 ;;		_isdigit
  3535 ;; This function is called by:
  3536 ;;		_vfprintf
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text4
  3541   00504A                     __ptext4:
  3542                           	callstack 0
  3543   00504A                     _vfpfcnvrt:
  3544                           	callstack 20
  3545   00504A                     
  3546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3547   00504A  C1B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3548   00504E  C1BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3549   005052  CFDE FFF6          	movff	postinc2,tblptrl
  3550   005056  CFDD FFF7          	movff	postdec2,tblptrh
  3551   00505A                     	if	0	;tblptru may be non-zero
  3552   00505A                     	endif
  3553   00505A                     	if	0	;tblptru may be non-zero
  3554   00505A                     	endif
  3555   00505A  0008               	tblrd		*
  3556   00505C  50F5               	movf	tablat,w,c
  3557   00505E  0A25               	xorlw	37
  3558   005060  A4D8               	btfss	status,2,c
  3559   005062  EF35  F028         	goto	u7241
  3560   005066  EF37  F028         	goto	u7240
  3561   00506A                     u7241:
  3562   00506A  EF9C  F029         	goto	l7155
  3563   00506E                     u7240:
  3564   00506E                     
  3565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3566   00506E  C1B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3567   005072  C1BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3568   005076  2ADE               	incf	postinc2,f,c
  3569   005078  0E00               	movlw	0
  3570   00507A  22DD               	addwfc	postdec2,f,c
  3571   00507C                     
  3572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3573   00507C  0E00               	movlw	0
  3574   00507E  6E4B               	movwf	(_width+1)^0,c
  3575   005080  0E00               	movlw	0
  3576   005082  6E4A               	movwf	_width^0,c
  3577   005084  C04A  F174         	movff	_width,_flags
  3578   005088                     
  3579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3580   005088  684C               	setf	_prec^0,c
  3581   00508A  684D               	setf	(_prec+1)^0,c
  3582   00508C                     
  3583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  3584   00508C  C1B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3585   005090  C1BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3586   005094  CFDE FFF6          	movff	postinc2,tblptrl
  3587   005098  CFDD FFF7          	movff	postdec2,tblptrh
  3588   00509C                     	if	0	;tblptru may be non-zero
  3589   00509C                     	endif
  3590   00509C                     	if	0	;tblptru may be non-zero
  3591   00509C                     	endif
  3592   00509C  0008               	tblrd		*
  3593   00509E  50F5               	movf	tablat,w,c
  3594   0050A0  0A2E               	xorlw	46
  3595   0050A2  A4D8               	btfss	status,2,c
  3596   0050A4  EF56  F028         	goto	u7251
  3597   0050A8  EF58  F028         	goto	u7250
  3598   0050AC                     u7251:
  3599   0050AC  EFC6  F028         	goto	l7117
  3600   0050B0                     u7250:
  3601   0050B0                     
  3602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  3603   0050B0  0E00               	movlw	0
  3604   0050B2  6E4D               	movwf	(_prec+1)^0,c
  3605   0050B4  0E00               	movlw	0
  3606   0050B6  6E4C               	movwf	_prec^0,c
  3607   0050B8                     
  3608                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  3609   0050B8  C1B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3610   0050BC  C1BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3611   0050C0  2ADE               	incf	postinc2,f,c
  3612   0050C2  0E00               	movlw	0
  3613   0050C4  22DD               	addwfc	postdec2,f,c
  3614   0050C6                     
  3615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  3616   0050C6  C1B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3617   0050CA  C1BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3618   0050CE  CFDE FFF6          	movff	postinc2,tblptrl
  3619   0050D2  CFDD FFF7          	movff	postdec2,tblptrh
  3620   0050D6                     	if	0	;tblptru may be non-zero
  3621   0050D6                     	endif
  3622   0050D6                     	if	0	;tblptru may be non-zero
  3623   0050D6                     	endif
  3624   0050D6  0008               	tblrd		*
  3625   0050D8  50F5               	movf	tablat,w,c
  3626   0050DA  0A2A               	xorlw	42
  3627   0050DC  A4D8               	btfss	status,2,c
  3628   0050DE  EF73  F028         	goto	u7261
  3629   0050E2  EF75  F028         	goto	u7260
  3630   0050E6                     u7261:
  3631   0050E6  EF92  F028         	goto	l7109
  3632   0050EA                     u7260:
  3633   0050EA                     
  3634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  3635   0050EA  C1B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3636   0050EE  C1BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3637   0050F2  2ADE               	incf	postinc2,f,c
  3638   0050F4  0E00               	movlw	0
  3639   0050F6  22DD               	addwfc	postdec2,f,c
  3640                           
  3641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3642   0050F8  C1BB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3643   0050FC  C1BC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3644   005100  CFDF F0DE          	movff	indf2,??_vfpfcnvrt
  3645   005104  0E02               	movlw	2
  3646   005106  26DE               	addwf	postinc2,f,c
  3647   005108  CFDF F0DF          	movff	indf2,??_vfpfcnvrt+1
  3648   00510C  0E00               	movlw	0
  3649   00510E  22DD               	addwfc	postdec2,f,c
  3650   005110  C0DE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3651   005114  C0DF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3652   005118  CFDE F04C          	movff	postinc2,_prec
  3653   00511C  CFDD F04D          	movff	postdec2,_prec+1
  3654                           
  3655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  3656   005120  EFC6  F028         	goto	l7117
  3657   005124                     l7109:
  3658                           
  3659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  3660   005124  C1B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3661   005128  C1BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3662   00512C  CFDE F013          	movff	postinc2,atoi@s
  3663   005130  CFDD F014          	movff	postdec2,atoi@s+1
  3664   005134  ECA0  F02F         	call	_atoi	;wreg free
  3665   005138  C013  F04C         	movff	?_atoi,_prec
  3666   00513C  C014  F04D         	movff	?_atoi+1,_prec+1
  3667                           
  3668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  3669   005140  EFA9  F028         	goto	l7115
  3670   005144                     l7111:
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  3674   005144  C1B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3675   005148  C1BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3676   00514C  2ADE               	incf	postinc2,f,c
  3677   00514E  0E00               	movlw	0
  3678   005150  22DD               	addwfc	postdec2,f,c
  3679   005152                     l7115:
  3680   005152  C1B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3681   005156  C1BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3682   00515A  CFDE FFF6          	movff	postinc2,tblptrl
  3683   00515E  CFDD FFF7          	movff	postdec2,tblptrh
  3684   005162                     	if	0	;tblptru may be non-zero
  3685   005162                     	endif
  3686   005162                     	if	0	;tblptru may be non-zero
  3687   005162                     	endif
  3688   005162  0008               	tblrd		*
  3689   005164  CFF5 F0DE          	movff	tablat,??_vfpfcnvrt
  3690   005168  0ED0               	movlw	208
  3691   00516A  0100               	movlb	0	; () banked
  3692   00516C  25DE               	addwf	??_vfpfcnvrt& (0+255),w,b
  3693   00516E  6FDF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3694   005170  6BE0               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  3695   005172  0EFF               	movlw	255
  3696   005174  23E0               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  3697   005176  51E0               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  3698   005178  E109               	bnz	u7270
  3699   00517A  0E0A               	movlw	10
  3700   00517C  5DDF               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  3701   00517E  A0D8               	btfss	status,0,c
  3702   005180  EFC4  F028         	goto	u7271
  3703   005184  EFC6  F028         	goto	u7270
  3704   005188                     u7271:
  3705   005188  EFA2  F028         	goto	l7111
  3706   00518C                     u7270:
  3707   00518C                     l7117:
  3708                           
  3709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  3710   00518C  C1B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3711   005190  C1BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3712   005194  CFDE F0EA          	movff	postinc2,vfpfcnvrt@cp
  3713   005198  CFDD F0EB          	movff	postdec2,vfpfcnvrt@cp+1
  3714   00519C                     
  3715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  3716   00519C  C0EA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3717   0051A0  C0EB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3718   0051A4                     	if	0	;tblptru may be non-zero
  3719   0051A4                     	endif
  3720   0051A4                     	if	0	;tblptru may be non-zero
  3721   0051A4                     	endif
  3722   0051A4  0008               	tblrd		*
  3723   0051A6  CFF5 F0E9          	movff	tablat,vfpfcnvrt@c
  3724                           
  3725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  3726   0051AA  EFE3  F028         	goto	l7129
  3727   0051AE                     l7121:
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  3731   0051AE  4BEA               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  3732   0051B0  2BEB               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  3733                           
  3734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  3735   0051B2  EFFD  F028         	goto	l7131
  3736   0051B6                     l7123:
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  3740   0051B6  0E6C               	movlw	108
  3741   0051B8  6FE9               	movwf	vfpfcnvrt@c& (0+255),b
  3742                           
  3743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  3744   0051BA  EFFD  F028         	goto	l7131
  3745   0051BE                     l7125:
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  3749   0051BE  0E00               	movlw	0
  3750   0051C0  6FE9               	movwf	vfpfcnvrt@c& (0+255),b
  3751                           
  3752                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  3753   0051C2  EFFD  F028         	goto	l7131
  3754   0051C6                     l7129:
  3755   0051C6  0100               	movlb	0	; () banked
  3756   0051C8  51E9               	movf	vfpfcnvrt@c& (0+255),w,b
  3757   0051CA  6FDE               	movwf	??_vfpfcnvrt& (0+255),b
  3758   0051CC  6BDF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3759                           
  3760                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3761                           ; Switch size 1, requested type "simple"
  3762                           ; Number of cases is 1, Range of values is 0 to 0
  3763                           ; switch strategies available:
  3764                           ; Name         Instructions Cycles
  3765                           ; simple_byte            4     3 (average)
  3766                           ;	Chosen strategy is simple_byte
  3767   0051CE  51DF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3768   0051D0  0A00               	xorlw	0	; case 0
  3769   0051D2  B4D8               	btfsc	status,2,c
  3770   0051D4  EFEE  F028         	goto	l8463
  3771   0051D8  EFDF  F028         	goto	l7125
  3772   0051DC                     l8463:
  3773                           
  3774                           ; BSR set to: 0
  3775                           ; Switch size 1, requested type "simple"
  3776                           ; Number of cases is 3, Range of values is 76 to 108
  3777                           ; switch strategies available:
  3778                           ; Name         Instructions Cycles
  3779                           ; simple_byte           10     6 (average)
  3780                           ;	Chosen strategy is simple_byte
  3781   0051DC  51DE               	movf	??_vfpfcnvrt& (0+255),w,b
  3782   0051DE  0A4C               	xorlw	76	; case 76
  3783   0051E0  B4D8               	btfsc	status,2,c
  3784   0051E2  EFD7  F028         	goto	l7121
  3785   0051E6  0A2A               	xorlw	42	; case 102
  3786   0051E8  B4D8               	btfsc	status,2,c
  3787   0051EA  EFDB  F028         	goto	l7123
  3788   0051EE  0A0A               	xorlw	10	; case 108
  3789   0051F0  B4D8               	btfsc	status,2,c
  3790   0051F2  EFD7  F028         	goto	l7121
  3791   0051F6  EFDF  F028         	goto	l7125
  3792   0051FA                     l7131:
  3793                           
  3794                           ; BSR set to: 0
  3795   0051FA  C0EA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3796   0051FE  C0EB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3797   005202                     	if	0	;tblptru may be non-zero
  3798   005202                     	endif
  3799   005202                     	if	0	;tblptru may be non-zero
  3800   005202                     	endif
  3801   005202  0008               	tblrd		*
  3802   005204  50F5               	movf	tablat,w,c
  3803   005206  0A66               	xorlw	102
  3804   005208  A4D8               	btfss	status,2,c
  3805   00520A  EF09  F029         	goto	u7281
  3806   00520E  EF0B  F029         	goto	u7280
  3807   005212                     u7281:
  3808   005212  EF93  F029         	goto	l7151
  3809   005216                     u7280:
  3810   005216  EF41  F029         	goto	l7139
  3811   00521A                     l7133:
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3815   00521A  C1BB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3816   00521E  C1BC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3817   005222  CFDF F0DE          	movff	indf2,??_vfpfcnvrt
  3818   005226  0E04               	movlw	4
  3819   005228  26DE               	addwf	postinc2,f,c
  3820   00522A  CFDF F0DF          	movff	indf2,??_vfpfcnvrt+1
  3821   00522E  0E00               	movlw	0
  3822   005230  22DD               	addwfc	postdec2,f,c
  3823   005232  C0DE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3824   005236  C0DF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3825   00523A  CFDE F0E1          	movff	postinc2,vfpfcnvrt@convarg
  3826   00523E  CFDE F0E2          	movff	postinc2,vfpfcnvrt@convarg+1
  3827   005242  CFDE F0E3          	movff	postinc2,vfpfcnvrt@convarg+2
  3828   005246  CFDE F0E4          	movff	postinc2,vfpfcnvrt@convarg+3
  3829                           
  3830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3831   00524A  EF56  F029         	goto	l7141
  3832   00524E                     l7135:
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3836   00524E  C1BB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3837   005252  C1BC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3838   005256  CFDF F0DE          	movff	indf2,??_vfpfcnvrt
  3839   00525A  0E04               	movlw	4
  3840   00525C  26DE               	addwf	postinc2,f,c
  3841   00525E  CFDF F0DF          	movff	indf2,??_vfpfcnvrt+1
  3842   005262  0E00               	movlw	0
  3843   005264  22DD               	addwfc	postdec2,f,c
  3844   005266  C0DE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3845   00526A  C0DF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3846   00526E  CFDE F0E1          	movff	postinc2,vfpfcnvrt@convarg
  3847   005272  CFDE F0E2          	movff	postinc2,vfpfcnvrt@convarg+1
  3848   005276  CFDE F0E3          	movff	postinc2,vfpfcnvrt@convarg+2
  3849   00527A  CFDE F0E4          	movff	postinc2,vfpfcnvrt@convarg+3
  3850                           
  3851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3852   00527E  EF56  F029         	goto	l7141
  3853   005282                     l7139:
  3854                           
  3855                           ; BSR set to: 0
  3856   005282  51E9               	movf	vfpfcnvrt@c& (0+255),w,b
  3857   005284  6FDE               	movwf	??_vfpfcnvrt& (0+255),b
  3858   005286  6BDF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3859                           
  3860                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3861                           ; Switch size 1, requested type "simple"
  3862                           ; Number of cases is 1, Range of values is 0 to 0
  3863                           ; switch strategies available:
  3864                           ; Name         Instructions Cycles
  3865                           ; simple_byte            4     3 (average)
  3866                           ;	Chosen strategy is simple_byte
  3867   005288  51DF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3868   00528A  0A00               	xorlw	0	; case 0
  3869   00528C  B4D8               	btfsc	status,2,c
  3870   00528E  EF4B  F029         	goto	l8465
  3871   005292  EF56  F029         	goto	l7141
  3872   005296                     l8465:
  3873                           
  3874                           ; BSR set to: 0
  3875                           ; Switch size 1, requested type "simple"
  3876                           ; Number of cases is 2, Range of values is 76 to 108
  3877                           ; switch strategies available:
  3878                           ; Name         Instructions Cycles
  3879                           ; simple_byte            7     4 (average)
  3880                           ;	Chosen strategy is simple_byte
  3881   005296  51DE               	movf	??_vfpfcnvrt& (0+255),w,b
  3882   005298  0A4C               	xorlw	76	; case 76
  3883   00529A  B4D8               	btfsc	status,2,c
  3884   00529C  EF27  F029         	goto	l7135
  3885   0052A0  0A20               	xorlw	32	; case 108
  3886   0052A2  B4D8               	btfsc	status,2,c
  3887   0052A4  EF0D  F029         	goto	l7133
  3888   0052A8  EF56  F029         	goto	l7141
  3889   0052AC                     l7141:
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3893   0052AC  0E01               	movlw	1
  3894   0052AE  25EA               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3895   0052B0  6FDE               	movwf	??_vfpfcnvrt& (0+255),b
  3896   0052B2  0E00               	movlw	0
  3897   0052B4  21EB               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3898   0052B6  6FDF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3899   0052B8  C1B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3900   0052BC  C1BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3901   0052C0  C0DE  FFDE         	movff	??_vfpfcnvrt,postinc2
  3902   0052C4  C0DF  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3903                           
  3904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3905   0052C8  EF7D  F029         	goto	l7149
  3906   0052CC                     l7143:
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3910   0052CC  C1B7  F0D5         	movff	vfpfcnvrt@fp,efgtoa@fp
  3911   0052D0  C1B8  F0D6         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3912   0052D4  C0E1  F0D7         	movff	vfpfcnvrt@convarg,efgtoa@f
  3913   0052D8  C0E2  F0D8         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3914   0052DC  C0E3  F0D9         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3915   0052E0  C0E4  F0DA         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3916   0052E4  C0EA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3917   0052E8  C0EB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3918   0052EC                     	if	0	;tblptru may be non-zero
  3919   0052EC                     	endif
  3920   0052EC                     	if	0	;tblptru may be non-zero
  3921   0052EC                     	endif
  3922   0052EC  0008               	tblrd		*
  3923   0052EE  CFF5 F0DB          	movff	tablat,efgtoa@c
  3924   0052F2  EC83  F009         	call	_efgtoa	;wreg free
  3925   0052F6  EFB0  F029         	goto	l1208
  3926   0052FA                     l7149:
  3927                           
  3928                           ; BSR set to: 0
  3929   0052FA  C0EA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3930   0052FE  C0EB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3931   005302                     	if	0	;tblptru may be non-zero
  3932   005302                     	endif
  3933   005302                     	if	0	;tblptru may be non-zero
  3934   005302                     	endif
  3935   005302  0008               	tblrd		*
  3936   005304  50F5               	movf	tablat,w,c
  3937   005306  6FDE               	movwf	??_vfpfcnvrt& (0+255),b
  3938   005308  6BDF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3939                           
  3940                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3941                           ; Switch size 1, requested type "simple"
  3942                           ; Number of cases is 1, Range of values is 0 to 0
  3943                           ; switch strategies available:
  3944                           ; Name         Instructions Cycles
  3945                           ; simple_byte            4     3 (average)
  3946                           ;	Chosen strategy is simple_byte
  3947   00530A  51DF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3948   00530C  0A00               	xorlw	0	; case 0
  3949   00530E  B4D8               	btfsc	status,2,c
  3950   005310  EF8C  F029         	goto	l8467
  3951   005314  EF93  F029         	goto	l7151
  3952   005318                     l8467:
  3953                           
  3954                           ; BSR set to: 0
  3955                           ; Switch size 1, requested type "simple"
  3956                           ; Number of cases is 1, Range of values is 102 to 102
  3957                           ; switch strategies available:
  3958                           ; Name         Instructions Cycles
  3959                           ; simple_byte            4     3 (average)
  3960                           ;	Chosen strategy is simple_byte
  3961   005318  51DE               	movf	??_vfpfcnvrt& (0+255),w,b
  3962   00531A  0A66               	xorlw	102	; case 102
  3963   00531C  B4D8               	btfsc	status,2,c
  3964   00531E  EF66  F029         	goto	l7143
  3965   005322  EF93  F029         	goto	l7151
  3966   005326                     l7151:
  3967                           
  3968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3969   005326  C1B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3970   00532A  C1BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3971   00532E  2ADE               	incf	postinc2,f,c
  3972   005330  0E00               	movlw	0
  3973   005332  22DD               	addwfc	postdec2,f,c
  3974   005334  EFB0  F029         	goto	l1208
  3975   005338                     l7155:
  3976                           
  3977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3978   005338  C1B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3979   00533C  C1BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3980   005340  CFDE FFF6          	movff	postinc2,tblptrl
  3981   005344  CFDD FFF7          	movff	postdec2,tblptrh
  3982   005348                     	if	0	;tblptru may be non-zero
  3983   005348                     	endif
  3984   005348                     	if	0	;tblptru may be non-zero
  3985   005348                     	endif
  3986   005348  0008               	tblrd		*
  3987   00534A  50F5               	movf	tablat,w,c
  3988   00534C  6E0D               	movwf	fputc@c^0,c
  3989   00534E  6A0E               	clrf	(fputc@c+1)^0,c
  3990   005350  C1B7  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  3991   005354  C1B8  F010         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3992   005358  EC48  F032         	call	_fputc	;wreg free
  3993   00535C  EF93  F029         	goto	l7151
  3994   005360                     l1208:
  3995   005360  0012               	return		;funcret
  3996   005362                     __end_of_vfpfcnvrt:
  3997                           	callstack 0
  3998                           
  3999 ;; *************** function _efgtoa *****************
  4000 ;; Defined at:
  4001 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  fp              2  117[BANK0 ] PTR struct _IO_FILE
  4004 ;;		 -> sprintf@f(11), 
  4005 ;;  f               4  119[BANK0 ] PTR struct _IO_FILE
  4006 ;;  c               1  123[BANK0 ] unsigned char 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  u               4   40[BANK1 ] struct flui
  4009 ;;  g               4   34[BANK1 ] struct flui
  4010 ;;  l               4   29[BANK1 ] struct flui
  4011 ;;  h               4   25[BANK1 ] struct flui
  4012 ;;  ou              4   19[BANK1 ] struct flui
  4013 ;;  n               2   38[BANK1 ] int 
  4014 ;;  i               2   23[BANK1 ] int 
  4015 ;;  w               2   17[BANK1 ] int 
  4016 ;;  e               2   15[BANK1 ] int 
  4017 ;;  m               2   13[BANK1 ] int 
  4018 ;;  d               2   11[BANK1 ] int 
  4019 ;;  t               2    4[BANK1 ] int 
  4020 ;;  p               2    2[BANK1 ] int 
  4021 ;;  ne              2    0[BANK1 ] int 
  4022 ;;  sign            1   33[BANK1 ] unsigned char 
  4023 ;;  nmode           1   10[BANK1 ] unsigned char 
  4024 ;;  mode            1    9[BANK1 ] unsigned char 
  4025 ;;  pp              1    8[BANK1 ] unsigned char 
  4026 ;;  esign           1    0        unsigned char 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4036 ;;      Params:         0       7       0       0       0       0       0       0       0
  4037 ;;      Locals:         0       0      44       0       0       0       0       0       0
  4038 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4039 ;;      Totals:         0       9      44       0       0       0       0       0       0
  4040 ;;Total ram usage:       53 bytes
  4041 ;; Hardware stack levels used: 1
  4042 ;; Hardware stack levels required when called: 6
  4043 ;; This function calls:
  4044 ;;		___fladd
  4045 ;;		___fldiv
  4046 ;;		___fleq
  4047 ;;		___flge
  4048 ;;		___flmul
  4049 ;;		___flneg
  4050 ;;		___flsub
  4051 ;;		___fltol
  4052 ;;		___fpclassifyf
  4053 ;;		_floorf
  4054 ;;		_labs
  4055 ;;		_memcpy
  4056 ;;		_pad
  4057 ;;		_strcpy
  4058 ;; This function is called by:
  4059 ;;		_vfpfcnvrt
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text5
  4064   001306                     __ptext5:
  4065                           	callstack 0
  4066   001306                     _efgtoa:
  4067                           	callstack 20
  4068   001306                     
  4069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  4070   001306  0E00               	movlw	0
  4071   001308  0101               	movlb	1	; () banked
  4072   00130A  6FAC               	movwf	efgtoa@sign& (0+255),b
  4073   00130C                     
  4074                           ; BSR set to: 1
  4075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  4076   00130C  C0D7  F1AD         	movff	efgtoa@f,efgtoa@g
  4077   001310  C0D8  F1AE         	movff	efgtoa@f+1,efgtoa@g+1
  4078   001314  C0D9  F1AF         	movff	efgtoa@f+2,efgtoa@g+2
  4079   001318  C0DA  F1B0         	movff	efgtoa@f+3,efgtoa@g+3
  4080   00131C                     
  4081                           ; BSR set to: 1
  4082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  4083   00131C  BFB0               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4084   00131E  EF95  F009         	goto	u6770
  4085   001322  EF93  F009         	goto	u6771
  4086   001326                     u6771:
  4087   001326  EFA9  F009         	goto	l6783
  4088   00132A                     u6770:
  4089   00132A                     
  4090                           ; BSR set to: 1
  4091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  4092   00132A  0E01               	movlw	1
  4093   00132C  6FAC               	movwf	efgtoa@sign& (0+255),b
  4094   00132E                     
  4095                           ; BSR set to: 1
  4096                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  4097   00132E  C1AD  F081         	movff	efgtoa@g,___flneg@f1
  4098   001332  C1AE  F082         	movff	efgtoa@g+1,___flneg@f1+1
  4099   001336  C1AF  F083         	movff	efgtoa@g+2,___flneg@f1+2
  4100   00133A  C1B0  F084         	movff	efgtoa@g+3,___flneg@f1+3
  4101   00133E  EC61  F036         	call	___flneg	;wreg free
  4102   001342  C081  F1AD         	movff	?___flneg,efgtoa@g
  4103   001346  C082  F1AE         	movff	?___flneg+1,efgtoa@g+1
  4104   00134A  C083  F1AF         	movff	?___flneg+2,efgtoa@g+2
  4105   00134E  C084  F1B0         	movff	?___flneg+3,efgtoa@g+3
  4106   001352                     l6783:
  4107                           
  4108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  4109   001352  0E00               	movlw	0
  4110   001354  0101               	movlb	1	; () banked
  4111   001356  6FB2               	movwf	(efgtoa@n+1)& (0+255),b
  4112   001358  0E00               	movlw	0
  4113   00135A  6FB1               	movwf	efgtoa@n& (0+255),b
  4114   00135C                     
  4115                           ; BSR set to: 1
  4116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  4117   00135C  C04A  F19C         	movff	_width,efgtoa@w
  4118   001360  C04B  F19D         	movff	_width+1,efgtoa@w+1
  4119   001364                     
  4120                           ; BSR set to: 1
  4121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  4122   001364  51AC               	movf	efgtoa@sign& (0+255),w,b
  4123   001366  B4D8               	btfsc	status,2,c
  4124   001368  EFB8  F009         	goto	u6781
  4125   00136C  EFBA  F009         	goto	u6780
  4126   001370                     u6781:
  4127   001370  EFCE  F009         	goto	l6797
  4128   001374                     u6780:
  4129   001374                     
  4130                           ; BSR set to: 1
  4131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  4132   001374  51AC               	movf	efgtoa@sign& (0+255),w,b
  4133   001376  A4D8               	btfss	status,2,c
  4134   001378  EFC0  F009         	goto	u6791
  4135   00137C  EFC2  F009         	goto	u6790
  4136   001380                     u6791:
  4137   001380  EFC8  F009         	goto	l6793
  4138   001384                     u6790:
  4139   001384                     
  4140                           ; BSR set to: 1
  4141   001384  0E00               	movlw	0
  4142   001386  6F92               	movwf	(_efgtoa$1402+1)& (0+255),b
  4143   001388  0E2B               	movlw	43
  4144   00138A  6F91               	movwf	_efgtoa$1402& (0+255),b
  4145   00138C  EFCC  F009         	goto	l6795
  4146   001390                     l6793:
  4147                           
  4148                           ; BSR set to: 1
  4149   001390  0E00               	movlw	0
  4150   001392  6F92               	movwf	(_efgtoa$1402+1)& (0+255),b
  4151   001394  0E2D               	movlw	45
  4152   001396  6F91               	movwf	_efgtoa$1402& (0+255),b
  4153   001398                     l6795:
  4154                           
  4155                           ; BSR set to: 1
  4156   001398  C191  F1AC         	movff	_efgtoa$1402,efgtoa@sign
  4157   00139C                     l6797:
  4158                           
  4159                           ; BSR set to: 1
  4160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  4161   00139C  C1AD  F00D         	movff	efgtoa@g,___fpclassifyf@x
  4162   0013A0  C1AE  F00E         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4163   0013A4  C1AF  F00F         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4164   0013A8  C1B0  F010         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4165   0013AC  EC4B  F031         	call	___fpclassifyf	;wreg free
  4166   0013B0  040D               	decf	?___fpclassifyf^0,w,c
  4167   0013B2  100E               	iorwf	(?___fpclassifyf+1)^0,w,c
  4168   0013B4  A4D8               	btfss	status,2,c
  4169   0013B6  EFDF  F009         	goto	u6801
  4170   0013BA  EFE1  F009         	goto	u6800
  4171   0013BE                     u6801:
  4172   0013BE  EF14  F00A         	goto	l6815
  4173   0013C2                     u6800:
  4174   0013C2                     
  4175                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  4176   0013C2  0101               	movlb	1	; () banked
  4177   0013C4  51AC               	movf	efgtoa@sign& (0+255),w,b
  4178   0013C6  B4D8               	btfsc	status,2,c
  4179   0013C8  EFE8  F009         	goto	u6811
  4180   0013CC  EFEA  F009         	goto	u6810
  4181   0013D0                     u6811:
  4182   0013D0  EFF3  F009         	goto	l6807
  4183   0013D4                     u6810:
  4184   0013D4                     
  4185                           ; BSR set to: 1
  4186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  4187   0013D4  C1AC  F580         	movff	efgtoa@sign,_dbuf
  4188   0013D8                     
  4189                           ; BSR set to: 1
  4190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  4191   0013D8  079C               	decf	efgtoa@w& (0+255),f,b
  4192   0013DA  A0D8               	btfss	status,0,c
  4193   0013DC  079D               	decf	(efgtoa@w+1)& (0+255),f,b
  4194   0013DE                     
  4195                           ; BSR set to: 1
  4196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  4197   0013DE  0E00               	movlw	0
  4198   0013E0  6FB2               	movwf	(efgtoa@n+1)& (0+255),b
  4199   0013E2  0E01               	movlw	1
  4200   0013E4  6FB1               	movwf	efgtoa@n& (0+255),b
  4201   0013E6                     l6807:
  4202                           
  4203                           ; BSR set to: 1
  4204                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  4205   0013E6  0E80               	movlw	low _dbuf
  4206   0013E8  25B1               	addwf	efgtoa@n& (0+255),w,b
  4207   0013EA  6E0D               	movwf	strcpy@dest^0,c
  4208   0013EC  0E05               	movlw	high _dbuf
  4209   0013EE  21B2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4210   0013F0  6E0E               	movwf	(strcpy@dest+1)^0,c
  4211   0013F2  0EB3               	movlw	low STR_7
  4212   0013F4  6E0F               	movwf	strcpy@src^0,c
  4213   0013F6  0E08               	movlw	high STR_7
  4214   0013F8  6E10               	movwf	(strcpy@src+1)^0,c
  4215   0013FA  EC24  F036         	call	_strcpy	;wreg free
  4216   0013FE                     l6809:
  4217                           
  4218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  4219   0013FE  0101               	movlb	1	; () banked
  4220   001400  0EFD               	movlw	253
  4221   001402  279C               	addwf	efgtoa@w& (0+255),f,b
  4222   001404  0EFF               	movlw	255
  4223   001406  239D               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4224   001408                     
  4225                           ; BSR set to: 1
  4226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  4227   001408  C0D5  F01D         	movff	efgtoa@fp,pad@fp
  4228   00140C  C0D6  F01E         	movff	efgtoa@fp+1,pad@fp+1
  4229   001410  0E80               	movlw	low _dbuf
  4230   001412  6E1F               	movwf	pad@buf^0,c
  4231   001414  0E05               	movlw	high _dbuf
  4232   001416  6E20               	movwf	(pad@buf+1)^0,c
  4233   001418  C19C  F021         	movff	efgtoa@w,pad@p
  4234   00141C  C19D  F022         	movff	efgtoa@w+1,pad@p+1
  4235   001420  ECF2  F033         	call	_pad	;wreg free
  4236   001424  EF95  F00E         	goto	l1140
  4237   001428                     l6815:
  4238                           
  4239                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  4240   001428  C1AD  F00D         	movff	efgtoa@g,___fpclassifyf@x
  4241   00142C  C1AE  F00E         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4242   001430  C1AF  F00F         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4243   001434  C1B0  F010         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4244   001438  EC4B  F031         	call	___fpclassifyf	;wreg free
  4245   00143C  500D               	movf	?___fpclassifyf^0,w,c
  4246   00143E  100E               	iorwf	(?___fpclassifyf+1)^0,w,c
  4247   001440  A4D8               	btfss	status,2,c
  4248   001442  EF25  F00A         	goto	u6821
  4249   001446  EF27  F00A         	goto	u6820
  4250   00144A                     u6821:
  4251   00144A  EF47  F00A         	goto	l6833
  4252   00144E                     u6820:
  4253   00144E                     
  4254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  4255   00144E  0101               	movlb	1	; () banked
  4256   001450  51AC               	movf	efgtoa@sign& (0+255),w,b
  4257   001452  B4D8               	btfsc	status,2,c
  4258   001454  EF2E  F00A         	goto	u6831
  4259   001458  EF30  F00A         	goto	u6830
  4260   00145C                     u6831:
  4261   00145C  EF39  F00A         	goto	l6825
  4262   001460                     u6830:
  4263   001460                     
  4264                           ; BSR set to: 1
  4265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  4266   001460  C1AC  F580         	movff	efgtoa@sign,_dbuf
  4267   001464                     
  4268                           ; BSR set to: 1
  4269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  4270   001464  079C               	decf	efgtoa@w& (0+255),f,b
  4271   001466  A0D8               	btfss	status,0,c
  4272   001468  079D               	decf	(efgtoa@w+1)& (0+255),f,b
  4273   00146A                     
  4274                           ; BSR set to: 1
  4275                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  4276   00146A  0E00               	movlw	0
  4277   00146C  6FB2               	movwf	(efgtoa@n+1)& (0+255),b
  4278   00146E  0E01               	movlw	1
  4279   001470  6FB1               	movwf	efgtoa@n& (0+255),b
  4280   001472                     l6825:
  4281                           
  4282                           ; BSR set to: 1
  4283                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  4284   001472  0E80               	movlw	low _dbuf
  4285   001474  25B1               	addwf	efgtoa@n& (0+255),w,b
  4286   001476  6E0D               	movwf	strcpy@dest^0,c
  4287   001478  0E05               	movlw	high _dbuf
  4288   00147A  21B2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4289   00147C  6E0E               	movwf	(strcpy@dest+1)^0,c
  4290   00147E  0EB7               	movlw	low STR_10
  4291   001480  6E0F               	movwf	strcpy@src^0,c
  4292   001482  0E08               	movlw	high STR_10
  4293   001484  6E10               	movwf	(strcpy@src+1)^0,c
  4294   001486  EC24  F036         	call	_strcpy	;wreg free
  4295   00148A  EFFF  F009         	goto	l6809
  4296   00148E                     l6833:
  4297                           
  4298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  4299   00148E  0E00               	movlw	0
  4300   001490  0101               	movlb	1	; () banked
  4301   001492  6FB3               	movwf	efgtoa@u& (0+255),b
  4302   001494  0E00               	movlw	0
  4303   001496  6FB4               	movwf	(efgtoa@u+1)& (0+255),b
  4304   001498  0E80               	movlw	128
  4305   00149A  6FB5               	movwf	(efgtoa@u+2)& (0+255),b
  4306   00149C  0E3F               	movlw	63
  4307   00149E  6FB6               	movwf	(efgtoa@u+3)& (0+255),b
  4308                           
  4309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  4310   0014A0  0E00               	movlw	0
  4311   0014A2  6F9B               	movwf	(efgtoa@e+1)& (0+255),b
  4312   0014A4  0E00               	movlw	0
  4313   0014A6  6F9A               	movwf	efgtoa@e& (0+255),b
  4314   0014A8                     
  4315                           ; BSR set to: 1
  4316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  4317   0014A8  C1AD  F00D         	movff	efgtoa@g,___fleq@ff1
  4318   0014AC  C1AE  F00E         	movff	efgtoa@g+1,___fleq@ff1+1
  4319   0014B0  C1AF  F00F         	movff	efgtoa@g+2,___fleq@ff1+2
  4320   0014B4  C1B0  F010         	movff	efgtoa@g+3,___fleq@ff1+3
  4321   0014B8  0E00               	movlw	0
  4322   0014BA  6E11               	movwf	___fleq@ff2^0,c
  4323   0014BC  0E00               	movlw	0
  4324   0014BE  6E12               	movwf	(___fleq@ff2+1)^0,c
  4325   0014C0  0E00               	movlw	0
  4326   0014C2  6E13               	movwf	(___fleq@ff2+2)^0,c
  4327   0014C4  0E00               	movlw	0
  4328   0014C6  6E14               	movwf	(___fleq@ff2+3)^0,c
  4329   0014C8  EC0F  F033         	call	___fleq	;wreg free
  4330   0014CC  B0D8               	btfsc	status,0,c
  4331   0014CE  EF6B  F00A         	goto	u6841
  4332   0014D2  EF6D  F00A         	goto	u6840
  4333   0014D6                     u6841:
  4334   0014D6  EF4D  F00B         	goto	l1143
  4335   0014DA                     u6840:
  4336   0014DA  EF7A  F00A         	goto	l6841
  4337   0014DE                     l1145:
  4338                           
  4339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  4340   0014DE  C19E  F1B3         	movff	efgtoa@ou,efgtoa@u
  4341   0014E2  C19F  F1B4         	movff	efgtoa@ou+1,efgtoa@u+1
  4342   0014E6  C1A0  F1B5         	movff	efgtoa@ou+2,efgtoa@u+2
  4343   0014EA  C1A1  F1B6         	movff	efgtoa@ou+3,efgtoa@u+3
  4344   0014EE                     
  4345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  4346   0014EE  0101               	movlb	1	; () banked
  4347   0014F0  4B9A               	infsnz	efgtoa@e& (0+255),f,b
  4348   0014F2  2B9B               	incf	(efgtoa@e+1)& (0+255),f,b
  4349   0014F4                     l6841:
  4350                           
  4351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  4352   0014F4  C1B3  F01B         	movff	efgtoa@u,___flmul@b
  4353   0014F8  C1B4  F01C         	movff	efgtoa@u+1,___flmul@b+1
  4354   0014FC  C1B5  F01D         	movff	efgtoa@u+2,___flmul@b+2
  4355   001500  C1B6  F01E         	movff	efgtoa@u+3,___flmul@b+3
  4356   001504  0E00               	movlw	0
  4357   001506  6E1F               	movwf	___flmul@a^0,c
  4358   001508  0E00               	movlw	0
  4359   00150A  6E20               	movwf	(___flmul@a+1)^0,c
  4360   00150C  0E20               	movlw	32
  4361   00150E  6E21               	movwf	(___flmul@a+2)^0,c
  4362   001510  0E41               	movlw	65
  4363   001512  6E22               	movwf	(___flmul@a+3)^0,c
  4364   001514  EC80  F022         	call	___flmul	;wreg free
  4365   001518  C01B  F19E         	movff	?___flmul,efgtoa@ou
  4366   00151C  C01C  F19F         	movff	?___flmul+1,efgtoa@ou+1
  4367   001520  C01D  F1A0         	movff	?___flmul+2,efgtoa@ou+2
  4368   001524  C01E  F1A1         	movff	?___flmul+3,efgtoa@ou+3
  4369   001528  0101               	movlb	1	; () banked
  4370   00152A  519E               	movf	efgtoa@ou& (0+255),w,b
  4371   00152C  5DAD               	subwf	efgtoa@g& (0+255),w,b
  4372   00152E  6E0D               	movwf	labs@a^0,c
  4373   001530  519F               	movf	(efgtoa@ou+1)& (0+255),w,b
  4374   001532  59AE               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4375   001534  6E0E               	movwf	(labs@a+1)^0,c
  4376   001536  51A0               	movf	(efgtoa@ou+2)& (0+255),w,b
  4377   001538  59AF               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4378   00153A  6E0F               	movwf	(labs@a+2)^0,c
  4379   00153C  51A1               	movf	(efgtoa@ou+3)& (0+255),w,b
  4380   00153E  59B0               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4381   001540  6E10               	movwf	(labs@a+3)^0,c
  4382   001542  ECDE  F034         	call	_labs	;wreg free
  4383   001546  BE10               	btfsc	(?_labs+3)^0,7,c
  4384   001548  EFB1  F00A         	goto	u6851
  4385   00154C  5010               	movf	(?_labs+3)^0,w,c
  4386   00154E  100F               	iorwf	(?_labs+2)^0,w,c
  4387   001550  100E               	iorwf	(?_labs+1)^0,w,c
  4388   001552  E109               	bnz	u6850
  4389   001554  0E02               	movlw	2
  4390   001556  5C0D               	subwf	?_labs^0,w,c
  4391   001558  A0D8               	btfss	status,0,c
  4392   00155A  EFB1  F00A         	goto	u6851
  4393   00155E  EFB3  F00A         	goto	u6850
  4394   001562                     u6851:
  4395   001562  EF6F  F00A         	goto	l1145
  4396   001566                     u6850:
  4397   001566  C19E  F034         	movff	efgtoa@ou,___flge@ff1
  4398   00156A  C19F  F035         	movff	efgtoa@ou+1,___flge@ff1+1
  4399   00156E  C1A0  F036         	movff	efgtoa@ou+2,___flge@ff1+2
  4400   001572  C1A1  F037         	movff	efgtoa@ou+3,___flge@ff1+3
  4401   001576  C1AD  F038         	movff	efgtoa@g,___flge@ff2
  4402   00157A  C1AE  F039         	movff	efgtoa@g+1,___flge@ff2+1
  4403   00157E  C1AF  F03A         	movff	efgtoa@g+2,___flge@ff2+2
  4404   001582  C1B0  F03B         	movff	efgtoa@g+3,___flge@ff2+3
  4405   001586  ECC9  F030         	call	___flge	;wreg free
  4406   00158A  A0D8               	btfss	status,0,c
  4407   00158C  EFCA  F00A         	goto	u6861
  4408   001590  EFCC  F00A         	goto	u6860
  4409   001594                     u6861:
  4410   001594  EF6F  F00A         	goto	l1145
  4411   001598                     u6860:
  4412   001598                     
  4413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  4414   001598  0101               	movlb	1	; () banked
  4415   00159A  51B3               	movf	efgtoa@u& (0+255),w,b
  4416   00159C  5DAD               	subwf	efgtoa@g& (0+255),w,b
  4417   00159E  6E0D               	movwf	labs@a^0,c
  4418   0015A0  51B4               	movf	(efgtoa@u+1)& (0+255),w,b
  4419   0015A2  59AE               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4420   0015A4  6E0E               	movwf	(labs@a+1)^0,c
  4421   0015A6  51B5               	movf	(efgtoa@u+2)& (0+255),w,b
  4422   0015A8  59AF               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4423   0015AA  6E0F               	movwf	(labs@a+2)^0,c
  4424   0015AC  51B6               	movf	(efgtoa@u+3)& (0+255),w,b
  4425   0015AE  59B0               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4426   0015B0  6E10               	movwf	(labs@a+3)^0,c
  4427   0015B2  ECDE  F034         	call	_labs	;wreg free
  4428   0015B6  BE10               	btfsc	(?_labs+3)^0,7,c
  4429   0015B8  EFEB  F00A         	goto	u6870
  4430   0015BC  5010               	movf	(?_labs+3)^0,w,c
  4431   0015BE  100F               	iorwf	(?_labs+2)^0,w,c
  4432   0015C0  100E               	iorwf	(?_labs+1)^0,w,c
  4433   0015C2  E107               	bnz	u6871
  4434   0015C4  0E02               	movlw	2
  4435   0015C6  5C0D               	subwf	?_labs^0,w,c
  4436   0015C8  B0D8               	btfsc	status,0,c
  4437   0015CA  EFE9  F00A         	goto	u6871
  4438   0015CE  EFEB  F00A         	goto	u6870
  4439   0015D2                     u6871:
  4440   0015D2  EF34  F00B         	goto	l6859
  4441   0015D6                     u6870:
  4442   0015D6                     l6849:
  4443                           
  4444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  4445   0015D6  C1B3  F1AD         	movff	efgtoa@u,efgtoa@g
  4446   0015DA  C1B4  F1AE         	movff	efgtoa@u+1,efgtoa@g+1
  4447   0015DE  C1B5  F1AF         	movff	efgtoa@u+2,efgtoa@g+2
  4448   0015E2  C1B6  F1B0         	movff	efgtoa@u+3,efgtoa@g+3
  4449                           
  4450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  4451   0015E6  EF4D  F00B         	goto	l1143
  4452   0015EA                     l6851:
  4453                           
  4454                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  4455   0015EA  C1B3  F068         	movff	efgtoa@u,___fldiv@b
  4456   0015EE  C1B4  F069         	movff	efgtoa@u+1,___fldiv@b+1
  4457   0015F2  C1B5  F06A         	movff	efgtoa@u+2,___fldiv@b+2
  4458   0015F6  C1B6  F06B         	movff	efgtoa@u+3,___fldiv@b+3
  4459   0015FA  0E00               	movlw	0
  4460   0015FC  0100               	movlb	0	; () banked
  4461   0015FE  6F6C               	movwf	___fldiv@a& (0+255),b
  4462   001600  0E00               	movlw	0
  4463   001602  6F6D               	movwf	(___fldiv@a+1)& (0+255),b
  4464   001604  0E20               	movlw	32
  4465   001606  6F6E               	movwf	(___fldiv@a+2)& (0+255),b
  4466   001608  0E41               	movlw	65
  4467   00160A  6F6F               	movwf	(___fldiv@a+3)& (0+255),b
  4468   00160C  EC95  F024         	call	___fldiv	;wreg free
  4469   001610  C068  F1B3         	movff	?___fldiv,efgtoa@u
  4470   001614  C069  F1B4         	movff	?___fldiv+1,efgtoa@u+1
  4471   001618  C06A  F1B5         	movff	?___fldiv+2,efgtoa@u+2
  4472   00161C  C06B  F1B6         	movff	?___fldiv+3,efgtoa@u+3
  4473   001620                     
  4474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  4475   001620  0101               	movlb	1	; () banked
  4476   001622  079A               	decf	efgtoa@e& (0+255),f,b
  4477   001624  A0D8               	btfss	status,0,c
  4478   001626  079B               	decf	(efgtoa@e+1)& (0+255),f,b
  4479   001628                     
  4480                           ; BSR set to: 1
  4481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  4482   001628  51B3               	movf	efgtoa@u& (0+255),w,b
  4483   00162A  5DAD               	subwf	efgtoa@g& (0+255),w,b
  4484   00162C  6E0D               	movwf	labs@a^0,c
  4485   00162E  51B4               	movf	(efgtoa@u+1)& (0+255),w,b
  4486   001630  59AE               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4487   001632  6E0E               	movwf	(labs@a+1)^0,c
  4488   001634  51B5               	movf	(efgtoa@u+2)& (0+255),w,b
  4489   001636  59AF               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4490   001638  6E0F               	movwf	(labs@a+2)^0,c
  4491   00163A  51B6               	movf	(efgtoa@u+3)& (0+255),w,b
  4492   00163C  59B0               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4493   00163E  6E10               	movwf	(labs@a+3)^0,c
  4494   001640  ECDE  F034         	call	_labs	;wreg free
  4495   001644  BE10               	btfsc	(?_labs+3)^0,7,c
  4496   001646  EF32  F00B         	goto	u6880
  4497   00164A  5010               	movf	(?_labs+3)^0,w,c
  4498   00164C  100F               	iorwf	(?_labs+2)^0,w,c
  4499   00164E  100E               	iorwf	(?_labs+1)^0,w,c
  4500   001650  E107               	bnz	u6881
  4501   001652  0E02               	movlw	2
  4502   001654  5C0D               	subwf	?_labs^0,w,c
  4503   001656  B0D8               	btfsc	status,0,c
  4504   001658  EF30  F00B         	goto	u6881
  4505   00165C  EF32  F00B         	goto	u6880
  4506   001660                     u6881:
  4507   001660  EF34  F00B         	goto	l6859
  4508   001664                     u6880:
  4509   001664  EFEB  F00A         	goto	l6849
  4510   001668                     l6859:
  4511                           
  4512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  4513   001668  C1AD  F034         	movff	efgtoa@g,___flge@ff1
  4514   00166C  C1AE  F035         	movff	efgtoa@g+1,___flge@ff1+1
  4515   001670  C1AF  F036         	movff	efgtoa@g+2,___flge@ff1+2
  4516   001674  C1B0  F037         	movff	efgtoa@g+3,___flge@ff1+3
  4517   001678  C1B3  F038         	movff	efgtoa@u,___flge@ff2
  4518   00167C  C1B4  F039         	movff	efgtoa@u+1,___flge@ff2+1
  4519   001680  C1B5  F03A         	movff	efgtoa@u+2,___flge@ff2+2
  4520   001684  C1B6  F03B         	movff	efgtoa@u+3,___flge@ff2+3
  4521   001688  ECC9  F030         	call	___flge	;wreg free
  4522   00168C  A0D8               	btfss	status,0,c
  4523   00168E  EF4B  F00B         	goto	u6891
  4524   001692  EF4D  F00B         	goto	u6890
  4525   001696                     u6891:
  4526   001696  EFF5  F00A         	goto	l6851
  4527   00169A                     u6890:
  4528   00169A                     l1143:
  4529                           
  4530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  4531   00169A  C0DB  F194         	movff	efgtoa@c,efgtoa@mode
  4532                           
  4533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  4534   00169E  C194  F195         	movff	efgtoa@mode,efgtoa@nmode
  4535   0016A2                     
  4536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  4537   0016A2  BE4D               	btfsc	(_prec+1)^0,7,c
  4538   0016A4  EF56  F00B         	goto	u6901
  4539   0016A8  EF58  F00B         	goto	u6900
  4540   0016AC                     u6901:
  4541   0016AC  EF5E  F00B         	goto	l6865
  4542   0016B0                     u6900:
  4543   0016B0  C04C  F18D         	movff	_prec,efgtoa@p
  4544   0016B4  C04D  F18E         	movff	_prec+1,efgtoa@p+1
  4545   0016B8  EF63  F00B         	goto	l6867
  4546   0016BC                     l6865:
  4547   0016BC  0E00               	movlw	0
  4548   0016BE  0101               	movlb	1	; () banked
  4549   0016C0  6F8E               	movwf	(efgtoa@p+1)& (0+255),b
  4550   0016C2  0E06               	movlw	6
  4551   0016C4  6F8D               	movwf	efgtoa@p& (0+255),b
  4552   0016C6                     l6867:
  4553                           
  4554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  4555   0016C6  C18D  F198         	movff	efgtoa@p,efgtoa@m
  4556   0016CA  C18E  F199         	movff	efgtoa@p+1,efgtoa@m+1
  4557   0016CE                     
  4558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  4559   0016CE  0101               	movlb	1	; () banked
  4560   0016D0  4B98               	infsnz	efgtoa@m& (0+255),f,b
  4561   0016D2  2B99               	incf	(efgtoa@m+1)& (0+255),f,b
  4562   0016D4                     
  4563                           ; BSR set to: 1
  4564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  4565   0016D4  0E66               	movlw	102
  4566   0016D6  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  4567   0016D8  A4D8               	btfss	status,2,c
  4568   0016DA  EF71  F00B         	goto	u6911
  4569   0016DE  EF73  F00B         	goto	u6910
  4570   0016E2                     u6911:
  4571   0016E2  EF93  F00B         	goto	l6881
  4572   0016E6                     u6910:
  4573   0016E6                     
  4574                           ; BSR set to: 1
  4575                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  4576   0016E6  BF9B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4577   0016E8  EF7A  F00B         	goto	u6920
  4578   0016EC  EF78  F00B         	goto	u6921
  4579   0016F0                     u6921:
  4580   0016F0  EF86  F00B         	goto	l6877
  4581   0016F4                     u6920:
  4582   0016F4                     
  4583                           ; BSR set to: 1
  4584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  4585   0016F4  0E00               	movlw	0
  4586   0016F6  6FB3               	movwf	efgtoa@u& (0+255),b
  4587   0016F8  0E00               	movlw	0
  4588   0016FA  6FB4               	movwf	(efgtoa@u+1)& (0+255),b
  4589   0016FC  0E80               	movlw	128
  4590   0016FE  6FB5               	movwf	(efgtoa@u+2)& (0+255),b
  4591   001700  0E3F               	movlw	63
  4592   001702  6FB6               	movwf	(efgtoa@u+3)& (0+255),b
  4593                           
  4594                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  4595   001704  0E00               	movlw	0
  4596   001706  6F9B               	movwf	(efgtoa@e+1)& (0+255),b
  4597   001708  0E00               	movlw	0
  4598   00170A  6F9A               	movwf	efgtoa@e& (0+255),b
  4599   00170C                     l6877:
  4600                           
  4601                           ; BSR set to: 1
  4602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  4603   00170C  0E67               	movlw	103
  4604   00170E  1994               	xorwf	efgtoa@mode& (0+255),w,b
  4605   001710  B4D8               	btfsc	status,2,c
  4606   001712  EF8D  F00B         	goto	u6931
  4607   001716  EF8F  F00B         	goto	u6930
  4608   00171A                     u6931:
  4609   00171A  EF93  F00B         	goto	l6881
  4610   00171E                     u6930:
  4611   00171E                     
  4612                           ; BSR set to: 1
  4613                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  4614   00171E  519A               	movf	efgtoa@e& (0+255),w,b
  4615   001720  2798               	addwf	efgtoa@m& (0+255),f,b
  4616   001722  519B               	movf	(efgtoa@e+1)& (0+255),w,b
  4617   001724  2399               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4618   001726                     l6881:
  4619                           
  4620                           ; BSR set to: 1
  4621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  4622   001726  0E00               	movlw	0
  4623   001728  6FA3               	movwf	(efgtoa@i+1)& (0+255),b
  4624   00172A  0E00               	movlw	0
  4625   00172C  6FA2               	movwf	efgtoa@i& (0+255),b
  4626   00172E                     
  4627                           ; BSR set to: 1
  4628                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  4629   00172E  C1AD  F1A4         	movff	efgtoa@g,efgtoa@h
  4630   001732  C1AE  F1A5         	movff	efgtoa@g+1,efgtoa@h+1
  4631   001736  C1AF  F1A6         	movff	efgtoa@g+2,efgtoa@h+2
  4632   00173A  C1B0  F1A7         	movff	efgtoa@g+3,efgtoa@h+3
  4633   00173E                     
  4634                           ; BSR set to: 1
  4635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  4636   00173E  C1B3  F19E         	movff	efgtoa@u,efgtoa@ou
  4637   001742  C1B4  F19F         	movff	efgtoa@u+1,efgtoa@ou+1
  4638   001746  C1B5  F1A0         	movff	efgtoa@u+2,efgtoa@ou+2
  4639   00174A  C1B6  F1A1         	movff	efgtoa@u+3,efgtoa@ou+3
  4640                           
  4641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4642   00174E  EF25  F00C         	goto	l6895
  4643   001752                     l6887:
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  4647   001752  C1A4  F068         	movff	efgtoa@h,___fldiv@b
  4648   001756  C1A5  F069         	movff	efgtoa@h+1,___fldiv@b+1
  4649   00175A  C1A6  F06A         	movff	efgtoa@h+2,___fldiv@b+2
  4650   00175E  C1A7  F06B         	movff	efgtoa@h+3,___fldiv@b+3
  4651   001762  C1B3  F06C         	movff	efgtoa@u,___fldiv@a
  4652   001766  C1B4  F06D         	movff	efgtoa@u+1,___fldiv@a+1
  4653   00176A  C1B5  F06E         	movff	efgtoa@u+2,___fldiv@a+2
  4654   00176E  C1B6  F06F         	movff	efgtoa@u+3,___fldiv@a+3
  4655   001772  EC95  F024         	call	___fldiv	;wreg free
  4656   001776  C068  F081         	movff	?___fldiv,floorf@x
  4657   00177A  C069  F082         	movff	?___fldiv+1,floorf@x+1
  4658   00177E  C06A  F083         	movff	?___fldiv+2,floorf@x+2
  4659   001782  C06B  F084         	movff	?___fldiv+3,floorf@x+3
  4660   001786  ECCA  F02A         	call	_floorf	;wreg free
  4661   00178A  C081  F1A8         	movff	?_floorf,efgtoa@l
  4662   00178E  C082  F1A9         	movff	?_floorf+1,efgtoa@l+1
  4663   001792  C083  F1AA         	movff	?_floorf+2,efgtoa@l+2
  4664   001796  C084  F1AB         	movff	?_floorf+3,efgtoa@l+3
  4665                           
  4666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  4667   00179A  C1A8  F0CD         	movff	efgtoa@l,___fltol@f1
  4668   00179E  C1A9  F0CE         	movff	efgtoa@l+1,___fltol@f1+1
  4669   0017A2  C1AA  F0CF         	movff	efgtoa@l+2,___fltol@f1+2
  4670   0017A6  C1AB  F0D0         	movff	efgtoa@l+3,___fltol@f1+3
  4671   0017AA  EC45  F030         	call	___fltol	;wreg free
  4672   0017AE  C0CD  F196         	movff	?___fltol,efgtoa@d
  4673   0017B2  C0CE  F197         	movff	?___fltol+1,efgtoa@d+1
  4674   0017B6                     
  4675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  4676   0017B6  C1A4  F060         	movff	efgtoa@h,___flsub@b
  4677   0017BA  C1A5  F061         	movff	efgtoa@h+1,___flsub@b+1
  4678   0017BE  C1A6  F062         	movff	efgtoa@h+2,___flsub@b+2
  4679   0017C2  C1A7  F063         	movff	efgtoa@h+3,___flsub@b+3
  4680   0017C6  C1A8  F01F         	movff	efgtoa@l,___flmul@a
  4681   0017CA  C1A9  F020         	movff	efgtoa@l+1,___flmul@a+1
  4682   0017CE  C1AA  F021         	movff	efgtoa@l+2,___flmul@a+2
  4683   0017D2  C1AB  F022         	movff	efgtoa@l+3,___flmul@a+3
  4684   0017D6  C1B3  F01B         	movff	efgtoa@u,___flmul@b
  4685   0017DA  C1B4  F01C         	movff	efgtoa@u+1,___flmul@b+1
  4686   0017DE  C1B5  F01D         	movff	efgtoa@u+2,___flmul@b+2
  4687   0017E2  C1B6  F01E         	movff	efgtoa@u+3,___flmul@b+3
  4688   0017E6  EC80  F022         	call	___flmul	;wreg free
  4689   0017EA  C01B  F064         	movff	?___flmul,___flsub@a
  4690   0017EE  C01C  F065         	movff	?___flmul+1,___flsub@a+1
  4691   0017F2  C01D  F066         	movff	?___flmul+2,___flsub@a+2
  4692   0017F6  C01E  F067         	movff	?___flmul+3,___flsub@a+3
  4693   0017FA  ECBB  F035         	call	___flsub	;wreg free
  4694   0017FE  C060  F1A4         	movff	?___flsub,efgtoa@h
  4695   001802  C061  F1A5         	movff	?___flsub+1,efgtoa@h+1
  4696   001806  C062  F1A6         	movff	?___flsub+2,efgtoa@h+2
  4697   00180A  C063  F1A7         	movff	?___flsub+3,efgtoa@h+3
  4698   00180E                     
  4699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  4700   00180E  C1B3  F068         	movff	efgtoa@u,___fldiv@b
  4701   001812  C1B4  F069         	movff	efgtoa@u+1,___fldiv@b+1
  4702   001816  C1B5  F06A         	movff	efgtoa@u+2,___fldiv@b+2
  4703   00181A  C1B6  F06B         	movff	efgtoa@u+3,___fldiv@b+3
  4704   00181E  0E00               	movlw	0
  4705   001820  0100               	movlb	0	; () banked
  4706   001822  6F6C               	movwf	___fldiv@a& (0+255),b
  4707   001824  0E00               	movlw	0
  4708   001826  6F6D               	movwf	(___fldiv@a+1)& (0+255),b
  4709   001828  0E20               	movlw	32
  4710   00182A  6F6E               	movwf	(___fldiv@a+2)& (0+255),b
  4711   00182C  0E41               	movlw	65
  4712   00182E  6F6F               	movwf	(___fldiv@a+3)& (0+255),b
  4713   001830  EC95  F024         	call	___fldiv	;wreg free
  4714   001834  C068  F1B3         	movff	?___fldiv,efgtoa@u
  4715   001838  C069  F1B4         	movff	?___fldiv+1,efgtoa@u+1
  4716   00183C  C06A  F1B5         	movff	?___fldiv+2,efgtoa@u+2
  4717   001840  C06B  F1B6         	movff	?___fldiv+3,efgtoa@u+3
  4718   001844                     
  4719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  4720   001844  0101               	movlb	1	; () banked
  4721   001846  4BA2               	infsnz	efgtoa@i& (0+255),f,b
  4722   001848  2BA3               	incf	(efgtoa@i+1)& (0+255),f,b
  4723   00184A                     l6895:
  4724                           
  4725                           ; BSR set to: 1
  4726                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4727   00184A  5198               	movf	efgtoa@m& (0+255),w,b
  4728   00184C  5DA2               	subwf	efgtoa@i& (0+255),w,b
  4729   00184E  51A3               	movf	(efgtoa@i+1)& (0+255),w,b
  4730   001850  0A80               	xorlw	128
  4731   001852  0100               	movlb	0	; () banked
  4732   001854  6FDC               	movwf	??_efgtoa& (0+255),b
  4733   001856  0101               	movlb	1	; () banked
  4734   001858  5199               	movf	(efgtoa@m+1)& (0+255),w,b
  4735   00185A  0A80               	xorlw	128
  4736   00185C  0100               	movlb	0	; () banked
  4737   00185E  59DC               	subwfb	??_efgtoa& (0+255),w,b
  4738   001860  A0D8               	btfss	status,0,c
  4739   001862  EF35  F00C         	goto	u6941
  4740   001866  EF37  F00C         	goto	u6940
  4741   00186A                     u6941:
  4742   00186A  EFA9  F00B         	goto	l6887
  4743   00186E                     u6940:
  4744   00186E                     
  4745                           ; BSR set to: 0
  4746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  4747   00186E  C1B3  F01B         	movff	efgtoa@u,___flmul@b
  4748   001872  C1B4  F01C         	movff	efgtoa@u+1,___flmul@b+1
  4749   001876  C1B5  F01D         	movff	efgtoa@u+2,___flmul@b+2
  4750   00187A  C1B6  F01E         	movff	efgtoa@u+3,___flmul@b+3
  4751   00187E  0E00               	movlw	0
  4752   001880  6E1F               	movwf	___flmul@a^0,c
  4753   001882  0E00               	movlw	0
  4754   001884  6E20               	movwf	(___flmul@a+1)^0,c
  4755   001886  0EA0               	movlw	160
  4756   001888  6E21               	movwf	(___flmul@a+2)^0,c
  4757   00188A  0E40               	movlw	64
  4758   00188C  6E22               	movwf	(___flmul@a+3)^0,c
  4759   00188E  EC80  F022         	call	___flmul	;wreg free
  4760   001892  C01B  F1A8         	movff	?___flmul,efgtoa@l
  4761   001896  C01C  F1A9         	movff	?___flmul+1,efgtoa@l+1
  4762   00189A  C01D  F1AA         	movff	?___flmul+2,efgtoa@l+2
  4763   00189E  C01E  F1AB         	movff	?___flmul+3,efgtoa@l+3
  4764   0018A2                     
  4765                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  4766   0018A2  C1A4  F034         	movff	efgtoa@h,___flge@ff1
  4767   0018A6  C1A5  F035         	movff	efgtoa@h+1,___flge@ff1+1
  4768   0018AA  C1A6  F036         	movff	efgtoa@h+2,___flge@ff1+2
  4769   0018AE  C1A7  F037         	movff	efgtoa@h+3,___flge@ff1+3
  4770   0018B2  C1A8  F038         	movff	efgtoa@l,___flge@ff2
  4771   0018B6  C1A9  F039         	movff	efgtoa@l+1,___flge@ff2+1
  4772   0018BA  C1AA  F03A         	movff	efgtoa@l+2,___flge@ff2+2
  4773   0018BE  C1AB  F03B         	movff	efgtoa@l+3,___flge@ff2+3
  4774   0018C2  ECC9  F030         	call	___flge	;wreg free
  4775   0018C6  B0D8               	btfsc	status,0,c
  4776   0018C8  EF68  F00C         	goto	u6951
  4777   0018CC  EF6A  F00C         	goto	u6950
  4778   0018D0                     u6951:
  4779   0018D0  EF75  F00C         	goto	l6903
  4780   0018D4                     u6950:
  4781   0018D4                     
  4782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  4783   0018D4  0E00               	movlw	0
  4784   0018D6  0101               	movlb	1	; () banked
  4785   0018D8  6FA8               	movwf	efgtoa@l& (0+255),b
  4786   0018DA  0E00               	movlw	0
  4787   0018DC  6FA9               	movwf	(efgtoa@l+1)& (0+255),b
  4788   0018DE  0E00               	movlw	0
  4789   0018E0  6FAA               	movwf	(efgtoa@l+2)& (0+255),b
  4790   0018E2  0E00               	movlw	0
  4791   0018E4  6FAB               	movwf	(efgtoa@l+3)& (0+255),b
  4792                           
  4793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  4794   0018E6  EF9E  F00C         	goto	l6909
  4795   0018EA                     l6903:
  4796                           
  4797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4798   0018EA  C1A4  F00D         	movff	efgtoa@h,___fleq@ff1
  4799   0018EE  C1A5  F00E         	movff	efgtoa@h+1,___fleq@ff1+1
  4800   0018F2  C1A6  F00F         	movff	efgtoa@h+2,___fleq@ff1+2
  4801   0018F6  C1A7  F010         	movff	efgtoa@h+3,___fleq@ff1+3
  4802   0018FA  C1A8  F011         	movff	efgtoa@l,___fleq@ff2
  4803   0018FE  C1A9  F012         	movff	efgtoa@l+1,___fleq@ff2+1
  4804   001902  C1AA  F013         	movff	efgtoa@l+2,___fleq@ff2+2
  4805   001906  C1AB  F014         	movff	efgtoa@l+3,___fleq@ff2+3
  4806   00190A  EC0F  F033         	call	___fleq	;wreg free
  4807   00190E  A0D8               	btfss	status,0,c
  4808   001910  EF8C  F00C         	goto	u6961
  4809   001914  EF8E  F00C         	goto	u6960
  4810   001918                     u6961:
  4811   001918  EF9E  F00C         	goto	l6909
  4812   00191C                     u6960:
  4813   00191C  0101               	movlb	1	; () banked
  4814   00191E  B196               	btfsc	efgtoa@d& (0+255),0,b
  4815   001920  EF94  F00C         	goto	u6971
  4816   001924  EF96  F00C         	goto	u6970
  4817   001928                     u6971:
  4818   001928  EF9E  F00C         	goto	l6909
  4819   00192C                     u6970:
  4820   00192C                     
  4821                           ; BSR set to: 1
  4822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4823   00192C  0E00               	movlw	0
  4824   00192E  6FA8               	movwf	efgtoa@l& (0+255),b
  4825   001930  0E00               	movlw	0
  4826   001932  6FA9               	movwf	(efgtoa@l+1)& (0+255),b
  4827   001934  0E00               	movlw	0
  4828   001936  6FAA               	movwf	(efgtoa@l+2)& (0+255),b
  4829   001938  0E00               	movlw	0
  4830   00193A  6FAB               	movwf	(efgtoa@l+3)& (0+255),b
  4831   00193C                     l6909:
  4832                           
  4833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4834   00193C  C1AD  F034         	movff	efgtoa@g,___fladd@b
  4835   001940  C1AE  F035         	movff	efgtoa@g+1,___fladd@b+1
  4836   001944  C1AF  F036         	movff	efgtoa@g+2,___fladd@b+2
  4837   001948  C1B0  F037         	movff	efgtoa@g+3,___fladd@b+3
  4838   00194C  C1A8  F038         	movff	efgtoa@l,___fladd@a
  4839   001950  C1A9  F039         	movff	efgtoa@l+1,___fladd@a+1
  4840   001954  C1AA  F03A         	movff	efgtoa@l+2,___fladd@a+2
  4841   001958  C1AB  F03B         	movff	efgtoa@l+3,___fladd@a+3
  4842   00195C  ECD8  F01D         	call	___fladd	;wreg free
  4843   001960  C034  F1A4         	movff	?___fladd,efgtoa@h
  4844   001964  C035  F1A5         	movff	?___fladd+1,efgtoa@h+1
  4845   001968  C036  F1A6         	movff	?___fladd+2,efgtoa@h+2
  4846   00196C  C037  F1A7         	movff	?___fladd+3,efgtoa@h+3
  4847   001970                     
  4848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4849   001970  C1A4  F034         	movff	efgtoa@h,___flge@ff1
  4850   001974  C1A5  F035         	movff	efgtoa@h+1,___flge@ff1+1
  4851   001978  C1A6  F036         	movff	efgtoa@h+2,___flge@ff1+2
  4852   00197C  C1A7  F037         	movff	efgtoa@h+3,___flge@ff1+3
  4853   001980  0E00               	movlw	0
  4854   001982  6E1F               	movwf	___flmul@a^0,c
  4855   001984  0E00               	movlw	0
  4856   001986  6E20               	movwf	(___flmul@a+1)^0,c
  4857   001988  0E20               	movlw	32
  4858   00198A  6E21               	movwf	(___flmul@a+2)^0,c
  4859   00198C  0E41               	movlw	65
  4860   00198E  6E22               	movwf	(___flmul@a+3)^0,c
  4861   001990  C19E  F01B         	movff	efgtoa@ou,___flmul@b
  4862   001994  C19F  F01C         	movff	efgtoa@ou+1,___flmul@b+1
  4863   001998  C1A0  F01D         	movff	efgtoa@ou+2,___flmul@b+2
  4864   00199C  C1A1  F01E         	movff	efgtoa@ou+3,___flmul@b+3
  4865   0019A0  EC80  F022         	call	___flmul	;wreg free
  4866   0019A4  C01B  F038         	movff	?___flmul,___flge@ff2
  4867   0019A8  C01C  F039         	movff	?___flmul+1,___flge@ff2+1
  4868   0019AC  C01D  F03A         	movff	?___flmul+2,___flge@ff2+2
  4869   0019B0  C01E  F03B         	movff	?___flmul+3,___flge@ff2+3
  4870   0019B4  ECC9  F030         	call	___flge	;wreg free
  4871   0019B8  A0D8               	btfss	status,0,c
  4872   0019BA  EFE1  F00C         	goto	u6981
  4873   0019BE  EFE3  F00C         	goto	u6980
  4874   0019C2                     u6981:
  4875   0019C2  EF0C  F00D         	goto	l6921
  4876   0019C6                     u6980:
  4877   0019C6                     
  4878                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4879   0019C6  0101               	movlb	1	; () banked
  4880   0019C8  4B9A               	infsnz	efgtoa@e& (0+255),f,b
  4881   0019CA  2B9B               	incf	(efgtoa@e+1)& (0+255),f,b
  4882   0019CC                     
  4883                           ; BSR set to: 1
  4884                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4885   0019CC  C19E  F01B         	movff	efgtoa@ou,___flmul@b
  4886   0019D0  C19F  F01C         	movff	efgtoa@ou+1,___flmul@b+1
  4887   0019D4  C1A0  F01D         	movff	efgtoa@ou+2,___flmul@b+2
  4888   0019D8  C1A1  F01E         	movff	efgtoa@ou+3,___flmul@b+3
  4889   0019DC  0E00               	movlw	0
  4890   0019DE  6E1F               	movwf	___flmul@a^0,c
  4891   0019E0  0E00               	movlw	0
  4892   0019E2  6E20               	movwf	(___flmul@a+1)^0,c
  4893   0019E4  0E20               	movlw	32
  4894   0019E6  6E21               	movwf	(___flmul@a+2)^0,c
  4895   0019E8  0E41               	movlw	65
  4896   0019EA  6E22               	movwf	(___flmul@a+3)^0,c
  4897   0019EC  EC80  F022         	call	___flmul	;wreg free
  4898   0019F0  C01B  F19E         	movff	?___flmul,efgtoa@ou
  4899   0019F4  C01C  F19F         	movff	?___flmul+1,efgtoa@ou+1
  4900   0019F8  C01D  F1A0         	movff	?___flmul+2,efgtoa@ou+2
  4901   0019FC  C01E  F1A1         	movff	?___flmul+3,efgtoa@ou+3
  4902   001A00                     
  4903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4904   001A00  0E66               	movlw	102
  4905   001A02  0101               	movlb	1	; () banked
  4906   001A04  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  4907   001A06  A4D8               	btfss	status,2,c
  4908   001A08  EF08  F00D         	goto	u6991
  4909   001A0C  EF0A  F00D         	goto	u6990
  4910   001A10                     u6991:
  4911   001A10  EF0C  F00D         	goto	l6921
  4912   001A14                     u6990:
  4913   001A14                     
  4914                           ; BSR set to: 1
  4915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4916   001A14  4B98               	infsnz	efgtoa@m& (0+255),f,b
  4917   001A16  2B99               	incf	(efgtoa@m+1)& (0+255),f,b
  4918   001A18                     l6921:
  4919                           
  4920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4921   001A18  C19E  F1B3         	movff	efgtoa@ou,efgtoa@u
  4922   001A1C  C19F  F1B4         	movff	efgtoa@ou+1,efgtoa@u+1
  4923   001A20  C1A0  F1B5         	movff	efgtoa@ou+2,efgtoa@u+2
  4924   001A24  C1A1  F1B6         	movff	efgtoa@ou+3,efgtoa@u+3
  4925   001A28                     
  4926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4927   001A28  C19A  F18B         	movff	efgtoa@e,efgtoa@ne
  4928   001A2C  C19B  F18C         	movff	efgtoa@e+1,efgtoa@ne+1
  4929   001A30                     
  4930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4931   001A30  0E00               	movlw	0
  4932   001A32  0101               	movlb	1	; () banked
  4933   001A34  6F93               	movwf	efgtoa@pp& (0+255),b
  4934   001A36                     
  4935                           ; BSR set to: 1
  4936                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4937   001A36  0E00               	movlw	0
  4938   001A38  6F90               	movwf	(efgtoa@t+1)& (0+255),b
  4939   001A3A  0E00               	movlw	0
  4940   001A3C  6F8F               	movwf	efgtoa@t& (0+255),b
  4941   001A3E                     
  4942                           ; BSR set to: 1
  4943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  4944   001A3E  0E00               	movlw	0
  4945   001A40  6FA3               	movwf	(efgtoa@i+1)& (0+255),b
  4946   001A42  0E00               	movlw	0
  4947   001A44  6FA2               	movwf	efgtoa@i& (0+255),b
  4948                           
  4949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4950   001A46  EF0C  F00E         	goto	l6971
  4951   001A4A                     l6931:
  4952                           
  4953                           ; BSR set to: 1
  4954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  4955   001A4A  C1A4  F068         	movff	efgtoa@h,___fldiv@b
  4956   001A4E  C1A5  F069         	movff	efgtoa@h+1,___fldiv@b+1
  4957   001A52  C1A6  F06A         	movff	efgtoa@h+2,___fldiv@b+2
  4958   001A56  C1A7  F06B         	movff	efgtoa@h+3,___fldiv@b+3
  4959   001A5A  C1B3  F06C         	movff	efgtoa@u,___fldiv@a
  4960   001A5E  C1B4  F06D         	movff	efgtoa@u+1,___fldiv@a+1
  4961   001A62  C1B5  F06E         	movff	efgtoa@u+2,___fldiv@a+2
  4962   001A66  C1B6  F06F         	movff	efgtoa@u+3,___fldiv@a+3
  4963   001A6A  EC95  F024         	call	___fldiv	;wreg free
  4964   001A6E  C068  F081         	movff	?___fldiv,floorf@x
  4965   001A72  C069  F082         	movff	?___fldiv+1,floorf@x+1
  4966   001A76  C06A  F083         	movff	?___fldiv+2,floorf@x+2
  4967   001A7A  C06B  F084         	movff	?___fldiv+3,floorf@x+3
  4968   001A7E  ECCA  F02A         	call	_floorf	;wreg free
  4969   001A82  C081  F1A8         	movff	?_floorf,efgtoa@l
  4970   001A86  C082  F1A9         	movff	?_floorf+1,efgtoa@l+1
  4971   001A8A  C083  F1AA         	movff	?_floorf+2,efgtoa@l+2
  4972   001A8E  C084  F1AB         	movff	?_floorf+3,efgtoa@l+3
  4973                           
  4974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4975   001A92  C1A8  F0CD         	movff	efgtoa@l,___fltol@f1
  4976   001A96  C1A9  F0CE         	movff	efgtoa@l+1,___fltol@f1+1
  4977   001A9A  C1AA  F0CF         	movff	efgtoa@l+2,___fltol@f1+2
  4978   001A9E  C1AB  F0D0         	movff	efgtoa@l+3,___fltol@f1+3
  4979   001AA2  EC45  F030         	call	___fltol	;wreg free
  4980   001AA6  0100               	movlb	0	; () banked
  4981   001AA8  BFCE               	btfsc	(?___fltol+1)& (0+255),7,b
  4982   001AAA  EF62  F00D         	goto	u7000
  4983   001AAE  51CE               	movf	(?___fltol+1)& (0+255),w,b
  4984   001AB0  E107               	bnz	u7001
  4985   001AB2  0E0A               	movlw	10
  4986   001AB4  5DCD               	subwf	?___fltol& (0+255),w,b
  4987   001AB6  B0D8               	btfsc	status,0,c
  4988   001AB8  EF60  F00D         	goto	u7001
  4989   001ABC  EF62  F00D         	goto	u7000
  4990   001AC0                     u7001:
  4991   001AC0  EF72  F00D         	goto	l6935
  4992   001AC4                     u7000:
  4993   001AC4                     
  4994                           ; BSR set to: 0
  4995   001AC4  C1A8  F0CD         	movff	efgtoa@l,___fltol@f1
  4996   001AC8  C1A9  F0CE         	movff	efgtoa@l+1,___fltol@f1+1
  4997   001ACC  C1AA  F0CF         	movff	efgtoa@l+2,___fltol@f1+2
  4998   001AD0  C1AB  F0D0         	movff	efgtoa@l+3,___fltol@f1+3
  4999   001AD4  EC45  F030         	call	___fltol	;wreg free
  5000   001AD8  C0CD  F196         	movff	?___fltol,efgtoa@d
  5001   001ADC  C0CE  F197         	movff	?___fltol+1,efgtoa@d+1
  5002   001AE0  EF77  F00D         	goto	l1173
  5003   001AE4                     l6935:
  5004                           
  5005                           ; BSR set to: 0
  5006   001AE4  0E00               	movlw	0
  5007   001AE6  0101               	movlb	1	; () banked
  5008   001AE8  6F97               	movwf	(efgtoa@d+1)& (0+255),b
  5009   001AEA  0E09               	movlw	9
  5010   001AEC  6F96               	movwf	efgtoa@d& (0+255),b
  5011   001AEE                     l1173:
  5012                           
  5013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  5014   001AEE  0101               	movlb	1	; () banked
  5015   001AF0  5193               	movf	efgtoa@pp& (0+255),w,b
  5016   001AF2  A4D8               	btfss	status,2,c
  5017   001AF4  EF7E  F00D         	goto	u7011
  5018   001AF8  EF80  F00D         	goto	u7010
  5019   001AFC                     u7011:
  5020   001AFC  EFA8  F00D         	goto	l6955
  5021   001B00                     u7010:
  5022   001B00                     
  5023                           ; BSR set to: 1
  5024   001B00  BF8C               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5025   001B02  EF87  F00D         	goto	u7020
  5026   001B06  EF85  F00D         	goto	u7021
  5027   001B0A                     u7021:
  5028   001B0A  EFA8  F00D         	goto	l6955
  5029   001B0E                     u7020:
  5030   001B0E                     
  5031                           ; BSR set to: 1
  5032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  5033   001B0E  0E80               	movlw	low _dbuf
  5034   001B10  25B1               	addwf	efgtoa@n& (0+255),w,b
  5035   001B12  6ED9               	movwf	fsr2l,c
  5036   001B14  0E05               	movlw	high _dbuf
  5037   001B16  21B2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5038   001B18  6EDA               	movwf	fsr2h,c
  5039   001B1A  0E2E               	movlw	46
  5040   001B1C  6EDF               	movwf	indf2,c
  5041   001B1E                     
  5042                           ; BSR set to: 1
  5043   001B1E  4BB1               	infsnz	efgtoa@n& (0+255),f,b
  5044   001B20  2BB2               	incf	(efgtoa@n+1)& (0+255),f,b
  5045   001B22                     
  5046                           ; BSR set to: 1
  5047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  5048   001B22  079C               	decf	efgtoa@w& (0+255),f,b
  5049   001B24  A0D8               	btfss	status,0,c
  5050   001B26  079D               	decf	(efgtoa@w+1)& (0+255),f,b
  5051   001B28                     
  5052                           ; BSR set to: 1
  5053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  5054   001B28  0E01               	movlw	1
  5055   001B2A  6F93               	movwf	efgtoa@pp& (0+255),b
  5056   001B2C  EFA8  F00D         	goto	l6955
  5057   001B30                     l6947:
  5058                           
  5059                           ; BSR set to: 1
  5060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  5061   001B30  0E80               	movlw	low _dbuf
  5062   001B32  25B1               	addwf	efgtoa@n& (0+255),w,b
  5063   001B34  6ED9               	movwf	fsr2l,c
  5064   001B36  0E05               	movlw	high _dbuf
  5065   001B38  21B2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5066   001B3A  6EDA               	movwf	fsr2h,c
  5067   001B3C  0E30               	movlw	48
  5068   001B3E  6EDF               	movwf	indf2,c
  5069   001B40                     
  5070                           ; BSR set to: 1
  5071   001B40  4BB1               	infsnz	efgtoa@n& (0+255),f,b
  5072   001B42  2BB2               	incf	(efgtoa@n+1)& (0+255),f,b
  5073   001B44                     
  5074                           ; BSR set to: 1
  5075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  5076   001B44  079C               	decf	efgtoa@w& (0+255),f,b
  5077   001B46  A0D8               	btfss	status,0,c
  5078   001B48  079D               	decf	(efgtoa@w+1)& (0+255),f,b
  5079   001B4A                     
  5080                           ; BSR set to: 1
  5081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  5082   001B4A  078F               	decf	efgtoa@t& (0+255),f,b
  5083   001B4C  A0D8               	btfss	status,0,c
  5084   001B4E  0790               	decf	(efgtoa@t+1)& (0+255),f,b
  5085   001B50                     l6955:
  5086                           
  5087                           ; BSR set to: 1
  5088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  5089   001B50  518F               	movf	efgtoa@t& (0+255),w,b
  5090   001B52  1190               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5091   001B54  A4D8               	btfss	status,2,c
  5092   001B56  EFAF  F00D         	goto	u7031
  5093   001B5A  EFB1  F00D         	goto	u7030
  5094   001B5E                     u7031:
  5095   001B5E  EF98  F00D         	goto	l6947
  5096   001B62                     u7030:
  5097   001B62                     
  5098                           ; BSR set to: 1
  5099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5100   001B62  0E80               	movlw	low _dbuf
  5101   001B64  25B1               	addwf	efgtoa@n& (0+255),w,b
  5102   001B66  6ED9               	movwf	fsr2l,c
  5103   001B68  0E05               	movlw	high _dbuf
  5104   001B6A  21B2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5105   001B6C  6EDA               	movwf	fsr2h,c
  5106   001B6E  5196               	movf	efgtoa@d& (0+255),w,b
  5107   001B70  0F30               	addlw	48
  5108   001B72  6EDF               	movwf	indf2,c
  5109   001B74                     
  5110                           ; BSR set to: 1
  5111   001B74  4BB1               	infsnz	efgtoa@n& (0+255),f,b
  5112   001B76  2BB2               	incf	(efgtoa@n+1)& (0+255),f,b
  5113   001B78                     
  5114                           ; BSR set to: 1
  5115                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  5116   001B78  079C               	decf	efgtoa@w& (0+255),f,b
  5117   001B7A  A0D8               	btfss	status,0,c
  5118   001B7C  079D               	decf	(efgtoa@w+1)& (0+255),f,b
  5119   001B7E                     
  5120                           ; BSR set to: 1
  5121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  5122   001B7E  C1A4  F060         	movff	efgtoa@h,___flsub@b
  5123   001B82  C1A5  F061         	movff	efgtoa@h+1,___flsub@b+1
  5124   001B86  C1A6  F062         	movff	efgtoa@h+2,___flsub@b+2
  5125   001B8A  C1A7  F063         	movff	efgtoa@h+3,___flsub@b+3
  5126   001B8E  C1A8  F01F         	movff	efgtoa@l,___flmul@a
  5127   001B92  C1A9  F020         	movff	efgtoa@l+1,___flmul@a+1
  5128   001B96  C1AA  F021         	movff	efgtoa@l+2,___flmul@a+2
  5129   001B9A  C1AB  F022         	movff	efgtoa@l+3,___flmul@a+3
  5130   001B9E  C1B3  F01B         	movff	efgtoa@u,___flmul@b
  5131   001BA2  C1B4  F01C         	movff	efgtoa@u+1,___flmul@b+1
  5132   001BA6  C1B5  F01D         	movff	efgtoa@u+2,___flmul@b+2
  5133   001BAA  C1B6  F01E         	movff	efgtoa@u+3,___flmul@b+3
  5134   001BAE  EC80  F022         	call	___flmul	;wreg free
  5135   001BB2  C01B  F064         	movff	?___flmul,___flsub@a
  5136   001BB6  C01C  F065         	movff	?___flmul+1,___flsub@a+1
  5137   001BBA  C01D  F066         	movff	?___flmul+2,___flsub@a+2
  5138   001BBE  C01E  F067         	movff	?___flmul+3,___flsub@a+3
  5139   001BC2  ECBB  F035         	call	___flsub	;wreg free
  5140   001BC6  C060  F1A4         	movff	?___flsub,efgtoa@h
  5141   001BCA  C061  F1A5         	movff	?___flsub+1,efgtoa@h+1
  5142   001BCE  C062  F1A6         	movff	?___flsub+2,efgtoa@h+2
  5143   001BD2  C063  F1A7         	movff	?___flsub+3,efgtoa@h+3
  5144   001BD6                     
  5145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  5146   001BD6  C1B3  F068         	movff	efgtoa@u,___fldiv@b
  5147   001BDA  C1B4  F069         	movff	efgtoa@u+1,___fldiv@b+1
  5148   001BDE  C1B5  F06A         	movff	efgtoa@u+2,___fldiv@b+2
  5149   001BE2  C1B6  F06B         	movff	efgtoa@u+3,___fldiv@b+3
  5150   001BE6  0E00               	movlw	0
  5151   001BE8  0100               	movlb	0	; () banked
  5152   001BEA  6F6C               	movwf	___fldiv@a& (0+255),b
  5153   001BEC  0E00               	movlw	0
  5154   001BEE  6F6D               	movwf	(___fldiv@a+1)& (0+255),b
  5155   001BF0  0E20               	movlw	32
  5156   001BF2  6F6E               	movwf	(___fldiv@a+2)& (0+255),b
  5157   001BF4  0E41               	movlw	65
  5158   001BF6  6F6F               	movwf	(___fldiv@a+3)& (0+255),b
  5159   001BF8  EC95  F024         	call	___fldiv	;wreg free
  5160   001BFC  C068  F1B3         	movff	?___fldiv,efgtoa@u
  5161   001C00  C069  F1B4         	movff	?___fldiv+1,efgtoa@u+1
  5162   001C04  C06A  F1B5         	movff	?___fldiv+2,efgtoa@u+2
  5163   001C08  C06B  F1B6         	movff	?___fldiv+3,efgtoa@u+3
  5164   001C0C                     
  5165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  5166   001C0C  0101               	movlb	1	; () banked
  5167   001C0E  078B               	decf	efgtoa@ne& (0+255),f,b
  5168   001C10  A0D8               	btfss	status,0,c
  5169   001C12  078C               	decf	(efgtoa@ne+1)& (0+255),f,b
  5170   001C14                     
  5171                           ; BSR set to: 1
  5172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  5173   001C14  4BA2               	infsnz	efgtoa@i& (0+255),f,b
  5174   001C16  2BA3               	incf	(efgtoa@i+1)& (0+255),f,b
  5175   001C18                     l6971:
  5176                           
  5177                           ; BSR set to: 1
  5178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5179   001C18  5198               	movf	efgtoa@m& (0+255),w,b
  5180   001C1A  5DA2               	subwf	efgtoa@i& (0+255),w,b
  5181   001C1C  51A3               	movf	(efgtoa@i+1)& (0+255),w,b
  5182   001C1E  0A80               	xorlw	128
  5183   001C20  0100               	movlb	0	; () banked
  5184   001C22  6FDC               	movwf	??_efgtoa& (0+255),b
  5185   001C24  0101               	movlb	1	; () banked
  5186   001C26  5199               	movf	(efgtoa@m+1)& (0+255),w,b
  5187   001C28  0A80               	xorlw	128
  5188   001C2A  0100               	movlb	0	; () banked
  5189   001C2C  59DC               	subwfb	??_efgtoa& (0+255),w,b
  5190   001C2E  B0D8               	btfsc	status,0,c
  5191   001C30  EF1C  F00E         	goto	u7041
  5192   001C34  EF1E  F00E         	goto	u7040
  5193   001C38                     u7041:
  5194   001C38  EF2D  F00E         	goto	l6975
  5195   001C3C                     u7040:
  5196   001C3C                     
  5197                           ; BSR set to: 0
  5198   001C3C  0101               	movlb	1	; () banked
  5199   001C3E  BFB2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5200   001C40  EF2B  F00E         	goto	u7051
  5201   001C44  51B2               	movf	(efgtoa@n+1)& (0+255),w,b
  5202   001C46  E109               	bnz	u7050
  5203   001C48  0E4B               	movlw	75
  5204   001C4A  5DB1               	subwf	efgtoa@n& (0+255),w,b
  5205   001C4C  A0D8               	btfss	status,0,c
  5206   001C4E  EF2B  F00E         	goto	u7051
  5207   001C52  EF2D  F00E         	goto	u7050
  5208   001C56                     u7051:
  5209   001C56  EF25  F00D         	goto	l6931
  5210   001C5A                     u7050:
  5211   001C5A                     l6975:
  5212                           
  5213                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  5214   001C5A  0E00               	movlw	0
  5215   001C5C  0101               	movlb	1	; () banked
  5216   001C5E  6FA3               	movwf	(efgtoa@i+1)& (0+255),b
  5217   001C60  0E4F               	movlw	79
  5218   001C62  6FA2               	movwf	efgtoa@i& (0+255),b
  5219   001C64                     
  5220                           ; BSR set to: 1
  5221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  5222   001C64  0E80               	movlw	low _dbuf
  5223   001C66  25A2               	addwf	efgtoa@i& (0+255),w,b
  5224   001C68  6ED9               	movwf	fsr2l,c
  5225   001C6A  0E05               	movlw	high _dbuf
  5226   001C6C  21A3               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5227   001C6E  6EDA               	movwf	fsr2h,c
  5228   001C70  0E00               	movlw	0
  5229   001C72  6EDF               	movwf	indf2,c
  5230   001C74                     
  5231                           ; BSR set to: 1
  5232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  5233   001C74  0E80               	movlw	low _dbuf
  5234   001C76  0100               	movlb	0	; () banked
  5235   001C78  6FDC               	movwf	??_efgtoa& (0+255),b
  5236   001C7A  0E05               	movlw	high _dbuf
  5237   001C7C  6FDD               	movwf	(??_efgtoa+1)& (0+255),b
  5238   001C7E  0101               	movlb	1	; () banked
  5239   001C80  51B1               	movf	efgtoa@n& (0+255),w,b
  5240   001C82  0100               	movlb	0	; () banked
  5241   001C84  5FDC               	subwf	??_efgtoa& (0+255),f,b
  5242   001C86  0101               	movlb	1	; () banked
  5243   001C88  51B2               	movf	(efgtoa@n+1)& (0+255),w,b
  5244   001C8A  0100               	movlb	0	; () banked
  5245   001C8C  5BDD               	subwfb	(??_efgtoa+1)& (0+255),f,b
  5246   001C8E  0101               	movlb	1	; () banked
  5247   001C90  51A2               	movf	efgtoa@i& (0+255),w,b
  5248   001C92  0100               	movlb	0	; () banked
  5249   001C94  25DC               	addwf	??_efgtoa& (0+255),w,b
  5250   001C96  6E0D               	movwf	memcpy@d1^0,c
  5251   001C98  0101               	movlb	1	; () banked
  5252   001C9A  51A3               	movf	(efgtoa@i+1)& (0+255),w,b
  5253   001C9C  0100               	movlb	0	; () banked
  5254   001C9E  21DD               	addwfc	(??_efgtoa+1)& (0+255),w,b
  5255   001CA0  6E0E               	movwf	(memcpy@d1+1)^0,c
  5256   001CA2  0E80               	movlw	low _dbuf
  5257   001CA4  6E0F               	movwf	memcpy@s1^0,c
  5258   001CA6  0E05               	movlw	high _dbuf
  5259   001CA8  6E10               	movwf	(memcpy@s1+1)^0,c
  5260   001CAA  C1B1  F011         	movff	efgtoa@n,memcpy@n
  5261   001CAE  C1B2  F012         	movff	efgtoa@n+1,memcpy@n+1
  5262   001CB2  EC93  F035         	call	_memcpy	;wreg free
  5263   001CB6                     
  5264                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  5265   001CB6  0101               	movlb	1	; () banked
  5266   001CB8  51B1               	movf	efgtoa@n& (0+255),w,b
  5267   001CBA  5DA2               	subwf	efgtoa@i& (0+255),w,b
  5268   001CBC  6FB1               	movwf	efgtoa@n& (0+255),b
  5269   001CBE  51B2               	movf	(efgtoa@n+1)& (0+255),w,b
  5270   001CC0  59A3               	subwfb	(efgtoa@i+1)& (0+255),w,b
  5271   001CC2  6FB2               	movwf	(efgtoa@n+1)& (0+255),b
  5272   001CC4                     
  5273                           ; BSR set to: 1
  5274                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  5275   001CC4  51AC               	movf	efgtoa@sign& (0+255),w,b
  5276   001CC6  A4D8               	btfss	status,2,c
  5277   001CC8  EF68  F00E         	goto	u7061
  5278   001CCC  EF6B  F00E         	goto	u7060
  5279   001CD0                     u7061:
  5280   001CD0  0E01               	movlw	1
  5281   001CD2  EF6C  F00E         	goto	u7070
  5282   001CD6                     u7060:
  5283   001CD6  0E00               	movlw	0
  5284   001CD8                     u7070:
  5285   001CD8  6FA2               	movwf	efgtoa@i& (0+255),b
  5286   001CDA  6BA3               	clrf	(efgtoa@i+1)& (0+255),b
  5287   001CDC                     
  5288                           ; BSR set to: 1
  5289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  5290   001CDC  51AC               	movf	efgtoa@sign& (0+255),w,b
  5291   001CDE  B4D8               	btfsc	status,2,c
  5292   001CE0  EF74  F00E         	goto	u7081
  5293   001CE4  EF76  F00E         	goto	u7080
  5294   001CE8                     u7081:
  5295   001CE8  EF81  F00E         	goto	l6989
  5296   001CEC                     u7080:
  5297   001CEC                     
  5298                           ; BSR set to: 1
  5299                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  5300   001CEC  07B1               	decf	efgtoa@n& (0+255),f,b
  5301   001CEE  A0D8               	btfss	status,0,c
  5302   001CF0  07B2               	decf	(efgtoa@n+1)& (0+255),f,b
  5303   001CF2  0E80               	movlw	low _dbuf
  5304   001CF4  25B1               	addwf	efgtoa@n& (0+255),w,b
  5305   001CF6  6ED9               	movwf	fsr2l,c
  5306   001CF8  0E05               	movlw	high _dbuf
  5307   001CFA  21B2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5308   001CFC  6EDA               	movwf	fsr2h,c
  5309   001CFE  C1AC  FFDF         	movff	efgtoa@sign,indf2
  5310   001D02                     l6989:
  5311                           
  5312                           ; BSR set to: 1
  5313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  5314   001D02  51A2               	movf	efgtoa@i& (0+255),w,b
  5315   001D04  5F9C               	subwf	efgtoa@w& (0+255),f,b
  5316   001D06  51A3               	movf	(efgtoa@i+1)& (0+255),w,b
  5317   001D08  5B9D               	subwfb	(efgtoa@w+1)& (0+255),f,b
  5318   001D0A                     
  5319                           ; BSR set to: 1
  5320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  5321   001D0A  C0D5  F01D         	movff	efgtoa@fp,pad@fp
  5322   001D0E  C0D6  F01E         	movff	efgtoa@fp+1,pad@fp+1
  5323   001D12  0E80               	movlw	low _dbuf
  5324   001D14  25B1               	addwf	efgtoa@n& (0+255),w,b
  5325   001D16  6E1F               	movwf	pad@buf^0,c
  5326   001D18  0E05               	movlw	high _dbuf
  5327   001D1A  21B2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5328   001D1C  6E20               	movwf	(pad@buf+1)^0,c
  5329   001D1E  C19C  F021         	movff	efgtoa@w,pad@p
  5330   001D22  C19D  F022         	movff	efgtoa@w+1,pad@p+1
  5331   001D26  ECF2  F033         	call	_pad	;wreg free
  5332   001D2A                     l1140:
  5333   001D2A  0012               	return		;funcret
  5334   001D2C                     __end_of_efgtoa:
  5335                           	callstack 0
  5336                           
  5337 ;; *************** function _strcpy *****************
  5338 ;; Defined at:
  5339 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  dest            2   12[COMRAM] PTR unsigned char 
  5342 ;;		 -> dbuf(80), 
  5343 ;;  src             2   14[COMRAM] PTR const unsigned char 
  5344 ;;		 -> STR_10(4), STR_7(4), 
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;  d               2   18[COMRAM] PTR unsigned char 
  5347 ;;		 -> dbuf(80), 
  5348 ;;  s               2   16[COMRAM] PTR const unsigned char 
  5349 ;;		 -> STR_10(4), STR_7(4), 
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  2   12[COMRAM] PTR unsigned char 
  5352 ;; Registers used:
  5353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5359 ;;      Params:         4       0       0       0       0       0       0       0       0
  5360 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5361 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5362 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5363 ;;Total ram usage:        8 bytes
  5364 ;; Hardware stack levels used: 1
  5365 ;; Hardware stack levels required when called: 2
  5366 ;; This function calls:
  5367 ;;		Nothing
  5368 ;; This function is called by:
  5369 ;;		_efgtoa
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text6
  5374   006C48                     __ptext6:
  5375                           	callstack 0
  5376   006C48                     _strcpy:
  5377                           	callstack 23
  5378   006C48  C00F  F011         	movff	strcpy@src,strcpy@s
  5379   006C4C  C010  F012         	movff	strcpy@src+1,strcpy@s+1
  5380   006C50  C00D  F013         	movff	strcpy@dest,strcpy@d
  5381   006C54  C00E  F014         	movff	strcpy@dest+1,strcpy@d+1
  5382   006C58                     l6711:
  5383   006C58  C011  FFF6         	movff	strcpy@s,tblptrl
  5384   006C5C  C012  FFF7         	movff	strcpy@s+1,tblptrh
  5385   006C60  4A11               	infsnz	strcpy@s^0,f,c
  5386   006C62  2A12               	incf	(strcpy@s+1)^0,f,c
  5387   006C64                     	if	0	;tblptru may be non-zero
  5388   006C64                     	endif
  5389   006C64                     	if	0	;tblptru may be non-zero
  5390   006C64                     	endif
  5391   006C64  C013  FFD9         	movff	strcpy@d,fsr2l
  5392   006C68  C014  FFDA         	movff	strcpy@d+1,fsr2h
  5393   006C6C  4A13               	infsnz	strcpy@d^0,f,c
  5394   006C6E  2A14               	incf	(strcpy@d+1)^0,f,c
  5395   006C70  0008               	tblrd		*
  5396   006C72  CFF5 FFDF          	movff	tablat,indf2
  5397   006C76  50DF               	movf	indf2,w,c
  5398   006C78  A4D8               	btfss	status,2,c
  5399   006C7A  EF41  F036         	goto	u6601
  5400   006C7E  EF43  F036         	goto	u6600
  5401   006C82                     u6601:
  5402   006C82  EF2C  F036         	goto	l6711
  5403   006C86                     u6600:
  5404   006C86  0012               	return		;funcret
  5405   006C88                     __end_of_strcpy:
  5406                           	callstack 0
  5407                           
  5408 ;; *************** function _pad *****************
  5409 ;; Defined at:
  5410 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5411 ;; Parameters:    Size  Location     Type
  5412 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  5413 ;;		 -> sprintf@f(11), 
  5414 ;;  buf             2   30[COMRAM] PTR unsigned char 
  5415 ;;		 -> dbuf(80), 
  5416 ;;  p               2   32[COMRAM] int 
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;  w               2   37[COMRAM] int 
  5419 ;;  i               2   35[COMRAM] int 
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  1    wreg      void 
  5422 ;; Registers used:
  5423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5429 ;;      Params:         6       0       0       0       0       0       0       0       0
  5430 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5431 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5432 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5433 ;;Total ram usage:       11 bytes
  5434 ;; Hardware stack levels used: 1
  5435 ;; Hardware stack levels required when called: 5
  5436 ;; This function calls:
  5437 ;;		_fputc
  5438 ;;		_fputs
  5439 ;; This function is called by:
  5440 ;;		_efgtoa
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           	psect	text7
  5445   0067E4                     __ptext7:
  5446                           	callstack 0
  5447   0067E4                     _pad:
  5448                           	callstack 20
  5449   0067E4                     
  5450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5451   0067E4  BE22               	btfsc	(pad@p+1)^0,7,c
  5452   0067E6  EFF7  F033         	goto	u6511
  5453   0067EA  EFF9  F033         	goto	u6510
  5454   0067EE                     u6511:
  5455   0067EE  EFFF  F033         	goto	l6677
  5456   0067F2                     u6510:
  5457   0067F2  C021  F026         	movff	pad@p,pad@w
  5458   0067F6  C022  F027         	movff	pad@p+1,pad@w+1
  5459   0067FA  EF03  F034         	goto	l1125
  5460   0067FE                     l6677:
  5461   0067FE  0E00               	movlw	0
  5462   006800  6E27               	movwf	(pad@w+1)^0,c
  5463   006802  0E00               	movlw	0
  5464   006804  6E26               	movwf	pad@w^0,c
  5465   006806                     l1125:
  5466                           
  5467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5468   006806  0E00               	movlw	0
  5469   006808  6E25               	movwf	(pad@i+1)^0,c
  5470   00680A  0E00               	movlw	0
  5471   00680C  6E24               	movwf	pad@i^0,c
  5472                           
  5473                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5474   00680E  EF15  F034         	goto	l6683
  5475   006812                     l6679:
  5476                           
  5477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5478   006812  0E00               	movlw	0
  5479   006814  6E0E               	movwf	(fputc@c+1)^0,c
  5480   006816  0E20               	movlw	32
  5481   006818  6E0D               	movwf	fputc@c^0,c
  5482   00681A  C01D  F00F         	movff	pad@fp,fputc@fp
  5483   00681E  C01E  F010         	movff	pad@fp+1,fputc@fp+1
  5484   006822  EC48  F032         	call	_fputc	;wreg free
  5485   006826                     
  5486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5487   006826  4A24               	infsnz	pad@i^0,f,c
  5488   006828  2A25               	incf	(pad@i+1)^0,f,c
  5489   00682A                     l6683:
  5490                           
  5491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5492   00682A  5026               	movf	pad@w^0,w,c
  5493   00682C  5C24               	subwf	pad@i^0,w,c
  5494   00682E  5025               	movf	(pad@i+1)^0,w,c
  5495   006830  0A80               	xorlw	128
  5496   006832  6E23               	movwf	??_pad^0,c
  5497   006834  5027               	movf	(pad@w+1)^0,w,c
  5498   006836  0A80               	xorlw	128
  5499   006838  5823               	subwfb	??_pad^0,w,c
  5500   00683A  A0D8               	btfss	status,0,c
  5501   00683C  EF22  F034         	goto	u6521
  5502   006840  EF24  F034         	goto	u6520
  5503   006844                     u6521:
  5504   006844  EF09  F034         	goto	l6679
  5505   006848                     u6520:
  5506   006848                     
  5507                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5508   006848  C01F  F016         	movff	pad@buf,fputs@s
  5509   00684C  C020  F017         	movff	pad@buf+1,fputs@s+1
  5510   006850  C01D  F018         	movff	pad@fp,fputs@fp
  5511   006854  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  5512   006858  EC02  F036         	call	_fputs	;wreg free
  5513   00685C  0012               	return		;funcret
  5514   00685E                     __end_of_pad:
  5515                           	callstack 0
  5516                           
  5517 ;; *************** function _fputs *****************
  5518 ;; Defined at:
  5519 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  s               2   21[COMRAM] PTR const unsigned char 
  5522 ;;		 -> dbuf(80), 
  5523 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  5524 ;;		 -> sprintf@f(11), 
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;  i               2   26[COMRAM] int 
  5527 ;;  c               1   25[COMRAM] unsigned char 
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  2   21[COMRAM] int 
  5530 ;; Registers used:
  5531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5537 ;;      Params:         4       0       0       0       0       0       0       0       0
  5538 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5539 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5540 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5541 ;;Total ram usage:        7 bytes
  5542 ;; Hardware stack levels used: 1
  5543 ;; Hardware stack levels required when called: 4
  5544 ;; This function calls:
  5545 ;;		_fputc
  5546 ;; This function is called by:
  5547 ;;		_pad
  5548 ;; This function uses a non-reentrant model
  5549 ;;
  5550                           
  5551                           	psect	text8
  5552   006C04                     __ptext8:
  5553                           	callstack 0
  5554   006C04                     _fputs:
  5555                           	callstack 20
  5556   006C04  0E00               	movlw	0
  5557   006C06  6E1C               	movwf	(fputs@i+1)^0,c
  5558   006C08  0E00               	movlw	0
  5559   006C0A  6E1B               	movwf	fputs@i^0,c
  5560   006C0C  EF13  F036         	goto	l6301
  5561   006C10                     l6297:
  5562   006C10  C01A  F00D         	movff	fputs@c,fputc@c
  5563   006C14  6A0E               	clrf	(fputc@c+1)^0,c
  5564   006C16  C018  F00F         	movff	fputs@fp,fputc@fp
  5565   006C1A  C019  F010         	movff	fputs@fp+1,fputc@fp+1
  5566   006C1E  EC48  F032         	call	_fputc	;wreg free
  5567   006C22  4A1B               	infsnz	fputs@i^0,f,c
  5568   006C24  2A1C               	incf	(fputs@i+1)^0,f,c
  5569   006C26                     l6301:
  5570   006C26  501B               	movf	fputs@i^0,w,c
  5571   006C28  2416               	addwf	fputs@s^0,w,c
  5572   006C2A  6ED9               	movwf	fsr2l,c
  5573   006C2C  501C               	movf	(fputs@i+1)^0,w,c
  5574   006C2E  2017               	addwfc	(fputs@s+1)^0,w,c
  5575   006C30  6EDA               	movwf	fsr2h,c
  5576   006C32  50DF               	movf	indf2,w,c
  5577   006C34  6E1A               	movwf	fputs@c^0,c
  5578   006C36  501A               	movf	fputs@c^0,w,c
  5579   006C38  A4D8               	btfss	status,2,c
  5580   006C3A  EF21  F036         	goto	u5921
  5581   006C3E  EF23  F036         	goto	u5920
  5582   006C42                     u5921:
  5583   006C42  EF08  F036         	goto	l6297
  5584   006C46                     u5920:
  5585   006C46  0012               	return		;funcret
  5586   006C48                     __end_of_fputs:
  5587                           	callstack 0
  5588                           
  5589 ;; *************** function _fputc *****************
  5590 ;; Defined at:
  5591 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;  c               2   12[COMRAM] int 
  5594 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  5595 ;;		 -> sprintf@f(11), 
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;		None
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  2   12[COMRAM] int 
  5600 ;; Registers used:
  5601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5607 ;;      Params:         4       0       0       0       0       0       0       0       0
  5608 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5609 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5610 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5611 ;;Total ram usage:        9 bytes
  5612 ;; Hardware stack levels used: 1
  5613 ;; Hardware stack levels required when called: 3
  5614 ;; This function calls:
  5615 ;;		_putch
  5616 ;; This function is called by:
  5617 ;;		_pad
  5618 ;;		_vfpfcnvrt
  5619 ;;		_fputs
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text9
  5624   006490                     __ptext9:
  5625                           	callstack 0
  5626   006490                     _fputc:
  5627                           	callstack 23
  5628   006490  500F               	movf	fputc@fp^0,w,c
  5629   006492  1010               	iorwf	(fputc@fp+1)^0,w,c
  5630   006494  B4D8               	btfsc	status,2,c
  5631   006496  EF4F  F032         	goto	u5491
  5632   00649A  EF51  F032         	goto	u5490
  5633   00649E                     u5491:
  5634   00649E  EF5A  F032         	goto	l6083
  5635   0064A2                     u5490:
  5636   0064A2  500F               	movf	fputc@fp^0,w,c
  5637   0064A4  1010               	iorwf	(fputc@fp+1)^0,w,c
  5638   0064A6  A4D8               	btfss	status,2,c
  5639   0064A8  EF58  F032         	goto	u5501
  5640   0064AC  EF5A  F032         	goto	u5500
  5641   0064B0                     u5501:
  5642   0064B0  EF5F  F032         	goto	l6085
  5643   0064B4                     u5500:
  5644   0064B4                     l6083:
  5645   0064B4  500D               	movf	fputc@c^0,w,c
  5646   0064B6  EC45  F037         	call	_putch
  5647   0064BA  EFAC  F032         	goto	l1303
  5648   0064BE                     l6085:
  5649   0064BE  EE20 F009          	lfsr	2,9
  5650   0064C2  500F               	movf	fputc@fp^0,w,c
  5651   0064C4  26D9               	addwf	fsr2l,f,c
  5652   0064C6  5010               	movf	(fputc@fp+1)^0,w,c
  5653   0064C8  22DA               	addwfc	fsr2h,f,c
  5654   0064CA  50DE               	movf	postinc2,w,c
  5655   0064CC  10DE               	iorwf	postinc2,w,c
  5656   0064CE  B4D8               	btfsc	status,2,c
  5657   0064D0  EF6C  F032         	goto	u5511
  5658   0064D4  EF6E  F032         	goto	u5510
  5659   0064D8                     u5511:
  5660   0064D8  EF89  F032         	goto	l6089
  5661   0064DC                     u5510:
  5662   0064DC  EE20 F009          	lfsr	2,9
  5663   0064E0  500F               	movf	fputc@fp^0,w,c
  5664   0064E2  26D9               	addwf	fsr2l,f,c
  5665   0064E4  5010               	movf	(fputc@fp+1)^0,w,c
  5666   0064E6  22DA               	addwfc	fsr2h,f,c
  5667   0064E8  EE10 F003          	lfsr	1,3
  5668   0064EC  500F               	movf	fputc@fp^0,w,c
  5669   0064EE  26E1               	addwf	fsr1l,f,c
  5670   0064F0  5010               	movf	(fputc@fp+1)^0,w,c
  5671   0064F2  22E2               	addwfc	fsr1h,f,c
  5672   0064F4  50DE               	movf	postinc2,w,c
  5673   0064F6  5CE6               	subwf	postinc1,w,c
  5674   0064F8  50E6               	movf	postinc1,w,c
  5675   0064FA  0A80               	xorlw	128
  5676   0064FC  6E15               	movwf	(??_fputc+4)^0,c
  5677   0064FE  50DE               	movf	postinc2,w,c
  5678   006500  0A80               	xorlw	128
  5679   006502  5815               	subwfb	(??_fputc+4)^0,w,c
  5680   006504  B0D8               	btfsc	status,0,c
  5681   006506  EF87  F032         	goto	u5521
  5682   00650A  EF89  F032         	goto	u5520
  5683   00650E                     u5521:
  5684   00650E  EFAC  F032         	goto	l1303
  5685   006512                     u5520:
  5686   006512                     l6089:
  5687   006512  EE20 F003          	lfsr	2,3
  5688   006516  500F               	movf	fputc@fp^0,w,c
  5689   006518  26D9               	addwf	fsr2l,f,c
  5690   00651A  5010               	movf	(fputc@fp+1)^0,w,c
  5691   00651C  22DA               	addwfc	fsr2h,f,c
  5692   00651E  CFDE F011          	movff	postinc2,??_fputc
  5693   006522  CFDD F012          	movff	postdec2,??_fputc+1
  5694   006526  C00F  FFD9         	movff	fputc@fp,fsr2l
  5695   00652A  C010  FFDA         	movff	fputc@fp+1,fsr2h
  5696   00652E  CFDE F013          	movff	postinc2,??_fputc+2
  5697   006532  CFDD F014          	movff	postdec2,??_fputc+3
  5698   006536  5011               	movf	??_fputc^0,w,c
  5699   006538  2413               	addwf	(??_fputc+2)^0,w,c
  5700   00653A  6ED9               	movwf	fsr2l,c
  5701   00653C  5012               	movf	(??_fputc+1)^0,w,c
  5702   00653E  2014               	addwfc	(??_fputc+3)^0,w,c
  5703   006540  6EDA               	movwf	fsr2h,c
  5704   006542  C00D  FFDF         	movff	fputc@c,indf2
  5705   006546  EE20 F003          	lfsr	2,3
  5706   00654A  500F               	movf	fputc@fp^0,w,c
  5707   00654C  26D9               	addwf	fsr2l,f,c
  5708   00654E  5010               	movf	(fputc@fp+1)^0,w,c
  5709   006550  22DA               	addwfc	fsr2h,f,c
  5710   006552  2ADE               	incf	postinc2,f,c
  5711   006554  0E00               	movlw	0
  5712   006556  22DD               	addwfc	postdec2,f,c
  5713   006558                     l1303:
  5714   006558  0012               	return		;funcret
  5715   00655A                     __end_of_fputc:
  5716                           	callstack 0
  5717                           
  5718 ;; *************** function _putch *****************
  5719 ;; Defined at:
  5720 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  c               1    wreg     unsigned char 
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  c               1    0[COMRAM] unsigned char 
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      void 
  5727 ;; Registers used:
  5728 ;;		wreg
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5734 ;;      Params:         0       0       0       0       0       0       0       0       0
  5735 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5737 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5738 ;;Total ram usage:        0 bytes
  5739 ;; Hardware stack levels used: 1
  5740 ;; Hardware stack levels required when called: 2
  5741 ;; This function calls:
  5742 ;;		Nothing
  5743 ;; This function is called by:
  5744 ;;		_fputc
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           	psect	text10
  5749   006E8A                     __ptext10:
  5750                           	callstack 0
  5751   006E8A                     _putch:
  5752                           	callstack 23
  5753   006E8A  0012               	return		;funcret
  5754   006E8C                     __end_of_putch:
  5755                           	callstack 0
  5756                           
  5757 ;; *************** function _memcpy *****************
  5758 ;; Defined at:
  5759 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;  d1              2   12[COMRAM] PTR void 
  5762 ;;		 -> dbuf(80), 
  5763 ;;  s1              2   14[COMRAM] PTR const void 
  5764 ;;		 -> dbuf(80), 
  5765 ;;  n               2   16[COMRAM] unsigned int 
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;  s               2   21[COMRAM] PTR const unsigned char 
  5768 ;;		 -> dbuf(80), 
  5769 ;;  d               2   19[COMRAM] PTR unsigned char 
  5770 ;;		 -> dbuf(80), 
  5771 ;;  tmp             1   18[COMRAM] unsigned char 
  5772 ;; Return value:  Size  Location     Type
  5773 ;;                  2   12[COMRAM] PTR void 
  5774 ;; Registers used:
  5775 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5776 ;; Tracked objects:
  5777 ;;		On entry : 0/0
  5778 ;;		On exit  : 0/0
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5781 ;;      Params:         6       0       0       0       0       0       0       0       0
  5782 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5784 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5785 ;;Total ram usage:       11 bytes
  5786 ;; Hardware stack levels used: 1
  5787 ;; Hardware stack levels required when called: 2
  5788 ;; This function calls:
  5789 ;;		Nothing
  5790 ;; This function is called by:
  5791 ;;		_efgtoa
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           	psect	text11
  5796   006B26                     __ptext11:
  5797                           	callstack 0
  5798   006B26                     _memcpy:
  5799                           	callstack 23
  5800   006B26  C00F  F016         	movff	memcpy@s1,memcpy@s
  5801   006B2A  C010  F017         	movff	memcpy@s1+1,memcpy@s+1
  5802   006B2E  C00D  F014         	movff	memcpy@d1,memcpy@d
  5803   006B32  C00E  F015         	movff	memcpy@d1+1,memcpy@d+1
  5804   006B36  EFAD  F035         	goto	l6755
  5805   006B3A                     l6747:
  5806   006B3A  C016  FFD9         	movff	memcpy@s,fsr2l
  5807   006B3E  C017  FFDA         	movff	memcpy@s+1,fsr2h
  5808   006B42  50DF               	movf	indf2,w,c
  5809   006B44  6E13               	movwf	memcpy@tmp^0,c
  5810   006B46  4A16               	infsnz	memcpy@s^0,f,c
  5811   006B48  2A17               	incf	(memcpy@s+1)^0,f,c
  5812   006B4A  C014  FFD9         	movff	memcpy@d,fsr2l
  5813   006B4E  C015  FFDA         	movff	memcpy@d+1,fsr2h
  5814   006B52  C013  FFDF         	movff	memcpy@tmp,indf2
  5815   006B56  4A14               	infsnz	memcpy@d^0,f,c
  5816   006B58  2A15               	incf	(memcpy@d+1)^0,f,c
  5817   006B5A                     l6755:
  5818   006B5A  0611               	decf	memcpy@n^0,f,c
  5819   006B5C  A0D8               	btfss	status,0,c
  5820   006B5E  0612               	decf	(memcpy@n+1)^0,f,c
  5821   006B60  2811               	incf	memcpy@n^0,w,c
  5822   006B62  E106               	bnz	u6721
  5823   006B64  2812               	incf	(memcpy@n+1)^0,w,c
  5824   006B66  A4D8               	btfss	status,2,c
  5825   006B68  EFB8  F035         	goto	u6721
  5826   006B6C  EFBA  F035         	goto	u6720
  5827   006B70                     u6721:
  5828   006B70  EF9D  F035         	goto	l6747
  5829   006B74                     u6720:
  5830   006B74  0012               	return		;funcret
  5831   006B76                     __end_of_memcpy:
  5832                           	callstack 0
  5833                           
  5834 ;; *************** function _labs *****************
  5835 ;; Defined at:
  5836 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;  a               4   12[COMRAM] long 
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;		None
  5841 ;; Return value:  Size  Location     Type
  5842 ;;                  4   12[COMRAM] long 
  5843 ;; Registers used:
  5844 ;;		wreg, status,2, status,0
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5850 ;;      Params:         4       0       0       0       0       0       0       0       0
  5851 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5852 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5853 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5854 ;;Total ram usage:        8 bytes
  5855 ;; Hardware stack levels used: 1
  5856 ;; Hardware stack levels required when called: 2
  5857 ;; This function calls:
  5858 ;;		Nothing
  5859 ;; This function is called by:
  5860 ;;		_efgtoa
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           	psect	text12
  5865   0069BC                     __ptext12:
  5866                           	callstack 0
  5867   0069BC                     _labs:
  5868                           	callstack 23
  5869   0069BC  BE10               	btfsc	(labs@a+3)^0,7,c
  5870   0069BE  EFED  F034         	goto	u6610
  5871   0069C2  5010               	movf	(labs@a+3)^0,w,c
  5872   0069C4  100F               	iorwf	(labs@a+2)^0,w,c
  5873   0069C6  100E               	iorwf	(labs@a+1)^0,w,c
  5874   0069C8  E106               	bnz	u6611
  5875   0069CA  040D               	decf	labs@a^0,w,c
  5876   0069CC  B0D8               	btfsc	status,0,c
  5877   0069CE  EFEB  F034         	goto	u6611
  5878   0069D2  EFED  F034         	goto	u6610
  5879   0069D6                     u6611:
  5880   0069D6  EF08  F035         	goto	l1282
  5881   0069DA                     u6610:
  5882   0069DA  C00D  F011         	movff	labs@a,??_labs
  5883   0069DE  C00E  F012         	movff	labs@a+1,??_labs+1
  5884   0069E2  C00F  F013         	movff	labs@a+2,??_labs+2
  5885   0069E6  C010  F014         	movff	labs@a+3,??_labs+3
  5886   0069EA  1E11               	comf	??_labs^0,f,c
  5887   0069EC  1E12               	comf	(??_labs+1)^0,f,c
  5888   0069EE  1E13               	comf	(??_labs+2)^0,f,c
  5889   0069F0  1E14               	comf	(??_labs+3)^0,f,c
  5890   0069F2  2A11               	incf	??_labs^0,f,c
  5891   0069F4  0E00               	movlw	0
  5892   0069F6  2212               	addwfc	(??_labs+1)^0,f,c
  5893   0069F8  2213               	addwfc	(??_labs+2)^0,f,c
  5894   0069FA  2214               	addwfc	(??_labs+3)^0,f,c
  5895   0069FC  C011  F00D         	movff	??_labs,?_labs
  5896   006A00  C012  F00E         	movff	??_labs+1,?_labs+1
  5897   006A04  C013  F00F         	movff	??_labs+2,?_labs+2
  5898   006A08  C014  F010         	movff	??_labs+3,?_labs+3
  5899   006A0C  EF10  F035         	goto	l1285
  5900   006A10                     l1282:
  5901   006A10  C00D  F00D         	movff	labs@a,?_labs
  5902   006A14  C00E  F00E         	movff	labs@a+1,?_labs+1
  5903   006A18  C00F  F00F         	movff	labs@a+2,?_labs+2
  5904   006A1C  C010  F010         	movff	labs@a+3,?_labs+3
  5905   006A20                     l1285:
  5906   006A20  0012               	return		;funcret
  5907   006A22                     __end_of_labs:
  5908                           	callstack 0
  5909                           
  5910 ;; *************** function _floorf *****************
  5911 ;; Defined at:
  5912 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;  x               4   33[BANK0 ] float 
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;  u               4   49[BANK0 ] struct .
  5917 ;;  m               4   43[BANK0 ] unsigned long 
  5918 ;;  e               2   47[BANK0 ] int 
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  4   33[BANK0 ] float 
  5921 ;; Registers used:
  5922 ;;		wreg, status,2, status,0
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5928 ;;      Params:         0       4       0       0       0       0       0       0       0
  5929 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5930 ;;      Temps:          0       6       0       0       0       0       0       0       0
  5931 ;;      Totals:         0      20       0       0       0       0       0       0       0
  5932 ;;Total ram usage:       20 bytes
  5933 ;; Hardware stack levels used: 1
  5934 ;; Hardware stack levels required when called: 2
  5935 ;; This function calls:
  5936 ;;		Nothing
  5937 ;; This function is called by:
  5938 ;;		_efgtoa
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text13
  5943   005594                     __ptext13:
  5944                           	callstack 0
  5945   005594                     _floorf:
  5946                           	callstack 23
  5947   005594  C150  F091         	movff	floorf@F526,floorf@u
  5948   005598  C151  F092         	movff	floorf@F526+1,floorf@u+1
  5949   00559C  C152  F093         	movff	floorf@F526+2,floorf@u+2
  5950   0055A0  C153  F094         	movff	floorf@F526+3,floorf@u+3
  5951   0055A4  C081  F091         	movff	floorf@x,floorf@u
  5952   0055A8  C082  F092         	movff	floorf@x+1,floorf@u+1
  5953   0055AC  C083  F093         	movff	floorf@x+2,floorf@u+2
  5954   0055B0  C084  F094         	movff	floorf@x+3,floorf@u+3
  5955   0055B4  0E81               	movlw	129
  5956   0055B6  0100               	movlb	0	; () banked
  5957   0055B8  6F85               	movwf	??_floorf& (0+255),b
  5958   0055BA  0EFF               	movlw	255
  5959   0055BC  6F86               	movwf	(??_floorf+1)& (0+255),b
  5960   0055BE  C091  F087         	movff	floorf@u,??_floorf+2
  5961   0055C2  C092  F088         	movff	floorf@u+1,??_floorf+3
  5962   0055C6  C093  F089         	movff	floorf@u+2,??_floorf+4
  5963   0055CA  C094  F08A         	movff	floorf@u+3,??_floorf+5
  5964   0055CE  0E18               	movlw	24
  5965   0055D0  EFEF  F02A         	goto	u6620
  5966   0055D4                     u6625:
  5967   0055D4  90D8               	bcf	status,0,c
  5968   0055D6  338A               	rrcf	(??_floorf+5)& (0+255),f,b
  5969   0055D8  3389               	rrcf	(??_floorf+4)& (0+255),f,b
  5970   0055DA  3388               	rrcf	(??_floorf+3)& (0+255),f,b
  5971   0055DC  3387               	rrcf	(??_floorf+2)& (0+255),f,b
  5972   0055DE                     u6620:
  5973   0055DE  2EE8               	decfsz	wreg,f,c
  5974   0055E0  EFEA  F02A         	goto	u6625
  5975   0055E4  5187               	movf	(??_floorf+2)& (0+255),w,b
  5976   0055E6  2585               	addwf	??_floorf& (0+255),w,b
  5977   0055E8  6F8F               	movwf	floorf@e& (0+255),b
  5978   0055EA  0E00               	movlw	0
  5979   0055EC  2186               	addwfc	(??_floorf+1)& (0+255),w,b
  5980   0055EE  6F90               	movwf	(floorf@e+1)& (0+255),b
  5981   0055F0  BF90               	btfsc	(floorf@e+1)& (0+255),7,b
  5982   0055F2  EF04  F02B         	goto	u6631
  5983   0055F6  5190               	movf	(floorf@e+1)& (0+255),w,b
  5984   0055F8  E109               	bnz	u6630
  5985   0055FA  0E17               	movlw	23
  5986   0055FC  5D8F               	subwf	floorf@e& (0+255),w,b
  5987   0055FE  A0D8               	btfss	status,0,c
  5988   005600  EF04  F02B         	goto	u6631
  5989   005604  EF06  F02B         	goto	u6630
  5990   005608                     u6631:
  5991   005608  EF10  F02B         	goto	l6723
  5992   00560C                     u6630:
  5993   00560C                     l6721:
  5994                           
  5995                           ; BSR set to: 0
  5996   00560C  C081  F081         	movff	floorf@x,?_floorf
  5997   005610  C082  F082         	movff	floorf@x+1,?_floorf+1
  5998   005614  C083  F083         	movff	floorf@x+2,?_floorf+2
  5999   005618  C084  F084         	movff	floorf@x+3,?_floorf+3
  6000   00561C  EFD4  F02B         	goto	l1257
  6001   005620                     l6723:
  6002                           
  6003                           ; BSR set to: 0
  6004   005620  BF90               	btfsc	(floorf@e+1)& (0+255),7,b
  6005   005622  EF15  F02B         	goto	u6641
  6006   005626  EF17  F02B         	goto	u6640
  6007   00562A                     u6641:
  6008   00562A  EF88  F02B         	goto	l6733
  6009   00562E                     u6640:
  6010   00562E                     
  6011                           ; BSR set to: 0
  6012   00562E  C08F  F085         	movff	floorf@e,??_floorf
  6013   005632  0EFF               	movlw	255
  6014   005634  6F86               	movwf	(??_floorf+1)& (0+255),b
  6015   005636  0EFF               	movlw	255
  6016   005638  6F87               	movwf	(??_floorf+2)& (0+255),b
  6017   00563A  0E7F               	movlw	127
  6018   00563C  6F88               	movwf	(??_floorf+3)& (0+255),b
  6019   00563E  0E00               	movlw	0
  6020   005640  6F89               	movwf	(??_floorf+4)& (0+255),b
  6021   005642                     u6655:
  6022   005642  6785               	tstfsz	??_floorf& (0+255),b
  6023   005644  EF26  F02B         	goto	u6656
  6024   005648  EF2E  F02B         	goto	u6657
  6025   00564C                     u6656:
  6026   00564C  3589               	rlcf	(??_floorf+4)& (0+255),w,b
  6027   00564E  3389               	rrcf	(??_floorf+4)& (0+255),f,b
  6028   005650  3388               	rrcf	(??_floorf+3)& (0+255),f,b
  6029   005652  3387               	rrcf	(??_floorf+2)& (0+255),f,b
  6030   005654  3386               	rrcf	(??_floorf+1)& (0+255),f,b
  6031   005656  2F85               	decfsz	??_floorf& (0+255),f,b
  6032   005658  EF21  F02B         	goto	u6655
  6033   00565C                     u6657:
  6034   00565C  C086  F08B         	movff	??_floorf+1,floorf@m
  6035   005660  C087  F08C         	movff	??_floorf+2,floorf@m+1
  6036   005664  C088  F08D         	movff	??_floorf+3,floorf@m+2
  6037   005668  C089  F08E         	movff	??_floorf+4,floorf@m+3
  6038   00566C  0100               	movlb	0	; () banked
  6039   00566E  518B               	movf	floorf@m& (0+255),w,b
  6040   005670  1591               	andwf	floorf@u& (0+255),w,b
  6041   005672  6F85               	movwf	??_floorf& (0+255),b
  6042   005674  518C               	movf	(floorf@m+1)& (0+255),w,b
  6043   005676  1592               	andwf	(floorf@u+1)& (0+255),w,b
  6044   005678  6F86               	movwf	(??_floorf+1)& (0+255),b
  6045   00567A  518D               	movf	(floorf@m+2)& (0+255),w,b
  6046   00567C  1593               	andwf	(floorf@u+2)& (0+255),w,b
  6047   00567E  6F87               	movwf	(??_floorf+2)& (0+255),b
  6048   005680  518E               	movf	(floorf@m+3)& (0+255),w,b
  6049   005682  1594               	andwf	(floorf@u+3)& (0+255),w,b
  6050   005684  6F88               	movwf	(??_floorf+3)& (0+255),b
  6051   005686  5185               	movf	??_floorf& (0+255),w,b
  6052   005688  1186               	iorwf	(??_floorf+1)& (0+255),w,b
  6053   00568A  1187               	iorwf	(??_floorf+2)& (0+255),w,b
  6054   00568C  1188               	iorwf	(??_floorf+3)& (0+255),w,b
  6055   00568E  A4D8               	btfss	status,2,c
  6056   005690  EF4C  F02B         	goto	u6661
  6057   005694  EF4E  F02B         	goto	u6660
  6058   005698                     u6661:
  6059   005698  EF50  F02B         	goto	l6729
  6060   00569C                     u6660:
  6061   00569C  EF06  F02B         	goto	l6721
  6062   0056A0                     l6729:
  6063                           
  6064                           ; BSR set to: 0
  6065   0056A0  C091  F085         	movff	floorf@u,??_floorf
  6066   0056A4  C092  F086         	movff	floorf@u+1,??_floorf+1
  6067   0056A8  C093  F087         	movff	floorf@u+2,??_floorf+2
  6068   0056AC  C094  F088         	movff	floorf@u+3,??_floorf+3
  6069   0056B0  0E20               	movlw	32
  6070   0056B2  EF60  F02B         	goto	u6670
  6071   0056B6                     u6675:
  6072   0056B6  90D8               	bcf	status,0,c
  6073   0056B8  3388               	rrcf	(??_floorf+3)& (0+255),f,b
  6074   0056BA  3387               	rrcf	(??_floorf+2)& (0+255),f,b
  6075   0056BC  3386               	rrcf	(??_floorf+1)& (0+255),f,b
  6076   0056BE  3385               	rrcf	??_floorf& (0+255),f,b
  6077   0056C0                     u6670:
  6078   0056C0  2EE8               	decfsz	wreg,f,c
  6079   0056C2  EF5B  F02B         	goto	u6675
  6080   0056C6  5185               	movf	??_floorf& (0+255),w,b
  6081   0056C8  1186               	iorwf	(??_floorf+1)& (0+255),w,b
  6082   0056CA  1187               	iorwf	(??_floorf+2)& (0+255),w,b
  6083   0056CC  1188               	iorwf	(??_floorf+3)& (0+255),w,b
  6084   0056CE  B4D8               	btfsc	status,2,c
  6085   0056D0  EF6C  F02B         	goto	u6681
  6086   0056D4  EF6E  F02B         	goto	u6680
  6087   0056D8                     u6681:
  6088   0056D8  EF76  F02B         	goto	l1260
  6089   0056DC                     u6680:
  6090   0056DC                     
  6091                           ; BSR set to: 0
  6092   0056DC  518B               	movf	floorf@m& (0+255),w,b
  6093   0056DE  2791               	addwf	floorf@u& (0+255),f,b
  6094   0056E0  518C               	movf	(floorf@m+1)& (0+255),w,b
  6095   0056E2  2392               	addwfc	(floorf@u+1)& (0+255),f,b
  6096   0056E4  518D               	movf	(floorf@m+2)& (0+255),w,b
  6097   0056E6  2393               	addwfc	(floorf@u+2)& (0+255),f,b
  6098   0056E8  518E               	movf	(floorf@m+3)& (0+255),w,b
  6099   0056EA  2394               	addwfc	(floorf@u+3)& (0+255),f,b
  6100   0056EC                     l1260:
  6101                           
  6102                           ; BSR set to: 0
  6103   0056EC  1D8B               	comf	floorf@m& (0+255),w,b
  6104   0056EE  6F85               	movwf	??_floorf& (0+255),b
  6105   0056F0  1D8C               	comf	(floorf@m+1)& (0+255),w,b
  6106   0056F2  6F86               	movwf	(??_floorf+1)& (0+255),b
  6107   0056F4  1D8D               	comf	(floorf@m+2)& (0+255),w,b
  6108   0056F6  6F87               	movwf	(??_floorf+2)& (0+255),b
  6109   0056F8  1D8E               	comf	(floorf@m+3)& (0+255),w,b
  6110   0056FA  6F88               	movwf	(??_floorf+3)& (0+255),b
  6111   0056FC  5185               	movf	??_floorf& (0+255),w,b
  6112   0056FE  1791               	andwf	floorf@u& (0+255),f,b
  6113   005700  5186               	movf	(??_floorf+1)& (0+255),w,b
  6114   005702  1792               	andwf	(floorf@u+1)& (0+255),f,b
  6115   005704  5187               	movf	(??_floorf+2)& (0+255),w,b
  6116   005706  1793               	andwf	(floorf@u+2)& (0+255),f,b
  6117   005708  5188               	movf	(??_floorf+3)& (0+255),w,b
  6118   00570A  1794               	andwf	(floorf@u+3)& (0+255),f,b
  6119   00570C  EFCC  F02B         	goto	l6741
  6120   005710                     l6733:
  6121                           
  6122                           ; BSR set to: 0
  6123   005710  C091  F085         	movff	floorf@u,??_floorf
  6124   005714  C092  F086         	movff	floorf@u+1,??_floorf+1
  6125   005718  C093  F087         	movff	floorf@u+2,??_floorf+2
  6126   00571C  C094  F088         	movff	floorf@u+3,??_floorf+3
  6127   005720  0E20               	movlw	32
  6128   005722  EF98  F02B         	goto	u6690
  6129   005726                     u6695:
  6130   005726  90D8               	bcf	status,0,c
  6131   005728  3388               	rrcf	(??_floorf+3)& (0+255),f,b
  6132   00572A  3387               	rrcf	(??_floorf+2)& (0+255),f,b
  6133   00572C  3386               	rrcf	(??_floorf+1)& (0+255),f,b
  6134   00572E  3385               	rrcf	??_floorf& (0+255),f,b
  6135   005730                     u6690:
  6136   005730  2EE8               	decfsz	wreg,f,c
  6137   005732  EF93  F02B         	goto	u6695
  6138   005736  5185               	movf	??_floorf& (0+255),w,b
  6139   005738  1186               	iorwf	(??_floorf+1)& (0+255),w,b
  6140   00573A  1187               	iorwf	(??_floorf+2)& (0+255),w,b
  6141   00573C  1188               	iorwf	(??_floorf+3)& (0+255),w,b
  6142   00573E  A4D8               	btfss	status,2,c
  6143   005740  EFA4  F02B         	goto	u6701
  6144   005744  EFA6  F02B         	goto	u6700
  6145   005748                     u6701:
  6146   005748  EFB0  F02B         	goto	l6737
  6147   00574C                     u6700:
  6148   00574C                     
  6149                           ; BSR set to: 0
  6150   00574C  0E00               	movlw	0
  6151   00574E  6F91               	movwf	floorf@u& (0+255),b
  6152   005750  0E00               	movlw	0
  6153   005752  6F92               	movwf	(floorf@u+1)& (0+255),b
  6154   005754  0E00               	movlw	0
  6155   005756  6F93               	movwf	(floorf@u+2)& (0+255),b
  6156   005758  0E00               	movlw	0
  6157   00575A  6F94               	movwf	(floorf@u+3)& (0+255),b
  6158   00575C  EFCC  F02B         	goto	l6741
  6159   005760                     l6737:
  6160                           
  6161                           ; BSR set to: 0
  6162   005760  90D8               	bcf	status,0,c
  6163   005762  3591               	rlcf	floorf@u& (0+255),w,b
  6164   005764  6F85               	movwf	??_floorf& (0+255),b
  6165   005766  3592               	rlcf	(floorf@u+1)& (0+255),w,b
  6166   005768  6F86               	movwf	(??_floorf+1)& (0+255),b
  6167   00576A  3593               	rlcf	(floorf@u+2)& (0+255),w,b
  6168   00576C  6F87               	movwf	(??_floorf+2)& (0+255),b
  6169   00576E  3594               	rlcf	(floorf@u+3)& (0+255),w,b
  6170   005770  6F88               	movwf	(??_floorf+3)& (0+255),b
  6171   005772  5185               	movf	??_floorf& (0+255),w,b
  6172   005774  1186               	iorwf	(??_floorf+1)& (0+255),w,b
  6173   005776  1187               	iorwf	(??_floorf+2)& (0+255),w,b
  6174   005778  1188               	iorwf	(??_floorf+3)& (0+255),w,b
  6175   00577A  B4D8               	btfsc	status,2,c
  6176   00577C  EFC2  F02B         	goto	u6711
  6177   005780  EFC4  F02B         	goto	u6710
  6178   005784                     u6711:
  6179   005784  EFCC  F02B         	goto	l6741
  6180   005788                     u6710:
  6181   005788                     
  6182                           ; BSR set to: 0
  6183   005788  0E00               	movlw	0
  6184   00578A  6F91               	movwf	floorf@u& (0+255),b
  6185   00578C  0E00               	movlw	0
  6186   00578E  6F92               	movwf	(floorf@u+1)& (0+255),b
  6187   005790  0E80               	movlw	128
  6188   005792  6F93               	movwf	(floorf@u+2)& (0+255),b
  6189   005794  0EBF               	movlw	191
  6190   005796  6F94               	movwf	(floorf@u+3)& (0+255),b
  6191   005798                     l6741:
  6192                           
  6193                           ; BSR set to: 0
  6194   005798  C091  F081         	movff	floorf@u,?_floorf
  6195   00579C  C092  F082         	movff	floorf@u+1,?_floorf+1
  6196   0057A0  C093  F083         	movff	floorf@u+2,?_floorf+2
  6197   0057A4  C094  F084         	movff	floorf@u+3,?_floorf+3
  6198   0057A8                     l1257:
  6199                           
  6200                           ; BSR set to: 0
  6201   0057A8  0012               	return		;funcret
  6202   0057AA                     __end_of_floorf:
  6203                           	callstack 0
  6204                           
  6205 ;; *************** function ___fpclassifyf *****************
  6206 ;; Defined at:
  6207 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  6208 ;; Parameters:    Size  Location     Type
  6209 ;;  x               4   12[COMRAM] float 
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;  u               4   22[COMRAM] struct .
  6212 ;;  e               2   20[COMRAM] int 
  6213 ;; Return value:  Size  Location     Type
  6214 ;;                  2   12[COMRAM] int 
  6215 ;; Registers used:
  6216 ;;		wreg, status,2, status,0
  6217 ;; Tracked objects:
  6218 ;;		On entry : 0/0
  6219 ;;		On exit  : 0/0
  6220 ;;		Unchanged: 0/0
  6221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6222 ;;      Params:         4       0       0       0       0       0       0       0       0
  6223 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6224 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6225 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6226 ;;Total ram usage:       14 bytes
  6227 ;; Hardware stack levels used: 1
  6228 ;; Hardware stack levels required when called: 2
  6229 ;; This function calls:
  6230 ;;		Nothing
  6231 ;; This function is called by:
  6232 ;;		_efgtoa
  6233 ;; This function uses a non-reentrant model
  6234 ;;
  6235                           
  6236                           	psect	text14
  6237   006296                     __ptext14:
  6238                           	callstack 0
  6239   006296                     ___fpclassifyf:
  6240                           	callstack 23
  6241   006296  C154  F017         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6242   00629A  C155  F018         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6243   00629E  C156  F019         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6244   0062A2  C157  F01A         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6245   0062A6  C00D  F017         	movff	___fpclassifyf@x,___fpclassifyf@u
  6246   0062AA  C00E  F018         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6247   0062AE  C00F  F019         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6248   0062B2  C010  F01A         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6249   0062B6  C017  F011         	movff	___fpclassifyf@u,??___fpclassifyf
  6250   0062BA  C018  F012         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6251   0062BE  C019  F013         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6252   0062C2  C01A  F014         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6253   0062C6  0E18               	movlw	24
  6254   0062C8  EF6B  F031         	goto	u6530
  6255   0062CC                     u6535:
  6256   0062CC  90D8               	bcf	status,0,c
  6257   0062CE  3214               	rrcf	(??___fpclassifyf+3)^0,f,c
  6258   0062D0  3213               	rrcf	(??___fpclassifyf+2)^0,f,c
  6259   0062D2  3212               	rrcf	(??___fpclassifyf+1)^0,f,c
  6260   0062D4  3211               	rrcf	??___fpclassifyf^0,f,c
  6261   0062D6                     u6530:
  6262   0062D6  2EE8               	decfsz	wreg,f,c
  6263   0062D8  EF66  F031         	goto	u6535
  6264   0062DC  5011               	movf	??___fpclassifyf^0,w,c
  6265   0062DE  6E15               	movwf	___fpclassifyf@e^0,c
  6266   0062E0  6A16               	clrf	(___fpclassifyf@e+1)^0,c
  6267   0062E2  5015               	movf	___fpclassifyf@e^0,w,c
  6268   0062E4  1016               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6269   0062E6  A4D8               	btfss	status,2,c
  6270   0062E8  EF78  F031         	goto	u6541
  6271   0062EC  EF7A  F031         	goto	u6540
  6272   0062F0                     u6541:
  6273   0062F0  EF9A  F031         	goto	l6699
  6274   0062F4                     u6540:
  6275   0062F4  90D8               	bcf	status,0,c
  6276   0062F6  3417               	rlcf	___fpclassifyf@u^0,w,c
  6277   0062F8  6E11               	movwf	??___fpclassifyf^0,c
  6278   0062FA  3418               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6279   0062FC  6E12               	movwf	(??___fpclassifyf+1)^0,c
  6280   0062FE  3419               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6281   006300  6E13               	movwf	(??___fpclassifyf+2)^0,c
  6282   006302  341A               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6283   006304  6E14               	movwf	(??___fpclassifyf+3)^0,c
  6284   006306  5011               	movf	??___fpclassifyf^0,w,c
  6285   006308  1012               	iorwf	(??___fpclassifyf+1)^0,w,c
  6286   00630A  1013               	iorwf	(??___fpclassifyf+2)^0,w,c
  6287   00630C  1014               	iorwf	(??___fpclassifyf+3)^0,w,c
  6288   00630E  A4D8               	btfss	status,2,c
  6289   006310  EF8C  F031         	goto	u6551
  6290   006314  EF8E  F031         	goto	u6550
  6291   006318                     u6551:
  6292   006318  EF94  F031         	goto	l6695
  6293   00631C                     u6550:
  6294   00631C  0E00               	movlw	0
  6295   00631E  6E0E               	movwf	(?___fpclassifyf+1)^0,c
  6296   006320  0E02               	movlw	2
  6297   006322  6E0D               	movwf	?___fpclassifyf^0,c
  6298   006324  EFC9  F031         	goto	l1225
  6299   006328                     l6695:
  6300   006328  0E00               	movlw	0
  6301   00632A  6E0E               	movwf	(?___fpclassifyf+1)^0,c
  6302   00632C  0E03               	movlw	3
  6303   00632E  6E0D               	movwf	?___fpclassifyf^0,c
  6304   006330  EFC9  F031         	goto	l1225
  6305   006334                     l6699:
  6306   006334  2815               	incf	___fpclassifyf@e^0,w,c
  6307   006336  1016               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6308   006338  A4D8               	btfss	status,2,c
  6309   00633A  EFA1  F031         	goto	u6561
  6310   00633E  EFA3  F031         	goto	u6560
  6311   006342                     u6561:
  6312   006342  EFC5  F031         	goto	l6705
  6313   006346                     u6560:
  6314   006346  C017  F011         	movff	___fpclassifyf@u,??___fpclassifyf
  6315   00634A  C018  F012         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6316   00634E  C019  F013         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6317   006352  C01A  F014         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6318   006356  0E09               	movlw	9
  6319   006358                     u6575:
  6320   006358  90D8               	bcf	status,0,c
  6321   00635A  3611               	rlcf	??___fpclassifyf^0,f,c
  6322   00635C  3612               	rlcf	(??___fpclassifyf+1)^0,f,c
  6323   00635E  3613               	rlcf	(??___fpclassifyf+2)^0,f,c
  6324   006360  3614               	rlcf	(??___fpclassifyf+3)^0,f,c
  6325   006362  2EE8               	decfsz	wreg,f,c
  6326   006364  EFAC  F031         	goto	u6575
  6327   006368  5011               	movf	??___fpclassifyf^0,w,c
  6328   00636A  1012               	iorwf	(??___fpclassifyf+1)^0,w,c
  6329   00636C  1013               	iorwf	(??___fpclassifyf+2)^0,w,c
  6330   00636E  1014               	iorwf	(??___fpclassifyf+3)^0,w,c
  6331   006370  B4D8               	btfsc	status,2,c
  6332   006372  EFBD  F031         	goto	u6581
  6333   006376  EFC0  F031         	goto	u6580
  6334   00637A                     u6581:
  6335   00637A  0E01               	movlw	1
  6336   00637C  EFC1  F031         	goto	u6590
  6337   006380                     u6580:
  6338   006380  0E00               	movlw	0
  6339   006382                     u6590:
  6340   006382  6E0D               	movwf	?___fpclassifyf^0,c
  6341   006384  6A0E               	clrf	(?___fpclassifyf+1)^0,c
  6342   006386  EFC9  F031         	goto	l1225
  6343   00638A                     l6705:
  6344   00638A  0E00               	movlw	0
  6345   00638C  6E0E               	movwf	(?___fpclassifyf+1)^0,c
  6346   00638E  0E04               	movlw	4
  6347   006390  6E0D               	movwf	?___fpclassifyf^0,c
  6348   006392                     l1225:
  6349   006392  0012               	return		;funcret
  6350   006394                     __end_of___fpclassifyf:
  6351                           	callstack 0
  6352                           
  6353 ;; *************** function ___fleq *****************
  6354 ;; Defined at:
  6355 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;  ff1             4   12[COMRAM] int 
  6358 ;;  ff2             4   16[COMRAM] int 
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;		None
  6361 ;; Return value:  Size  Location     Type
  6362 ;;		None               void
  6363 ;; Registers used:
  6364 ;;		wreg, status,2, status,0
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6370 ;;      Params:         8       0       0       0       0       0       0       0       0
  6371 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6372 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6373 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6374 ;;Total ram usage:       12 bytes
  6375 ;; Hardware stack levels used: 1
  6376 ;; Hardware stack levels required when called: 2
  6377 ;; This function calls:
  6378 ;;		Nothing
  6379 ;; This function is called by:
  6380 ;;		_efgtoa
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384                           	psect	text15
  6385   00661E                     __ptext15:
  6386                           	callstack 0
  6387   00661E                     ___fleq:
  6388                           	callstack 23
  6389   00661E  0E00               	movlw	0
  6390   006620  140D               	andwf	___fleq@ff1^0,w,c
  6391   006622  6E15               	movwf	??___fleq^0,c
  6392   006624  0E00               	movlw	0
  6393   006626  140E               	andwf	(___fleq@ff1+1)^0,w,c
  6394   006628  6E16               	movwf	(??___fleq+1)^0,c
  6395   00662A  0E80               	movlw	128
  6396   00662C  140F               	andwf	(___fleq@ff1+2)^0,w,c
  6397   00662E  6E17               	movwf	(??___fleq+2)^0,c
  6398   006630  0E7F               	movlw	127
  6399   006632  1410               	andwf	(___fleq@ff1+3)^0,w,c
  6400   006634  6E18               	movwf	(??___fleq+3)^0,c
  6401   006636  5015               	movf	??___fleq^0,w,c
  6402   006638  1016               	iorwf	(??___fleq+1)^0,w,c
  6403   00663A  1017               	iorwf	(??___fleq+2)^0,w,c
  6404   00663C  1018               	iorwf	(??___fleq+3)^0,w,c
  6405   00663E  A4D8               	btfss	status,2,c
  6406   006640  EF24  F033         	goto	u6351
  6407   006644  EF26  F033         	goto	u6350
  6408   006648                     u6351:
  6409   006648  EF2E  F033         	goto	l6587
  6410   00664C                     u6350:
  6411   00664C  0E00               	movlw	0
  6412   00664E  6E0D               	movwf	___fleq@ff1^0,c
  6413   006650  0E00               	movlw	0
  6414   006652  6E0E               	movwf	(___fleq@ff1+1)^0,c
  6415   006654  0E00               	movlw	0
  6416   006656  6E0F               	movwf	(___fleq@ff1+2)^0,c
  6417   006658  0E00               	movlw	0
  6418   00665A  6E10               	movwf	(___fleq@ff1+3)^0,c
  6419   00665C                     l6587:
  6420   00665C  0E00               	movlw	0
  6421   00665E  1411               	andwf	___fleq@ff2^0,w,c
  6422   006660  6E15               	movwf	??___fleq^0,c
  6423   006662  0E00               	movlw	0
  6424   006664  1412               	andwf	(___fleq@ff2+1)^0,w,c
  6425   006666  6E16               	movwf	(??___fleq+1)^0,c
  6426   006668  0E80               	movlw	128
  6427   00666A  1413               	andwf	(___fleq@ff2+2)^0,w,c
  6428   00666C  6E17               	movwf	(??___fleq+2)^0,c
  6429   00666E  0E7F               	movlw	127
  6430   006670  1414               	andwf	(___fleq@ff2+3)^0,w,c
  6431   006672  6E18               	movwf	(??___fleq+3)^0,c
  6432   006674  5015               	movf	??___fleq^0,w,c
  6433   006676  1016               	iorwf	(??___fleq+1)^0,w,c
  6434   006678  1017               	iorwf	(??___fleq+2)^0,w,c
  6435   00667A  1018               	iorwf	(??___fleq+3)^0,w,c
  6436   00667C  A4D8               	btfss	status,2,c
  6437   00667E  EF43  F033         	goto	u6361
  6438   006682  EF45  F033         	goto	u6360
  6439   006686                     u6361:
  6440   006686  EF4D  F033         	goto	l6591
  6441   00668A                     u6360:
  6442   00668A  0E00               	movlw	0
  6443   00668C  6E11               	movwf	___fleq@ff2^0,c
  6444   00668E  0E00               	movlw	0
  6445   006690  6E12               	movwf	(___fleq@ff2+1)^0,c
  6446   006692  0E00               	movlw	0
  6447   006694  6E13               	movwf	(___fleq@ff2+2)^0,c
  6448   006696  0E00               	movlw	0
  6449   006698  6E14               	movwf	(___fleq@ff2+3)^0,c
  6450   00669A                     l6591:
  6451   00669A  5011               	movf	___fleq@ff2^0,w,c
  6452   00669C  180D               	xorwf	___fleq@ff1^0,w,c
  6453   00669E  E10F               	bnz	u6370
  6454   0066A0  5012               	movf	(___fleq@ff2+1)^0,w,c
  6455   0066A2  180E               	xorwf	(___fleq@ff1+1)^0,w,c
  6456   0066A4  E10C               	bnz	u6370
  6457   0066A6  5013               	movf	(___fleq@ff2+2)^0,w,c
  6458   0066A8  180F               	xorwf	(___fleq@ff1+2)^0,w,c
  6459   0066AA  E109               	bnz	u6370
  6460   0066AC  5014               	movf	(___fleq@ff2+3)^0,w,c
  6461   0066AE  1810               	xorwf	(___fleq@ff1+3)^0,w,c
  6462   0066B0  B4D8               	btfsc	status,2,c
  6463   0066B2  EF5D  F033         	goto	u6371
  6464   0066B6  EF5F  F033         	goto	u6370
  6465   0066BA                     u6371:
  6466   0066BA  EF62  F033         	goto	l6595
  6467   0066BE                     u6370:
  6468   0066BE  90D8               	bcf	status,0,c
  6469   0066C0  EF63  F033         	goto	l548
  6470   0066C4                     l6595:
  6471   0066C4  80D8               	bsf	status,0,c
  6472   0066C6                     l548:
  6473   0066C6  0012               	return		;funcret
  6474   0066C8                     __end_of___fleq:
  6475                           	callstack 0
  6476                           
  6477 ;; *************** function _atoi *****************
  6478 ;; Defined at:
  6479 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;  s               2   18[COMRAM] PTR const unsigned char 
  6482 ;;		 -> STR_5(13), STR_4(16), STR_3(10), STR_2(14), 
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;  n               2   25[COMRAM] int 
  6485 ;;  neg             2   23[COMRAM] int 
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  2   18[COMRAM] int 
  6488 ;; Registers used:
  6489 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6495 ;;      Params:         2       0       0       0       0       0       0       0       0
  6496 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6497 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6498 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6499 ;;Total ram usage:        9 bytes
  6500 ;; Hardware stack levels used: 1
  6501 ;; Hardware stack levels required when called: 3
  6502 ;; This function calls:
  6503 ;;		___wmul
  6504 ;;		_isdigit
  6505 ;;		_isspace
  6506 ;; This function is called by:
  6507 ;;		_vfpfcnvrt
  6508 ;; This function uses a non-reentrant model
  6509 ;;
  6510                           
  6511                           	psect	text16
  6512   005F40                     __ptext16:
  6513                           	callstack 0
  6514   005F40                     _atoi:
  6515                           	callstack 23
  6516   005F40  0E00               	movlw	0
  6517   005F42  6E1B               	movwf	(atoi@n+1)^0,c
  6518   005F44  0E00               	movlw	0
  6519   005F46  6E1A               	movwf	atoi@n^0,c
  6520   005F48  0E00               	movlw	0
  6521   005F4A  6E19               	movwf	(atoi@neg+1)^0,c
  6522   005F4C  0E00               	movlw	0
  6523   005F4E  6E18               	movwf	atoi@neg^0,c
  6524   005F50  EFAC  F02F         	goto	l7001
  6525   005F54                     l6997:
  6526   005F54  4A13               	infsnz	atoi@s^0,f,c
  6527   005F56  2A14               	incf	(atoi@s+1)^0,f,c
  6528   005F58                     l7001:
  6529   005F58  C013  FFF6         	movff	atoi@s,tblptrl
  6530   005F5C  C014  FFF7         	movff	atoi@s+1,tblptrh
  6531   005F60                     	if	0	;tblptru may be non-zero
  6532   005F60                     	endif
  6533   005F60                     	if	0	;tblptru may be non-zero
  6534   005F60                     	endif
  6535   005F60  0008               	tblrd		*
  6536   005F62  50F5               	movf	tablat,w,c
  6537   005F64  0A20               	xorlw	32
  6538   005F66  B4D8               	btfsc	status,2,c
  6539   005F68  EFB8  F02F         	goto	u7091
  6540   005F6C  EFBA  F02F         	goto	u7090
  6541   005F70                     u7091:
  6542   005F70  EFAA  F02F         	goto	l6997
  6543   005F74                     u7090:
  6544   005F74  C013  FFF6         	movff	atoi@s,tblptrl
  6545   005F78  C014  FFF7         	movff	atoi@s+1,tblptrh
  6546   005F7C                     	if	0	;tblptru may be non-zero
  6547   005F7C                     	endif
  6548   005F7C                     	if	0	;tblptru may be non-zero
  6549   005F7C                     	endif
  6550   005F7C  0008               	tblrd		*
  6551   005F7E  CFF5 F015          	movff	tablat,??_atoi
  6552   005F82  0EF7               	movlw	247
  6553   005F84  2415               	addwf	??_atoi^0,w,c
  6554   005F86  6E16               	movwf	(??_atoi+1)^0,c
  6555   005F88  6A17               	clrf	(??_atoi+2)^0,c
  6556   005F8A  0EFF               	movlw	255
  6557   005F8C  2217               	addwfc	(??_atoi+2)^0,f,c
  6558   005F8E  5017               	movf	(??_atoi+2)^0,w,c
  6559   005F90  E109               	bnz	u7100
  6560   005F92  0E05               	movlw	5
  6561   005F94  5C16               	subwf	(??_atoi+1)^0,w,c
  6562   005F96  A0D8               	btfss	status,0,c
  6563   005F98  EFD0  F02F         	goto	u7101
  6564   005F9C  EFD2  F02F         	goto	u7100
  6565   005FA0                     u7101:
  6566   005FA0  EFAA  F02F         	goto	l6997
  6567   005FA4                     u7100:
  6568   005FA4  EFDC  F02F         	goto	l7009
  6569   005FA8                     l7005:
  6570   005FA8  0E00               	movlw	0
  6571   005FAA  6E19               	movwf	(atoi@neg+1)^0,c
  6572   005FAC  0E01               	movlw	1
  6573   005FAE  6E18               	movwf	atoi@neg^0,c
  6574   005FB0                     l7007:
  6575   005FB0  4A13               	infsnz	atoi@s^0,f,c
  6576   005FB2  2A14               	incf	(atoi@s+1)^0,f,c
  6577   005FB4  EF11  F030         	goto	l7017
  6578   005FB8                     l7009:
  6579   005FB8  C013  FFF6         	movff	atoi@s,tblptrl
  6580   005FBC  C014  FFF7         	movff	atoi@s+1,tblptrh
  6581   005FC0                     	if	0	;tblptru may be non-zero
  6582   005FC0                     	endif
  6583   005FC0                     	if	0	;tblptru may be non-zero
  6584   005FC0                     	endif
  6585   005FC0  0008               	tblrd		*
  6586   005FC2  50F5               	movf	tablat,w,c
  6587   005FC4  6E15               	movwf	??_atoi^0,c
  6588   005FC6  6A16               	clrf	(??_atoi+1)^0,c
  6589                           
  6590                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6591                           ; Switch size 1, requested type "simple"
  6592                           ; Number of cases is 1, Range of values is 0 to 0
  6593                           ; switch strategies available:
  6594                           ; Name         Instructions Cycles
  6595                           ; simple_byte            4     3 (average)
  6596                           ;	Chosen strategy is simple_byte
  6597   005FC8  5016               	movf	(??_atoi+1)^0,w,c
  6598   005FCA  0A00               	xorlw	0	; case 0
  6599   005FCC  B4D8               	btfsc	status,2,c
  6600   005FCE  EFEB  F02F         	goto	l8469
  6601   005FD2  EF11  F030         	goto	l7017
  6602   005FD6                     l8469:
  6603                           
  6604                           ; Switch size 1, requested type "simple"
  6605                           ; Number of cases is 2, Range of values is 43 to 45
  6606                           ; switch strategies available:
  6607                           ; Name         Instructions Cycles
  6608                           ; simple_byte            7     4 (average)
  6609                           ;	Chosen strategy is simple_byte
  6610   005FD6  5015               	movf	??_atoi^0,w,c
  6611   005FD8  0A2B               	xorlw	43	; case 43
  6612   005FDA  B4D8               	btfsc	status,2,c
  6613   005FDC  EFD8  F02F         	goto	l7007
  6614   005FE0  0A06               	xorlw	6	; case 45
  6615   005FE2  B4D8               	btfsc	status,2,c
  6616   005FE4  EFD4  F02F         	goto	l7005
  6617   005FE8  EF11  F030         	goto	l7017
  6618   005FEC                     l7011:
  6619   005FEC  C01A  F00D         	movff	atoi@n,___wmul@multiplier
  6620   005FF0  C01B  F00E         	movff	atoi@n+1,___wmul@multiplier+1
  6621   005FF4  0E00               	movlw	0
  6622   005FF6  6E10               	movwf	(___wmul@multiplicand+1)^0,c
  6623   005FF8  0E0A               	movlw	10
  6624   005FFA  6E0F               	movwf	___wmul@multiplicand^0,c
  6625   005FFC  ECF4  F036         	call	___wmul	;wreg free
  6626   006000  C013  FFF6         	movff	atoi@s,tblptrl
  6627   006004  C014  FFF7         	movff	atoi@s+1,tblptrh
  6628   006008                     	if	0	;tblptru may be non-zero
  6629   006008                     	endif
  6630   006008                     	if	0	;tblptru may be non-zero
  6631   006008                     	endif
  6632   006008  0008               	tblrd		*
  6633   00600A  50F5               	movf	tablat,w,c
  6634   00600C  5E0D               	subwf	?___wmul^0,f,c
  6635   00600E  0E00               	movlw	0
  6636   006010  5A0E               	subwfb	(?___wmul+1)^0,f,c
  6637   006012  0E30               	movlw	48
  6638   006014  240D               	addwf	?___wmul^0,w,c
  6639   006016  6E1A               	movwf	atoi@n^0,c
  6640   006018  0E00               	movlw	0
  6641   00601A  200E               	addwfc	(?___wmul+1)^0,w,c
  6642   00601C  6E1B               	movwf	(atoi@n+1)^0,c
  6643   00601E  EFD8  F02F         	goto	l7007
  6644   006022                     l7017:
  6645   006022  C013  FFF6         	movff	atoi@s,tblptrl
  6646   006026  C014  FFF7         	movff	atoi@s+1,tblptrh
  6647   00602A                     	if	0	;tblptru may be non-zero
  6648   00602A                     	endif
  6649   00602A                     	if	0	;tblptru may be non-zero
  6650   00602A                     	endif
  6651   00602A  0008               	tblrd		*
  6652   00602C  CFF5 F015          	movff	tablat,??_atoi
  6653   006030  0ED0               	movlw	208
  6654   006032  2415               	addwf	??_atoi^0,w,c
  6655   006034  6E16               	movwf	(??_atoi+1)^0,c
  6656   006036  6A17               	clrf	(??_atoi+2)^0,c
  6657   006038  0EFF               	movlw	255
  6658   00603A  2217               	addwfc	(??_atoi+2)^0,f,c
  6659   00603C  5017               	movf	(??_atoi+2)^0,w,c
  6660   00603E  E109               	bnz	u7110
  6661   006040  0E0A               	movlw	10
  6662   006042  5C16               	subwf	(??_atoi+1)^0,w,c
  6663   006044  A0D8               	btfss	status,0,c
  6664   006046  EF27  F030         	goto	u7111
  6665   00604A  EF29  F030         	goto	u7110
  6666   00604E                     u7111:
  6667   00604E  EFF6  F02F         	goto	l7011
  6668   006052                     u7110:
  6669   006052  5018               	movf	atoi@neg^0,w,c
  6670   006054  1019               	iorwf	(atoi@neg+1)^0,w,c
  6671   006056  A4D8               	btfss	status,2,c
  6672   006058  EF30  F030         	goto	u7121
  6673   00605C  EF32  F030         	goto	u7120
  6674   006060                     u7121:
  6675   006060  EF40  F030         	goto	l1248
  6676   006064                     u7120:
  6677   006064  C01A  F015         	movff	atoi@n,??_atoi
  6678   006068  C01B  F016         	movff	atoi@n+1,??_atoi+1
  6679   00606C  1E15               	comf	??_atoi^0,f,c
  6680   00606E  1E16               	comf	(??_atoi+1)^0,f,c
  6681   006070  4A15               	infsnz	??_atoi^0,f,c
  6682   006072  2A16               	incf	(??_atoi+1)^0,f,c
  6683   006074  C015  F013         	movff	??_atoi,?_atoi
  6684   006078  C016  F014         	movff	??_atoi+1,?_atoi+1
  6685   00607C  EF44  F030         	goto	l1251
  6686   006080                     l1248:
  6687   006080  C01A  F013         	movff	atoi@n,?_atoi
  6688   006084  C01B  F014         	movff	atoi@n+1,?_atoi+1
  6689   006088                     l1251:
  6690   006088  0012               	return		;funcret
  6691   00608A                     __end_of_atoi:
  6692                           	callstack 0
  6693                           
  6694 ;; *************** function _isspace *****************
  6695 ;; Defined at:
  6696 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  6697 ;; Parameters:    Size  Location     Type
  6698 ;;  c               2   12[COMRAM] int 
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;		None
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  2   12[COMRAM] int 
  6703 ;; Registers used:
  6704 ;;		wreg, status,2, status,0
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6710 ;;      Params:         2       0       0       0       0       0       0       0       0
  6711 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6712 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6713 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6714 ;;Total ram usage:        5 bytes
  6715 ;; Hardware stack levels used: 1
  6716 ;; Hardware stack levels required when called: 2
  6717 ;; This function calls:
  6718 ;;		Nothing
  6719 ;; This function is called by:
  6720 ;;		_atoi
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text17
  6725   006BBE                     __ptext17:
  6726                           	callstack 0
  6727   006BBE                     _isspace:
  6728                           	callstack 23
  6729   006BBE  0E01               	movlw	1
  6730   006BC0  6E11               	movwf	_isspace$1480^0,c
  6731   006BC2  0E20               	movlw	32
  6732   006BC4  180D               	xorwf	isspace@c^0,w,c
  6733   006BC6  100E               	iorwf	(isspace@c+1)^0,w,c
  6734   006BC8  B4D8               	btfsc	status,2,c
  6735   006BCA  EFE9  F035         	goto	u6751
  6736   006BCE  EFEB  F035         	goto	u6750
  6737   006BD2                     u6751:
  6738   006BD2  EFFE  F035         	goto	l6769
  6739   006BD6                     u6750:
  6740   006BD6  0EF7               	movlw	247
  6741   006BD8  240D               	addwf	isspace@c^0,w,c
  6742   006BDA  6E0F               	movwf	??_isspace^0,c
  6743   006BDC  0EFF               	movlw	255
  6744   006BDE  200E               	addwfc	(isspace@c+1)^0,w,c
  6745   006BE0  6E10               	movwf	(??_isspace+1)^0,c
  6746   006BE2  5010               	movf	(??_isspace+1)^0,w,c
  6747   006BE4  E109               	bnz	u6760
  6748   006BE6  0E05               	movlw	5
  6749   006BE8  5C0F               	subwf	??_isspace^0,w,c
  6750   006BEA  A0D8               	btfss	status,0,c
  6751   006BEC  EFFA  F035         	goto	u6761
  6752   006BF0  EFFC  F035         	goto	u6760
  6753   006BF4                     u6761:
  6754   006BF4  EFFE  F035         	goto	l6769
  6755   006BF8                     u6760:
  6756   006BF8  0E00               	movlw	0
  6757   006BFA  6E11               	movwf	_isspace$1480^0,c
  6758   006BFC                     l6769:
  6759   006BFC  C011  F00D         	movff	_isspace$1480,?_isspace
  6760   006C00  6A0E               	clrf	(?_isspace+1)^0,c
  6761   006C02  0012               	return		;funcret
  6762   006C04                     __end_of_isspace:
  6763                           	callstack 0
  6764                           
  6765 ;; *************** function _isdigit *****************
  6766 ;; Defined at:
  6767 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;  c               2   12[COMRAM] int 
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;		None
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  2   12[COMRAM] int 
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6781 ;;      Params:         2       0       0       0       0       0       0       0       0
  6782 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6783 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6784 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6785 ;;Total ram usage:        4 bytes
  6786 ;; Hardware stack levels used: 1
  6787 ;; Hardware stack levels required when called: 2
  6788 ;; This function calls:
  6789 ;;		Nothing
  6790 ;; This function is called by:
  6791 ;;		_vfpfcnvrt
  6792 ;;		_atoi
  6793 ;; This function uses a non-reentrant model
  6794 ;;
  6795                           
  6796                           	psect	text18
  6797   006DBC                     __ptext18:
  6798                           	callstack 0
  6799   006DBC                     _isdigit:
  6800                           	callstack 24
  6801   006DBC  0ED0               	movlw	208
  6802   006DBE  240D               	addwf	isdigit@c^0,w,c
  6803   006DC0  6E0F               	movwf	??_isdigit^0,c
  6804   006DC2  0EFF               	movlw	255
  6805   006DC4  200E               	addwfc	(isdigit@c+1)^0,w,c
  6806   006DC6  6E10               	movwf	(??_isdigit+1)^0,c
  6807   006DC8  5010               	movf	(??_isdigit+1)^0,w,c
  6808   006DCA  E10A               	bnz	u6730
  6809   006DCC  0E0A               	movlw	10
  6810   006DCE  5C0F               	subwf	??_isdigit^0,w,c
  6811   006DD0  A0D8               	btfss	status,0,c
  6812   006DD2  EFED  F036         	goto	u6731
  6813   006DD6  EFF0  F036         	goto	u6730
  6814   006DDA                     u6731:
  6815   006DDA  0E01               	movlw	1
  6816   006DDC  EFF1  F036         	goto	u6740
  6817   006DE0                     u6730:
  6818   006DE0  0E00               	movlw	0
  6819   006DE2                     u6740:
  6820   006DE2  6E0D               	movwf	?_isdigit^0,c
  6821   006DE4  6A0E               	clrf	(?_isdigit+1)^0,c
  6822   006DE6  0012               	return		;funcret
  6823   006DE8                     __end_of_isdigit:
  6824                           	callstack 0
  6825                           
  6826 ;; *************** function ___wmul *****************
  6827 ;; Defined at:
  6828 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;  multiplier      2   12[COMRAM] unsigned int 
  6831 ;;  multiplicand    2   14[COMRAM] unsigned int 
  6832 ;; Auto vars:     Size  Location     Type
  6833 ;;  product         2   16[COMRAM] unsigned int 
  6834 ;; Return value:  Size  Location     Type
  6835 ;;                  2   12[COMRAM] unsigned int 
  6836 ;; Registers used:
  6837 ;;		wreg, status,2, status,0, prodl, prodh
  6838 ;; Tracked objects:
  6839 ;;		On entry : 0/0
  6840 ;;		On exit  : 0/0
  6841 ;;		Unchanged: 0/0
  6842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6843 ;;      Params:         4       0       0       0       0       0       0       0       0
  6844 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6846 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6847 ;;Total ram usage:        6 bytes
  6848 ;; Hardware stack levels used: 1
  6849 ;; Hardware stack levels required when called: 2
  6850 ;; This function calls:
  6851 ;;		Nothing
  6852 ;; This function is called by:
  6853 ;;		_atoi
  6854 ;; This function uses a non-reentrant model
  6855 ;;
  6856                           
  6857                           	psect	text19
  6858   006DE8                     __ptext19:
  6859                           	callstack 0
  6860   006DE8                     ___wmul:
  6861                           	callstack 23
  6862   006DE8  500D               	movf	___wmul@multiplier^0,w,c
  6863   006DEA  020F               	mulwf	___wmul@multiplicand^0,c
  6864   006DEC  CFF3 F011          	movff	prodl,___wmul@product
  6865   006DF0  CFF4 F012          	movff	prodh,___wmul@product+1
  6866   006DF4  500D               	movf	___wmul@multiplier^0,w,c
  6867   006DF6  0210               	mulwf	(___wmul@multiplicand+1)^0,c
  6868   006DF8  50F3               	movf	243,w,c
  6869   006DFA  2612               	addwf	(___wmul@product+1)^0,f,c
  6870   006DFC  500E               	movf	(___wmul@multiplier+1)^0,w,c
  6871   006DFE  020F               	mulwf	___wmul@multiplicand^0,c
  6872   006E00  50F3               	movf	243,w,c
  6873   006E02  2612               	addwf	(___wmul@product+1)^0,f,c
  6874   006E04  C011  F00D         	movff	___wmul@product,?___wmul
  6875   006E08  C012  F00E         	movff	___wmul@product+1,?___wmul+1
  6876   006E0C  0012               	return		;funcret
  6877   006E0E                     __end_of___wmul:
  6878                           	callstack 0
  6879                           
  6880 ;; *************** function _regInit *****************
  6881 ;; Defined at:
  6882 ;;		line 103 in file "main.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;		None
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;  j               2   14[COMRAM] int 
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  1    wreg      void 
  6889 ;; Registers used:
  6890 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6896 ;;      Params:         0       0       0       0       0       0       0       0       0
  6897 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6898 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6899 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6900 ;;Total ram usage:        4 bytes
  6901 ;; Hardware stack levels used: 1
  6902 ;; Hardware stack levels required when called: 2
  6903 ;; This function calls:
  6904 ;;		Nothing
  6905 ;; This function is called by:
  6906 ;;		_main
  6907 ;;		_verifRes
  6908 ;; This function uses a non-reentrant model
  6909 ;;
  6910                           
  6911                           	psect	text20
  6912   006394                     __ptext20:
  6913                           	callstack 0
  6914   006394                     _regInit:
  6915                           	callstack 27
  6916   006394                     
  6917                           ;main.c: 104:     TRISB=0x0D;
  6918   006394  0E0D               	movlw	13
  6919   006396  6E93               	movwf	147,c	;volatile
  6920                           
  6921                           ;main.c: 105:     OSCCON = 0x00;
  6922   006398  0E00               	movlw	0
  6923   00639A  6ED3               	movwf	211,c	;volatile
  6924                           
  6925                           ;main.c: 106:     T0CON = 0b01001000;
  6926   00639C  0E48               	movlw	72
  6927   00639E  6ED5               	movwf	213,c	;volatile
  6928                           
  6929                           ;main.c: 107:     INTCON = 0b00100000;
  6930   0063A0  0E20               	movlw	32
  6931   0063A2  6EF2               	movwf	242,c	;volatile
  6932                           
  6933                           ;main.c: 108:     INTCON2 = 0b00000100;
  6934   0063A4  0E04               	movlw	4
  6935   0063A6  6EF1               	movwf	241,c	;volatile
  6936                           
  6937                           ;main.c: 109:     RCON = 0b10000000;
  6938   0063A8  0E80               	movlw	128
  6939   0063AA  6ED0               	movwf	208,c	;volatile
  6940                           
  6941                           ;main.c: 110:     PORTA = 0;
  6942   0063AC  0E00               	movlw	0
  6943   0063AE  6E80               	movwf	128,c	;volatile
  6944                           
  6945                           ;main.c: 111:     PORTB = 0;
  6946   0063B0  0E00               	movlw	0
  6947   0063B2  6E81               	movwf	129,c	;volatile
  6948                           
  6949                           ;main.c: 112:     PORTC = 0;
  6950   0063B4  0E00               	movlw	0
  6951   0063B6  6E82               	movwf	130,c	;volatile
  6952   0063B8                     
  6953                           ;main.c: 114:     INTCONbits.GIE = 0;
  6954   0063B8  9EF2               	bcf	242,7,c	;volatile
  6955   0063BA                     
  6956                           ;main.c: 116:     _delay((unsigned long)((5)*(16000000/4000.0)));
  6957   0063BA  0E1A               	movlw	26
  6958   0063BC  6E0D               	movwf	??_regInit^0,c
  6959   0063BE  0EF8               	movlw	248
  6960   0063C0                     u8247:
  6961   0063C0  2EE8               	decfsz	wreg,f,c
  6962   0063C2  D7FE               	bra	u8247
  6963   0063C4  2E0D               	decfsz	??_regInit^0,f,c
  6964   0063C6  D7FC               	bra	u8247
  6965   0063C8  D000               	nop2	
  6966   0063CA                     
  6967                           ;main.c: 121:     passo=0x05;
  6968   0063CA  0E05               	movlw	5
  6969   0063CC  0101               	movlb	1	; () banked
  6970   0063CE  6F76               	movwf	_passo& (0+255),b
  6971   0063D0                     
  6972                           ; BSR set to: 1
  6973                           ;main.c: 122:     pot_value=0x1E;
  6974   0063D0  0E1E               	movlw	30
  6975   0063D2  6F75               	movwf	_pot_value& (0+255),b
  6976   0063D4                     
  6977                           ; BSR set to: 1
  6978                           ;main.c: 127:     v=0;
  6979   0063D4  0E00               	movlw	0
  6980   0063D6  6F73               	movwf	(_v+1)& (0+255),b
  6981   0063D8  0E00               	movlw	0
  6982   0063DA  6F72               	movwf	_v& (0+255),b
  6983   0063DC                     
  6984                           ; BSR set to: 1
  6985                           ;main.c: 128:     e=0;
  6986   0063DC  0E00               	movlw	0
  6987   0063DE  6F71               	movwf	(_e+1)& (0+255),b
  6988   0063E0  0E00               	movlw	0
  6989   0063E2  6F70               	movwf	_e& (0+255),b
  6990   0063E4                     
  6991                           ; BSR set to: 1
  6992                           ;main.c: 129:     for(int j=0;j<20;j++){
  6993   0063E4  0E00               	movlw	0
  6994   0063E6  6E10               	movwf	(regInit@j+1)^0,c
  6995   0063E8  0E00               	movlw	0
  6996   0063EA  6E0F               	movwf	regInit@j^0,c
  6997   0063EC                     l7293:
  6998                           
  6999                           ;main.c: 130:         D2[j]=0;
  7000   0063EC  0E00               	movlw	low _D2
  7001   0063EE  6E0D               	movwf	??_regInit^0,c
  7002   0063F0  0E01               	movlw	high _D2
  7003   0063F2  6E0E               	movwf	(??_regInit+1)^0,c
  7004   0063F4  90D8               	bcf	status,0,c
  7005   0063F6  340F               	rlcf	regInit@j^0,w,c
  7006   0063F8  6ED9               	movwf	fsr2l,c
  7007   0063FA  3410               	rlcf	(regInit@j+1)^0,w,c
  7008   0063FC  6EDA               	movwf	fsr2h,c
  7009   0063FE  90D8               	bcf	status,0,c
  7010   006400  36D9               	rlcf	fsr2l,f,c
  7011   006402  36DA               	rlcf	fsr2h,f,c
  7012   006404  500D               	movf	??_regInit^0,w,c
  7013   006406  26D9               	addwf	fsr2l,f,c
  7014   006408  500E               	movf	(??_regInit+1)^0,w,c
  7015   00640A  22DA               	addwfc	fsr2h,f,c
  7016   00640C  0E00               	movlw	0
  7017   00640E  6EDE               	movwf	postinc2,c
  7018   006410  0E00               	movlw	0
  7019   006412  6EDE               	movwf	postinc2,c
  7020   006414  0E00               	movlw	0
  7021   006416  6EDE               	movwf	postinc2,c
  7022   006418  0E00               	movlw	0
  7023   00641A  6EDD               	movwf	postdec2,c
  7024                           
  7025                           ;main.c: 131:         voltage[j]=0;
  7026   00641C  0E00               	movlw	low _voltage
  7027   00641E  6E0D               	movwf	??_regInit^0,c
  7028   006420  0E03               	movlw	high _voltage
  7029   006422  6E0E               	movwf	(??_regInit+1)^0,c
  7030   006424  90D8               	bcf	status,0,c
  7031   006426  340F               	rlcf	regInit@j^0,w,c
  7032   006428  6ED9               	movwf	fsr2l,c
  7033   00642A  3410               	rlcf	(regInit@j+1)^0,w,c
  7034   00642C  6EDA               	movwf	fsr2h,c
  7035   00642E  90D8               	bcf	status,0,c
  7036   006430  36D9               	rlcf	fsr2l,f,c
  7037   006432  36DA               	rlcf	fsr2h,f,c
  7038   006434  500D               	movf	??_regInit^0,w,c
  7039   006436  26D9               	addwf	fsr2l,f,c
  7040   006438  500E               	movf	(??_regInit+1)^0,w,c
  7041   00643A  22DA               	addwfc	fsr2h,f,c
  7042   00643C  0E00               	movlw	0
  7043   00643E  6EDE               	movwf	postinc2,c
  7044   006440  0E00               	movlw	0
  7045   006442  6EDE               	movwf	postinc2,c
  7046   006444  0E00               	movlw	0
  7047   006446  6EDE               	movwf	postinc2,c
  7048   006448  0E00               	movlw	0
  7049   00644A  6EDD               	movwf	postdec2,c
  7050   00644C                     
  7051                           ;main.c: 132:     }
  7052   00644C  4A0F               	infsnz	regInit@j^0,f,c
  7053   00644E  2A10               	incf	(regInit@j+1)^0,f,c
  7054   006450  BE10               	btfsc	(regInit@j+1)^0,7,c
  7055   006452  EF34  F032         	goto	u7361
  7056   006456  5010               	movf	(regInit@j+1)^0,w,c
  7057   006458  E109               	bnz	u7360
  7058   00645A  0E14               	movlw	20
  7059   00645C  5C0F               	subwf	regInit@j^0,w,c
  7060   00645E  A0D8               	btfss	status,0,c
  7061   006460  EF34  F032         	goto	u7361
  7062   006464  EF36  F032         	goto	u7360
  7063   006468                     u7361:
  7064   006468  EFF6  F031         	goto	l7293
  7065   00646C                     u7360:
  7066   00646C                     
  7067                           ;main.c: 133:     aux_D2=0;
  7068   00646C  0E00               	movlw	0
  7069   00646E  0101               	movlb	1	; () banked
  7070   006470  6F68               	movwf	_aux_D2& (0+255),b
  7071   006472  0E00               	movlw	0
  7072   006474  6F69               	movwf	(_aux_D2+1)& (0+255),b
  7073   006476  0E00               	movlw	0
  7074   006478  6F6A               	movwf	(_aux_D2+2)& (0+255),b
  7075   00647A  0E00               	movlw	0
  7076   00647C  6F6B               	movwf	(_aux_D2+3)& (0+255),b
  7077                           
  7078                           ;main.c: 134:     aux_Voff=0;
  7079   00647E  0E00               	movlw	0
  7080   006480  6F6C               	movwf	_aux_Voff& (0+255),b
  7081   006482  0E00               	movlw	0
  7082   006484  6F6D               	movwf	(_aux_Voff+1)& (0+255),b
  7083   006486  0E00               	movlw	0
  7084   006488  6F6E               	movwf	(_aux_Voff+2)& (0+255),b
  7085   00648A  0E00               	movlw	0
  7086   00648C  6F6F               	movwf	(_aux_Voff+3)& (0+255),b
  7087   00648E                     
  7088                           ; BSR set to: 1
  7089   00648E  0012               	return		;funcret
  7090   006490                     __end_of_regInit:
  7091                           	callstack 0
  7092                           
  7093 ;; *************** function _LCDPutStr *****************
  7094 ;; Defined at:
  7095 ;;		line 386 in file "main.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;  str             2   17[COMRAM] PTR const unsigned char 
  7098 ;;		 -> STR_6(4), info2(10), info(10), STR_1(13), 
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;  i               1   21[COMRAM] unsigned char 
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  1    wreg      void 
  7103 ;; Registers used:
  7104 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7110 ;;      Params:         2       0       0       0       0       0       0       0       0
  7111 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7112 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7113 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7114 ;;Total ram usage:        5 bytes
  7115 ;; Hardware stack levels used: 1
  7116 ;; Hardware stack levels required when called: 4
  7117 ;; This function calls:
  7118 ;;		_LCDPutChar
  7119 ;; This function is called by:
  7120 ;;		_main
  7121 ;;		_verifRes
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text21
  7126   00685E                     __ptext21:
  7127                           	callstack 0
  7128   00685E                     _LCDPutStr:
  7129                           	callstack 25
  7130   00685E                     
  7131                           ;main.c: 386: void LCDPutStr(const char *str);main.c: 387: {;main.c: 388:     char i=0;
  7132   00685E  0E00               	movlw	0
  7133   006860  6E16               	movwf	LCDPutStr@i^0,c
  7134                           
  7135                           ;main.c: 391:     while (str[i])
  7136   006862  EF4D  F034         	goto	l7307
  7137   006866                     l7303:
  7138                           
  7139                           ;main.c: 392:         {;main.c: 394:         LCDPutChar(str[i]);
  7140   006866  5016               	movf	LCDPutStr@i^0,w,c
  7141   006868  2412               	addwf	LCDPutStr@str^0,w,c
  7142   00686A  6E14               	movwf	??_LCDPutStr^0,c
  7143   00686C  0E00               	movlw	0
  7144   00686E  2013               	addwfc	(LCDPutStr@str+1)^0,w,c
  7145   006870  6E15               	movwf	(??_LCDPutStr+1)^0,c
  7146   006872  C014  FFF6         	movff	??_LCDPutStr,tblptrl
  7147   006876  C015  FFF7         	movff	??_LCDPutStr+1,tblptrh
  7148   00687A  6AF8               	clrf	tblptru,c
  7149   00687C  0E07               	movlw	(high __ramtop+-1)
  7150   00687E  64F7               	cpfsgt	tblptrh,c
  7151   006880  D003               	bra	u7377
  7152   006882  0008               	tblrd		*
  7153   006884  50F5               	movf	tablat,w,c
  7154   006886  D005               	bra	u7370
  7155   006888                     u7377:
  7156   006888  CFF6 FFE1          	movff	tblptrl,fsr1l
  7157   00688C  CFF7 FFE2          	movff	tblptrh,fsr1h
  7158   006890  50E7               	movf	indf1,w,c
  7159   006892                     u7370:
  7160   006892  ECB0  F036         	call	_LCDPutChar
  7161   006896                     
  7162                           ;main.c: 395:         i=i+1;
  7163   006896  2816               	incf	LCDPutStr@i^0,w,c
  7164   006898  6E16               	movwf	LCDPutStr@i^0,c
  7165   00689A                     l7307:
  7166                           
  7167                           ;main.c: 391:     while (str[i])
  7168   00689A  5016               	movf	LCDPutStr@i^0,w,c
  7169   00689C  2412               	addwf	LCDPutStr@str^0,w,c
  7170   00689E  6E14               	movwf	??_LCDPutStr^0,c
  7171   0068A0  0E00               	movlw	0
  7172   0068A2  2013               	addwfc	(LCDPutStr@str+1)^0,w,c
  7173   0068A4  6E15               	movwf	(??_LCDPutStr+1)^0,c
  7174   0068A6  C014  FFF6         	movff	??_LCDPutStr,tblptrl
  7175   0068AA  C015  FFF7         	movff	??_LCDPutStr+1,tblptrh
  7176   0068AE  6AF8               	clrf	tblptru,c
  7177   0068B0  0E07               	movlw	(high __ramtop+-1)
  7178   0068B2  64F7               	cpfsgt	tblptrh,c
  7179   0068B4  D003               	bra	u7387
  7180   0068B6  0008               	tblrd		*
  7181   0068B8  50F5               	movf	tablat,w,c
  7182   0068BA  D005               	bra	u7380
  7183   0068BC                     u7387:
  7184   0068BC  CFF6 FFE1          	movff	tblptrl,fsr1l
  7185   0068C0  CFF7 FFE2          	movff	tblptrh,fsr1h
  7186   0068C4  50E7               	movf	indf1,w,c
  7187   0068C6                     u7380:
  7188   0068C6  0900               	iorlw	0
  7189   0068C8  A4D8               	btfss	status,2,c
  7190   0068CA  EF69  F034         	goto	u7391
  7191   0068CE  EF6B  F034         	goto	u7390
  7192   0068D2                     u7391:
  7193   0068D2  EF33  F034         	goto	l7303
  7194   0068D6                     u7390:
  7195   0068D6  0012               	return		;funcret
  7196   0068D8                     __end_of_LCDPutStr:
  7197                           	callstack 0
  7198                           
  7199 ;; *************** function _LCDPutChar *****************
  7200 ;; Defined at:
  7201 ;;		line 358 in file "main.c"
  7202 ;; Parameters:    Size  Location     Type
  7203 ;;  ch              1    wreg     unsigned char 
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;  ch              1   16[COMRAM] unsigned char 
  7206 ;; Return value:  Size  Location     Type
  7207 ;;                  1    wreg      void 
  7208 ;; Registers used:
  7209 ;;		wreg, status,2, status,0, cstack
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7215 ;;      Params:         0       0       0       0       0       0       0       0       0
  7216 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7217 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7218 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7219 ;;Total ram usage:        2 bytes
  7220 ;; Hardware stack levels used: 1
  7221 ;; Hardware stack levels required when called: 3
  7222 ;; This function calls:
  7223 ;;		_LCDWriteNibble
  7224 ;; This function is called by:
  7225 ;;		_LCDPutStr
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229                           	psect	text22
  7230   006D60                     __ptext22:
  7231                           	callstack 0
  7232   006D60                     _LCDPutChar:
  7233                           	callstack 25
  7234                           
  7235                           ;incstack = 0
  7236                           ;LCDPutChar@ch stored from wreg
  7237   006D60  6E11               	movwf	LCDPutChar@ch^0,c
  7238   006D62                     
  7239                           ;main.c: 358: void LCDPutChar(char ch);main.c: 359: {;main.c: 360:     _delay((unsigned 
      +                          long)((5)*(16000000/4000.0)));
  7240   006D62  0E1A               	movlw	26
  7241   006D64  6E10               	movwf	??_LCDPutChar^0,c
  7242   006D66  0EF8               	movlw	248
  7243   006D68                     u8257:
  7244   006D68  2EE8               	decfsz	wreg,f,c
  7245   006D6A  D7FE               	bra	u8257
  7246   006D6C  2E10               	decfsz	??_LCDPutChar^0,f,c
  7247   006D6E  D7FC               	bra	u8257
  7248   006D70  D000               	nop2	
  7249   006D72                     
  7250                           ;main.c: 363:     LCDWriteNibble(ch,1);
  7251   006D72  0E01               	movlw	1
  7252   006D74  6E0D               	movwf	LCDWriteNibble@rs^0,c
  7253   006D76  5011               	movf	LCDPutChar@ch^0,w,c
  7254   006D78  EC44  F036         	call	_LCDWriteNibble
  7255   006D7C                     
  7256                           ;main.c: 366:     ch = (ch << 4);
  7257   006D7C  3811               	swapf	LCDPutChar@ch^0,w,c
  7258   006D7E  0BF0               	andlw	240
  7259   006D80  6E11               	movwf	LCDPutChar@ch^0,c
  7260   006D82                     
  7261                           ;main.c: 369:     LCDWriteNibble(ch,1);
  7262   006D82  0E01               	movlw	1
  7263   006D84  6E0D               	movwf	LCDWriteNibble@rs^0,c
  7264   006D86  5011               	movf	LCDPutChar@ch^0,w,c
  7265   006D88  EC44  F036         	call	_LCDWriteNibble
  7266   006D8C  0012               	return		;funcret
  7267   006D8E                     __end_of_LCDPutChar:
  7268                           	callstack 0
  7269                           
  7270 ;; *************** function _LCDGoto *****************
  7271 ;; Defined at:
  7272 ;;		line 314 in file "main.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;  pos             1    wreg     unsigned char 
  7275 ;;  ln              1   17[COMRAM] unsigned char 
  7276 ;; Auto vars:     Size  Location     Type
  7277 ;;  pos             1   22[COMRAM] unsigned char 
  7278 ;; Return value:  Size  Location     Type
  7279 ;;                  1    wreg      void 
  7280 ;; Registers used:
  7281 ;;		wreg, status,2, status,0, cstack
  7282 ;; Tracked objects:
  7283 ;;		On entry : 0/0
  7284 ;;		On exit  : 0/0
  7285 ;;		Unchanged: 0/0
  7286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7287 ;;      Params:         1       0       0       0       0       0       0       0       0
  7288 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7289 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7290 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7291 ;;Total ram usage:        6 bytes
  7292 ;; Hardware stack levels used: 1
  7293 ;; Hardware stack levels required when called: 4
  7294 ;; This function calls:
  7295 ;;		_LCDPutCmd
  7296 ;; This function is called by:
  7297 ;;		_verifRes
  7298 ;; This function uses a non-reentrant model
  7299 ;;
  7300                           
  7301                           	psect	text23
  7302   00694A                     __ptext23:
  7303                           	callstack 0
  7304   00694A                     _LCDGoto:
  7305                           	callstack 25
  7306                           
  7307                           ;incstack = 0
  7308                           ;LCDGoto@pos stored from wreg
  7309   00694A  6E17               	movwf	LCDGoto@pos^0,c
  7310   00694C                     
  7311                           ;main.c: 314: void LCDGoto(char pos,char ln);main.c: 315: {;main.c: 317:     if ((ln > (
      +                          2 -1)) || (pos > (16 -1))){
  7312   00694C  0E02               	movlw	2
  7313   00694E  6012               	cpfslt	LCDGoto@ln^0,c
  7314   006950  EFAC  F034         	goto	u7491
  7315   006954  EFAE  F034         	goto	u7490
  7316   006958                     u7491:
  7317   006958  EFDD  F034         	goto	l252
  7318   00695C                     u7490:
  7319   00695C  0E0F               	movlw	15
  7320   00695E  6417               	cpfsgt	LCDGoto@pos^0,c
  7321   006960  EFB4  F034         	goto	u7501
  7322   006964  EFB6  F034         	goto	u7500
  7323   006968                     u7501:
  7324   006968  EFB8  F034         	goto	l7415
  7325   00696C                     u7500:
  7326   00696C  EFDD  F034         	goto	l252
  7327   006970                     l7415:
  7328                           
  7329                           ;main.c: 321:     LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  7330   006970  0412               	decf	LCDGoto@ln^0,w,c
  7331   006972  B4D8               	btfsc	status,2,c
  7332   006974  EFBE  F034         	goto	u7511
  7333   006978  EFC0  F034         	goto	u7510
  7334   00697C                     u7511:
  7335   00697C  EFCA  F034         	goto	l7419
  7336   006980                     u7510:
  7337   006980  0E80               	movlw	128
  7338   006982  C017  F013         	movff	LCDGoto@pos,??_LCDGoto
  7339   006986  6A14               	clrf	(??_LCDGoto+1)^0,c
  7340   006988  1013               	iorwf	??_LCDGoto^0,w,c
  7341   00698A  6E15               	movwf	_LCDGoto$659^0,c
  7342   00698C  5014               	movf	(??_LCDGoto+1)^0,w,c
  7343   00698E  6E16               	movwf	(_LCDGoto$659+1)^0,c
  7344   006990  EFD2  F034         	goto	l7421
  7345   006994                     l7419:
  7346   006994  0EC0               	movlw	192
  7347   006996  C017  F013         	movff	LCDGoto@pos,??_LCDGoto
  7348   00699A  6A14               	clrf	(??_LCDGoto+1)^0,c
  7349   00699C  1013               	iorwf	??_LCDGoto^0,w,c
  7350   00699E  6E15               	movwf	_LCDGoto$659^0,c
  7351   0069A0  5014               	movf	(??_LCDGoto+1)^0,w,c
  7352   0069A2  6E16               	movwf	(_LCDGoto$659+1)^0,c
  7353   0069A4                     l7421:
  7354   0069A4  5015               	movf	_LCDGoto$659^0,w,c
  7355   0069A6  ECC7  F036         	call	_LCDPutCmd
  7356   0069AA                     
  7357                           ;main.c: 323:     _delay((unsigned long)((5)*(16000000/4000.0)));
  7358   0069AA  0E1A               	movlw	26
  7359   0069AC  6E13               	movwf	??_LCDGoto^0,c
  7360   0069AE  0EF8               	movlw	248
  7361   0069B0                     u8267:
  7362   0069B0  2EE8               	decfsz	wreg,f,c
  7363   0069B2  D7FE               	bra	u8267
  7364   0069B4  2E13               	decfsz	??_LCDGoto^0,f,c
  7365   0069B6  D7FC               	bra	u8267
  7366   0069B8  D000               	nop2	
  7367   0069BA                     l252:
  7368   0069BA  0012               	return		;funcret
  7369   0069BC                     __end_of_LCDGoto:
  7370                           	callstack 0
  7371                           
  7372 ;; *************** function _sqrtf *****************
  7373 ;; Defined at:
  7374 ;;		line 22 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sqrtf.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;  x               4    0[BANK0 ] float 
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;  ix              4   41[BANK0 ] long 
  7379 ;;  r               4   37[BANK0 ] unsigned long 
  7380 ;;  m               4   33[BANK0 ] long 
  7381 ;;  z               4   29[BANK0 ] float 
  7382 ;;  t               4   25[BANK0 ] long 
  7383 ;;  q               4   21[BANK0 ] long 
  7384 ;;  __xc8_float_    4   17[BANK0 ] struct .
  7385 ;;  i               4   13[BANK0 ] long 
  7386 ;;  s               4    9[BANK0 ] long 
  7387 ;;  sign            4    0        long 
  7388 ;; Return value:  Size  Location     Type
  7389 ;;                  4    0[BANK0 ] float 
  7390 ;; Registers used:
  7391 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7392 ;; Tracked objects:
  7393 ;;		On entry : 0/0
  7394 ;;		On exit  : 0/0
  7395 ;;		Unchanged: 0/0
  7396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7397 ;;      Params:         0       4       0       0       0       0       0       0       0
  7398 ;;      Locals:         0      36       0       0       0       0       0       0       0
  7399 ;;      Temps:          0       5       0       0       0       0       0       0       0
  7400 ;;      Totals:         0      45       0       0       0       0       0       0       0
  7401 ;;Total ram usage:       45 bytes
  7402 ;; Hardware stack levels used: 1
  7403 ;; Hardware stack levels required when called: 3
  7404 ;; This function calls:
  7405 ;;		___fladd
  7406 ;;		___flge
  7407 ;;		___flmul
  7408 ;;		_nanf
  7409 ;; This function is called by:
  7410 ;;		_main
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           	psect	text24
  7415   0036F0                     __ptext24:
  7416                           	callstack 0
  7417   0036F0                     _sqrtf:
  7418                           	callstack 27
  7419   0036F0  C060  F071         	movff	sqrtf@x,sqrtf@__xc8_float_word
  7420   0036F4  C061  F072         	movff	sqrtf@x+1,sqrtf@__xc8_float_word+1
  7421   0036F8  C062  F073         	movff	sqrtf@x+2,sqrtf@__xc8_float_word+2
  7422   0036FC  C063  F074         	movff	sqrtf@x+3,sqrtf@__xc8_float_word+3
  7423   003700  C071  F089         	movff	sqrtf@__xc8_float_word,sqrtf@ix
  7424   003704  C072  F08A         	movff	sqrtf@__xc8_float_word+1,sqrtf@ix+1
  7425   003708  C073  F08B         	movff	sqrtf@__xc8_float_word+2,sqrtf@ix+2
  7426   00370C  C074  F08C         	movff	sqrtf@__xc8_float_word+3,sqrtf@ix+3
  7427   003710  0E00               	movlw	0
  7428   003712  0100               	movlb	0	; () banked
  7429   003714  1589               	andwf	sqrtf@ix& (0+255),w,b
  7430   003716  6F64               	movwf	??_sqrtf& (0+255),b
  7431   003718  0E00               	movlw	0
  7432   00371A  158A               	andwf	(sqrtf@ix+1)& (0+255),w,b
  7433   00371C  6F65               	movwf	(??_sqrtf+1)& (0+255),b
  7434   00371E  0E80               	movlw	128
  7435   003720  158B               	andwf	(sqrtf@ix+2)& (0+255),w,b
  7436   003722  6F66               	movwf	(??_sqrtf+2)& (0+255),b
  7437   003724  0E7F               	movlw	127
  7438   003726  158C               	andwf	(sqrtf@ix+3)& (0+255),w,b
  7439   003728  6F67               	movwf	(??_sqrtf+3)& (0+255),b
  7440   00372A  0E80               	movlw	128
  7441   00372C  1966               	xorwf	(??_sqrtf+2)& (0+255),w,b
  7442   00372E  E109               	bnz	u7931
  7443   003730  0E7F               	movlw	127
  7444   003732  1967               	xorwf	(??_sqrtf+3)& (0+255),w,b
  7445   003734  1164               	iorwf	??_sqrtf& (0+255),w,b
  7446   003736  1165               	iorwf	(??_sqrtf+1)& (0+255),w,b
  7447   003738  A4D8               	btfss	status,2,c
  7448   00373A  EFA1  F01B         	goto	u7931
  7449   00373E  EFA3  F01B         	goto	u7930
  7450   003742                     u7931:
  7451   003742  EFD1  F01B         	goto	l7887
  7452   003746                     u7930:
  7453   003746                     
  7454                           ; BSR set to: 0
  7455   003746  C060  F01F         	movff	sqrtf@x,___flmul@a
  7456   00374A  C061  F020         	movff	sqrtf@x+1,___flmul@a+1
  7457   00374E  C062  F021         	movff	sqrtf@x+2,___flmul@a+2
  7458   003752  C063  F022         	movff	sqrtf@x+3,___flmul@a+3
  7459   003756  C060  F01B         	movff	sqrtf@x,___flmul@b
  7460   00375A  C061  F01C         	movff	sqrtf@x+1,___flmul@b+1
  7461   00375E  C062  F01D         	movff	sqrtf@x+2,___flmul@b+2
  7462   003762  C063  F01E         	movff	sqrtf@x+3,___flmul@b+3
  7463   003766  EC80  F022         	call	___flmul	;wreg free
  7464   00376A  C01B  F034         	movff	?___flmul,___fladd@b
  7465   00376E  C01C  F035         	movff	?___flmul+1,___fladd@b+1
  7466   003772  C01D  F036         	movff	?___flmul+2,___fladd@b+2
  7467   003776  C01E  F037         	movff	?___flmul+3,___fladd@b+3
  7468   00377A  C060  F038         	movff	sqrtf@x,___fladd@a
  7469   00377E  C061  F039         	movff	sqrtf@x+1,___fladd@a+1
  7470   003782  C062  F03A         	movff	sqrtf@x+2,___fladd@a+2
  7471   003786  C063  F03B         	movff	sqrtf@x+3,___fladd@a+3
  7472   00378A  ECD8  F01D         	call	___fladd	;wreg free
  7473   00378E  C034  F060         	movff	?___fladd,?_sqrtf
  7474   003792  C035  F061         	movff	?___fladd+1,?_sqrtf+1
  7475   003796  C036  F062         	movff	?___fladd+2,?_sqrtf+2
  7476   00379A  C037  F063         	movff	?___fladd+3,?_sqrtf+3
  7477   00379E  EFD7  F01D         	goto	l1370
  7478   0037A2                     l7887:
  7479                           
  7480                           ; BSR set to: 0
  7481   0037A2  BF8C               	btfsc	(sqrtf@ix+3)& (0+255),7,b
  7482   0037A4  EFE0  F01B         	goto	u7940
  7483   0037A8  518C               	movf	(sqrtf@ix+3)& (0+255),w,b
  7484   0037AA  118B               	iorwf	(sqrtf@ix+2)& (0+255),w,b
  7485   0037AC  118A               	iorwf	(sqrtf@ix+1)& (0+255),w,b
  7486   0037AE  E106               	bnz	u7941
  7487   0037B0  0589               	decf	sqrtf@ix& (0+255),w,b
  7488   0037B2  B0D8               	btfsc	status,0,c
  7489   0037B4  EFDE  F01B         	goto	u7941
  7490   0037B8  EFE0  F01B         	goto	u7940
  7491   0037BC                     u7941:
  7492   0037BC  EF1C  F01C         	goto	l7901
  7493   0037C0                     u7940:
  7494   0037C0                     
  7495                           ; BSR set to: 0
  7496   0037C0  0EFF               	movlw	255
  7497   0037C2  1589               	andwf	sqrtf@ix& (0+255),w,b
  7498   0037C4  6F64               	movwf	??_sqrtf& (0+255),b
  7499   0037C6  0EFF               	movlw	255
  7500   0037C8  158A               	andwf	(sqrtf@ix+1)& (0+255),w,b
  7501   0037CA  6F65               	movwf	(??_sqrtf+1)& (0+255),b
  7502   0037CC  0EFF               	movlw	255
  7503   0037CE  158B               	andwf	(sqrtf@ix+2)& (0+255),w,b
  7504   0037D0  6F66               	movwf	(??_sqrtf+2)& (0+255),b
  7505   0037D2  0E7F               	movlw	127
  7506   0037D4  158C               	andwf	(sqrtf@ix+3)& (0+255),w,b
  7507   0037D6  6F67               	movwf	(??_sqrtf+3)& (0+255),b
  7508   0037D8  5164               	movf	??_sqrtf& (0+255),w,b
  7509   0037DA  1165               	iorwf	(??_sqrtf+1)& (0+255),w,b
  7510   0037DC  1166               	iorwf	(??_sqrtf+2)& (0+255),w,b
  7511   0037DE  1167               	iorwf	(??_sqrtf+3)& (0+255),w,b
  7512   0037E0  A4D8               	btfss	status,2,c
  7513   0037E2  EFF5  F01B         	goto	u7951
  7514   0037E6  EFF7  F01B         	goto	u7950
  7515   0037EA                     u7951:
  7516   0037EA  EF01  F01C         	goto	l7893
  7517   0037EE                     u7950:
  7518   0037EE                     
  7519                           ; BSR set to: 0
  7520   0037EE  C060  F060         	movff	sqrtf@x,?_sqrtf
  7521   0037F2  C061  F061         	movff	sqrtf@x+1,?_sqrtf+1
  7522   0037F6  C062  F062         	movff	sqrtf@x+2,?_sqrtf+2
  7523   0037FA  C063  F063         	movff	sqrtf@x+3,?_sqrtf+3
  7524   0037FE  EFD7  F01D         	goto	l1370
  7525   003802                     l7893:
  7526                           
  7527                           ; BSR set to: 0
  7528   003802  BF8C               	btfsc	(sqrtf@ix+3)& (0+255),7,b
  7529   003804  EF08  F01C         	goto	u7960
  7530   003808  EF06  F01C         	goto	u7961
  7531   00380C                     u7961:
  7532   00380C  EF1C  F01C         	goto	l7901
  7533   003810                     u7960:
  7534   003810                     
  7535                           ; BSR set to: 0
  7536   003810  0E00               	movlw	0
  7537   003812  6E4F               	movwf	(_errno+1)^0,c
  7538   003814  0E21               	movlw	33
  7539   003816  6E4E               	movwf	_errno^0,c
  7540   003818                     
  7541                           ; BSR set to: 0
  7542   003818  0E9B               	movlw	low (STR_1+12)
  7543   00381A  6E0D               	movwf	nanf@s^0,c
  7544   00381C  0E08               	movlw	high (STR_1+12)
  7545   00381E  6E0E               	movwf	(nanf@s+1)^0,c
  7546   003820  EC07  F037         	call	_nanf	;wreg free
  7547   003824  C00D  F060         	movff	?_nanf,?_sqrtf
  7548   003828  C00E  F061         	movff	?_nanf+1,?_sqrtf+1
  7549   00382C  C00F  F062         	movff	?_nanf+2,?_sqrtf+2
  7550   003830  C010  F063         	movff	?_nanf+3,?_sqrtf+3
  7551   003834  EFD7  F01D         	goto	l1370
  7552   003838                     l7901:
  7553                           
  7554                           ; BSR set to: 0
  7555   003838  0E17               	movlw	23
  7556   00383A  6F64               	movwf	??_sqrtf& (0+255),b
  7557   00383C  C089  F065         	movff	sqrtf@ix,??_sqrtf+1
  7558   003840  C08A  F066         	movff	sqrtf@ix+1,??_sqrtf+2
  7559   003844  C08B  F067         	movff	sqrtf@ix+2,??_sqrtf+3
  7560   003848  C08C  F068         	movff	sqrtf@ix+3,??_sqrtf+4
  7561   00384C                     u7975:
  7562   00384C  6764               	tstfsz	??_sqrtf& (0+255),b
  7563   00384E  EF2B  F01C         	goto	u7976
  7564   003852  EF33  F01C         	goto	u7977
  7565   003856                     u7976:
  7566   003856  3568               	rlcf	(??_sqrtf+4)& (0+255),w,b
  7567   003858  3368               	rrcf	(??_sqrtf+4)& (0+255),f,b
  7568   00385A  3367               	rrcf	(??_sqrtf+3)& (0+255),f,b
  7569   00385C  3366               	rrcf	(??_sqrtf+2)& (0+255),f,b
  7570   00385E  3365               	rrcf	(??_sqrtf+1)& (0+255),f,b
  7571   003860  2F64               	decfsz	??_sqrtf& (0+255),f,b
  7572   003862  EF26  F01C         	goto	u7975
  7573   003866                     u7977:
  7574   003866  C065  F081         	movff	??_sqrtf+1,sqrtf@m
  7575   00386A  C066  F082         	movff	??_sqrtf+2,sqrtf@m+1
  7576   00386E  C067  F083         	movff	??_sqrtf+3,sqrtf@m+2
  7577   003872  C068  F084         	movff	??_sqrtf+4,sqrtf@m+3
  7578   003876  0100               	movlb	0	; () banked
  7579   003878  5181               	movf	sqrtf@m& (0+255),w,b
  7580   00387A  1182               	iorwf	(sqrtf@m+1)& (0+255),w,b
  7581   00387C  1183               	iorwf	(sqrtf@m+2)& (0+255),w,b
  7582   00387E  1184               	iorwf	(sqrtf@m+3)& (0+255),w,b
  7583   003880  A4D8               	btfss	status,2,c
  7584   003882  EF45  F01C         	goto	u7981
  7585   003886  EF47  F01C         	goto	u7980
  7586   00388A                     u7981:
  7587   00388A  EF77  F01C         	goto	l1374
  7588   00388E                     u7980:
  7589   00388E                     
  7590                           ; BSR set to: 0
  7591   00388E  0E00               	movlw	0
  7592   003890  6F6D               	movwf	sqrtf@i& (0+255),b
  7593   003892  0E00               	movlw	0
  7594   003894  6F6E               	movwf	(sqrtf@i+1)& (0+255),b
  7595   003896  0E00               	movlw	0
  7596   003898  6F6F               	movwf	(sqrtf@i+2)& (0+255),b
  7597   00389A  0E00               	movlw	0
  7598   00389C  6F70               	movwf	(sqrtf@i+3)& (0+255),b
  7599   00389E  EF5C  F01C         	goto	l7909
  7600   0038A2                     l7905:
  7601                           
  7602                           ; BSR set to: 0
  7603   0038A2  90D8               	bcf	status,0,c
  7604   0038A4  3789               	rlcf	sqrtf@ix& (0+255),f,b
  7605   0038A6  378A               	rlcf	(sqrtf@ix+1)& (0+255),f,b
  7606   0038A8  378B               	rlcf	(sqrtf@ix+2)& (0+255),f,b
  7607   0038AA  378C               	rlcf	(sqrtf@ix+3)& (0+255),f,b
  7608   0038AC                     
  7609                           ; BSR set to: 0
  7610   0038AC  0E01               	movlw	1
  7611   0038AE  276D               	addwf	sqrtf@i& (0+255),f,b
  7612   0038B0  0E00               	movlw	0
  7613   0038B2  236E               	addwfc	(sqrtf@i+1)& (0+255),f,b
  7614   0038B4  236F               	addwfc	(sqrtf@i+2)& (0+255),f,b
  7615   0038B6  2370               	addwfc	(sqrtf@i+3)& (0+255),f,b
  7616   0038B8                     l7909:
  7617                           
  7618                           ; BSR set to: 0
  7619   0038B8  AF8B               	btfss	(sqrtf@ix+2)& (0+255),7,b
  7620   0038BA  EF61  F01C         	goto	u7991
  7621   0038BE  EF63  F01C         	goto	u7990
  7622   0038C2                     u7991:
  7623   0038C2  EF51  F01C         	goto	l7905
  7624   0038C6                     u7990:
  7625   0038C6                     
  7626                           ; BSR set to: 0
  7627   0038C6  0EFF               	movlw	255
  7628   0038C8  256D               	addwf	sqrtf@i& (0+255),w,b
  7629   0038CA  6F64               	movwf	??_sqrtf& (0+255),b
  7630   0038CC  0EFF               	movlw	255
  7631   0038CE  216E               	addwfc	(sqrtf@i+1)& (0+255),w,b
  7632   0038D0  6F65               	movwf	(??_sqrtf+1)& (0+255),b
  7633   0038D2  0EFF               	movlw	255
  7634   0038D4  216F               	addwfc	(sqrtf@i+2)& (0+255),w,b
  7635   0038D6  6F66               	movwf	(??_sqrtf+2)& (0+255),b
  7636   0038D8  0EFF               	movlw	255
  7637   0038DA  2170               	addwfc	(sqrtf@i+3)& (0+255),w,b
  7638   0038DC  6F67               	movwf	(??_sqrtf+3)& (0+255),b
  7639   0038DE  5164               	movf	??_sqrtf& (0+255),w,b
  7640   0038E0  5F81               	subwf	sqrtf@m& (0+255),f,b
  7641   0038E2  5165               	movf	(??_sqrtf+1)& (0+255),w,b
  7642   0038E4  5B82               	subwfb	(sqrtf@m+1)& (0+255),f,b
  7643   0038E6  5166               	movf	(??_sqrtf+2)& (0+255),w,b
  7644   0038E8  5B83               	subwfb	(sqrtf@m+2)& (0+255),f,b
  7645   0038EA  5167               	movf	(??_sqrtf+3)& (0+255),w,b
  7646   0038EC  5B84               	subwfb	(sqrtf@m+3)& (0+255),f,b
  7647   0038EE                     l1374:
  7648                           
  7649                           ; BSR set to: 0
  7650   0038EE  0E81               	movlw	129
  7651   0038F0  2781               	addwf	sqrtf@m& (0+255),f,b
  7652   0038F2  0EFF               	movlw	255
  7653   0038F4  2382               	addwfc	(sqrtf@m+1)& (0+255),f,b
  7654   0038F6  0EFF               	movlw	255
  7655   0038F8  2383               	addwfc	(sqrtf@m+2)& (0+255),f,b
  7656   0038FA  0EFF               	movlw	255
  7657   0038FC  2384               	addwfc	(sqrtf@m+3)& (0+255),f,b
  7658   0038FE  0EFF               	movlw	255
  7659   003900  1589               	andwf	sqrtf@ix& (0+255),w,b
  7660   003902  6F64               	movwf	??_sqrtf& (0+255),b
  7661   003904  0EFF               	movlw	255
  7662   003906  158A               	andwf	(sqrtf@ix+1)& (0+255),w,b
  7663   003908  6F65               	movwf	(??_sqrtf+1)& (0+255),b
  7664   00390A  0E7F               	movlw	127
  7665   00390C  158B               	andwf	(sqrtf@ix+2)& (0+255),w,b
  7666   00390E  6F66               	movwf	(??_sqrtf+2)& (0+255),b
  7667   003910  0E00               	movlw	0
  7668   003912  158C               	andwf	(sqrtf@ix+3)& (0+255),w,b
  7669   003914  6F67               	movwf	(??_sqrtf+3)& (0+255),b
  7670   003916  0E00               	movlw	0
  7671   003918  1164               	iorwf	??_sqrtf& (0+255),w,b
  7672   00391A  6F89               	movwf	sqrtf@ix& (0+255),b
  7673   00391C  0E00               	movlw	0
  7674   00391E  1165               	iorwf	(??_sqrtf+1)& (0+255),w,b
  7675   003920  6F8A               	movwf	(sqrtf@ix+1)& (0+255),b
  7676   003922  0E80               	movlw	128
  7677   003924  1166               	iorwf	(??_sqrtf+2)& (0+255),w,b
  7678   003926  6F8B               	movwf	(sqrtf@ix+2)& (0+255),b
  7679   003928  0E00               	movlw	0
  7680   00392A  1167               	iorwf	(??_sqrtf+3)& (0+255),w,b
  7681   00392C  6F8C               	movwf	(sqrtf@ix+3)& (0+255),b
  7682   00392E                     
  7683                           ; BSR set to: 0
  7684   00392E  A181               	btfss	sqrtf@m& (0+255),0,b
  7685   003930  EF9C  F01C         	goto	u8001
  7686   003934  EF9E  F01C         	goto	u8000
  7687   003938                     u8001:
  7688   003938  EFA6  F01C         	goto	l1378
  7689   00393C                     u8000:
  7690   00393C                     
  7691                           ; BSR set to: 0
  7692   00393C  5189               	movf	sqrtf@ix& (0+255),w,b
  7693   00393E  2789               	addwf	sqrtf@ix& (0+255),f,b
  7694   003940  518A               	movf	(sqrtf@ix+1)& (0+255),w,b
  7695   003942  238A               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  7696   003944  518B               	movf	(sqrtf@ix+2)& (0+255),w,b
  7697   003946  238B               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  7698   003948  518C               	movf	(sqrtf@ix+3)& (0+255),w,b
  7699   00394A  238C               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  7700   00394C                     l1378:
  7701                           
  7702                           ; BSR set to: 0
  7703   00394C  3584               	rlcf	(sqrtf@m+3)& (0+255),w,b
  7704   00394E  3384               	rrcf	(sqrtf@m+3)& (0+255),f,b
  7705   003950  3383               	rrcf	(sqrtf@m+2)& (0+255),f,b
  7706   003952  3382               	rrcf	(sqrtf@m+1)& (0+255),f,b
  7707   003954  3381               	rrcf	sqrtf@m& (0+255),f,b
  7708   003956  5189               	movf	sqrtf@ix& (0+255),w,b
  7709   003958  2789               	addwf	sqrtf@ix& (0+255),f,b
  7710   00395A  518A               	movf	(sqrtf@ix+1)& (0+255),w,b
  7711   00395C  238A               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  7712   00395E  518B               	movf	(sqrtf@ix+2)& (0+255),w,b
  7713   003960  238B               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  7714   003962  518C               	movf	(sqrtf@ix+3)& (0+255),w,b
  7715   003964  238C               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  7716   003966                     
  7717                           ; BSR set to: 0
  7718   003966  0E00               	movlw	0
  7719   003968  6F69               	movwf	sqrtf@s& (0+255),b
  7720   00396A  0E00               	movlw	0
  7721   00396C  6F6A               	movwf	(sqrtf@s+1)& (0+255),b
  7722   00396E  0E00               	movlw	0
  7723   003970  6F6B               	movwf	(sqrtf@s+2)& (0+255),b
  7724   003972  0E00               	movlw	0
  7725   003974  6F6C               	movwf	(sqrtf@s+3)& (0+255),b
  7726   003976  C069  F075         	movff	sqrtf@s,sqrtf@q
  7727   00397A  C06A  F076         	movff	sqrtf@s+1,sqrtf@q+1
  7728   00397E  C06B  F077         	movff	sqrtf@s+2,sqrtf@q+2
  7729   003982  C06C  F078         	movff	sqrtf@s+3,sqrtf@q+3
  7730   003986                     
  7731                           ; BSR set to: 0
  7732   003986  0E00               	movlw	0
  7733   003988  6F85               	movwf	sqrtf@r& (0+255),b
  7734   00398A  0E00               	movlw	0
  7735   00398C  6F86               	movwf	(sqrtf@r+1)& (0+255),b
  7736   00398E  0E00               	movlw	0
  7737   003990  6F87               	movwf	(sqrtf@r+2)& (0+255),b
  7738   003992  0E01               	movlw	1
  7739   003994  6F88               	movwf	(sqrtf@r+3)& (0+255),b
  7740   003996  EF15  F01D         	goto	l7927
  7741   00399A                     l7921:
  7742                           
  7743                           ; BSR set to: 0
  7744   00399A  5169               	movf	sqrtf@s& (0+255),w,b
  7745   00399C  2585               	addwf	sqrtf@r& (0+255),w,b
  7746   00399E  6F79               	movwf	sqrtf@t& (0+255),b
  7747   0039A0  516A               	movf	(sqrtf@s+1)& (0+255),w,b
  7748   0039A2  2186               	addwfc	(sqrtf@r+1)& (0+255),w,b
  7749   0039A4  6F7A               	movwf	(sqrtf@t+1)& (0+255),b
  7750   0039A6  516B               	movf	(sqrtf@s+2)& (0+255),w,b
  7751   0039A8  2187               	addwfc	(sqrtf@r+2)& (0+255),w,b
  7752   0039AA  6F7B               	movwf	(sqrtf@t+2)& (0+255),b
  7753   0039AC  516C               	movf	(sqrtf@s+3)& (0+255),w,b
  7754   0039AE  2188               	addwfc	(sqrtf@r+3)& (0+255),w,b
  7755   0039B0  6F7C               	movwf	(sqrtf@t+3)& (0+255),b
  7756   0039B2  5179               	movf	sqrtf@t& (0+255),w,b
  7757   0039B4  5D89               	subwf	sqrtf@ix& (0+255),w,b
  7758   0039B6  517A               	movf	(sqrtf@t+1)& (0+255),w,b
  7759   0039B8  598A               	subwfb	(sqrtf@ix+1)& (0+255),w,b
  7760   0039BA  517B               	movf	(sqrtf@t+2)& (0+255),w,b
  7761   0039BC  598B               	subwfb	(sqrtf@ix+2)& (0+255),w,b
  7762   0039BE  518C               	movf	(sqrtf@ix+3)& (0+255),w,b
  7763   0039C0  0A80               	xorlw	128
  7764   0039C2  6F64               	movwf	??_sqrtf& (0+255),b
  7765   0039C4  517C               	movf	(sqrtf@t+3)& (0+255),w,b
  7766   0039C6  0A80               	xorlw	128
  7767   0039C8  5964               	subwfb	??_sqrtf& (0+255),w,b
  7768   0039CA  A0D8               	btfss	status,0,c
  7769   0039CC  EFEA  F01C         	goto	u8011
  7770   0039D0  EFEC  F01C         	goto	u8010
  7771   0039D4                     u8011:
  7772   0039D4  EF08  F01D         	goto	l1381
  7773   0039D8                     u8010:
  7774   0039D8                     
  7775                           ; BSR set to: 0
  7776   0039D8  5179               	movf	sqrtf@t& (0+255),w,b
  7777   0039DA  2585               	addwf	sqrtf@r& (0+255),w,b
  7778   0039DC  6F69               	movwf	sqrtf@s& (0+255),b
  7779   0039DE  517A               	movf	(sqrtf@t+1)& (0+255),w,b
  7780   0039E0  2186               	addwfc	(sqrtf@r+1)& (0+255),w,b
  7781   0039E2  6F6A               	movwf	(sqrtf@s+1)& (0+255),b
  7782   0039E4  517B               	movf	(sqrtf@t+2)& (0+255),w,b
  7783   0039E6  2187               	addwfc	(sqrtf@r+2)& (0+255),w,b
  7784   0039E8  6F6B               	movwf	(sqrtf@s+2)& (0+255),b
  7785   0039EA  517C               	movf	(sqrtf@t+3)& (0+255),w,b
  7786   0039EC  2188               	addwfc	(sqrtf@r+3)& (0+255),w,b
  7787   0039EE  6F6C               	movwf	(sqrtf@s+3)& (0+255),b
  7788   0039F0  5179               	movf	sqrtf@t& (0+255),w,b
  7789   0039F2  5F89               	subwf	sqrtf@ix& (0+255),f,b
  7790   0039F4  517A               	movf	(sqrtf@t+1)& (0+255),w,b
  7791   0039F6  5B8A               	subwfb	(sqrtf@ix+1)& (0+255),f,b
  7792   0039F8  517B               	movf	(sqrtf@t+2)& (0+255),w,b
  7793   0039FA  5B8B               	subwfb	(sqrtf@ix+2)& (0+255),f,b
  7794   0039FC  517C               	movf	(sqrtf@t+3)& (0+255),w,b
  7795   0039FE  5B8C               	subwfb	(sqrtf@ix+3)& (0+255),f,b
  7796   003A00  5185               	movf	sqrtf@r& (0+255),w,b
  7797   003A02  2775               	addwf	sqrtf@q& (0+255),f,b
  7798   003A04  5186               	movf	(sqrtf@r+1)& (0+255),w,b
  7799   003A06  2376               	addwfc	(sqrtf@q+1)& (0+255),f,b
  7800   003A08  5187               	movf	(sqrtf@r+2)& (0+255),w,b
  7801   003A0A  2377               	addwfc	(sqrtf@q+2)& (0+255),f,b
  7802   003A0C  5188               	movf	(sqrtf@r+3)& (0+255),w,b
  7803   003A0E  2378               	addwfc	(sqrtf@q+3)& (0+255),f,b
  7804   003A10                     l1381:
  7805                           
  7806                           ; BSR set to: 0
  7807   003A10  5189               	movf	sqrtf@ix& (0+255),w,b
  7808   003A12  2789               	addwf	sqrtf@ix& (0+255),f,b
  7809   003A14  518A               	movf	(sqrtf@ix+1)& (0+255),w,b
  7810   003A16  238A               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  7811   003A18  518B               	movf	(sqrtf@ix+2)& (0+255),w,b
  7812   003A1A  238B               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  7813   003A1C  518C               	movf	(sqrtf@ix+3)& (0+255),w,b
  7814   003A1E  238C               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  7815   003A20                     
  7816                           ; BSR set to: 0
  7817   003A20  90D8               	bcf	status,0,c
  7818   003A22  3388               	rrcf	(sqrtf@r+3)& (0+255),f,b
  7819   003A24  3387               	rrcf	(sqrtf@r+2)& (0+255),f,b
  7820   003A26  3386               	rrcf	(sqrtf@r+1)& (0+255),f,b
  7821   003A28  3385               	rrcf	sqrtf@r& (0+255),f,b
  7822   003A2A                     l7927:
  7823                           
  7824                           ; BSR set to: 0
  7825   003A2A  5185               	movf	sqrtf@r& (0+255),w,b
  7826   003A2C  1186               	iorwf	(sqrtf@r+1)& (0+255),w,b
  7827   003A2E  1187               	iorwf	(sqrtf@r+2)& (0+255),w,b
  7828   003A30  1188               	iorwf	(sqrtf@r+3)& (0+255),w,b
  7829   003A32  A4D8               	btfss	status,2,c
  7830   003A34  EF1E  F01D         	goto	u8021
  7831   003A38  EF20  F01D         	goto	u8020
  7832   003A3C                     u8021:
  7833   003A3C  EFCD  F01C         	goto	l7921
  7834   003A40                     u8020:
  7835   003A40                     
  7836                           ; BSR set to: 0
  7837   003A40  5189               	movf	sqrtf@ix& (0+255),w,b
  7838   003A42  118A               	iorwf	(sqrtf@ix+1)& (0+255),w,b
  7839   003A44  118B               	iorwf	(sqrtf@ix+2)& (0+255),w,b
  7840   003A46  118C               	iorwf	(sqrtf@ix+3)& (0+255),w,b
  7841   003A48  B4D8               	btfsc	status,2,c
  7842   003A4A  EF29  F01D         	goto	u8031
  7843   003A4E  EF2B  F01D         	goto	u8030
  7844   003A52                     u8031:
  7845   003A52  EF8C  F01D         	goto	l1383
  7846   003A56                     u8030:
  7847   003A56                     
  7848                           ; BSR set to: 0
  7849   003A56  0E00               	movlw	0
  7850   003A58  6F7D               	movwf	sqrtf@z& (0+255),b
  7851   003A5A  0E00               	movlw	0
  7852   003A5C  6F7E               	movwf	(sqrtf@z+1)& (0+255),b
  7853   003A5E  0E80               	movlw	128
  7854   003A60  6F7F               	movwf	(sqrtf@z+2)& (0+255),b
  7855   003A62  0E3F               	movlw	63
  7856   003A64  6F80               	movwf	(sqrtf@z+3)& (0+255),b
  7857   003A66                     
  7858                           ; BSR set to: 0
  7859   003A66  C07D  F034         	movff	sqrtf@z,___flge@ff1
  7860   003A6A  C07E  F035         	movff	sqrtf@z+1,___flge@ff1+1
  7861   003A6E  C07F  F036         	movff	sqrtf@z+2,___flge@ff1+2
  7862   003A72  C080  F037         	movff	sqrtf@z+3,___flge@ff1+3
  7863   003A76  0E00               	movlw	0
  7864   003A78  6E38               	movwf	___flge@ff2^0,c
  7865   003A7A  0E00               	movlw	0
  7866   003A7C  6E39               	movwf	(___flge@ff2+1)^0,c
  7867   003A7E  0E80               	movlw	128
  7868   003A80  6E3A               	movwf	(___flge@ff2+2)^0,c
  7869   003A82  0E3F               	movlw	63
  7870   003A84  6E3B               	movwf	(___flge@ff2+3)^0,c
  7871   003A86  ECC9  F030         	call	___flge	;wreg free
  7872   003A8A  A0D8               	btfss	status,0,c
  7873   003A8C  EF4A  F01D         	goto	u8041
  7874   003A90  EF4C  F01D         	goto	u8040
  7875   003A94                     u8041:
  7876   003A94  EF8C  F01D         	goto	l1383
  7877   003A98                     u8040:
  7878   003A98  0E00               	movlw	0
  7879   003A9A  0100               	movlb	0	; () banked
  7880   003A9C  6F7D               	movwf	sqrtf@z& (0+255),b
  7881   003A9E  0E00               	movlw	0
  7882   003AA0  6F7E               	movwf	(sqrtf@z+1)& (0+255),b
  7883   003AA2  0E80               	movlw	128
  7884   003AA4  6F7F               	movwf	(sqrtf@z+2)& (0+255),b
  7885   003AA6  0E3F               	movlw	63
  7886   003AA8  6F80               	movwf	(sqrtf@z+3)& (0+255),b
  7887   003AAA                     
  7888                           ; BSR set to: 0
  7889   003AAA  0E00               	movlw	0
  7890   003AAC  6E34               	movwf	___flge@ff1^0,c
  7891   003AAE  0E00               	movlw	0
  7892   003AB0  6E35               	movwf	(___flge@ff1+1)^0,c
  7893   003AB2  0E80               	movlw	128
  7894   003AB4  6E36               	movwf	(___flge@ff1+2)^0,c
  7895   003AB6  0E3F               	movlw	63
  7896   003AB8  6E37               	movwf	(___flge@ff1+3)^0,c
  7897   003ABA  C07D  F038         	movff	sqrtf@z,___flge@ff2
  7898   003ABE  C07E  F039         	movff	sqrtf@z+1,___flge@ff2+1
  7899   003AC2  C07F  F03A         	movff	sqrtf@z+2,___flge@ff2+2
  7900   003AC6  C080  F03B         	movff	sqrtf@z+3,___flge@ff2+3
  7901   003ACA  ECC9  F030         	call	___flge	;wreg free
  7902   003ACE  B0D8               	btfsc	status,0,c
  7903   003AD0  EF6C  F01D         	goto	u8051
  7904   003AD4  EF6E  F01D         	goto	u8050
  7905   003AD8                     u8051:
  7906   003AD8  EF77  F01D         	goto	l7941
  7907   003ADC                     u8050:
  7908   003ADC  0E02               	movlw	2
  7909   003ADE  0100               	movlb	0	; () banked
  7910   003AE0  2775               	addwf	sqrtf@q& (0+255),f,b
  7911   003AE2  0E00               	movlw	0
  7912   003AE4  2376               	addwfc	(sqrtf@q+1)& (0+255),f,b
  7913   003AE6  2377               	addwfc	(sqrtf@q+2)& (0+255),f,b
  7914   003AE8  2378               	addwfc	(sqrtf@q+3)& (0+255),f,b
  7915   003AEA  EF8C  F01D         	goto	l1383
  7916   003AEE                     l7941:
  7917   003AEE  0E01               	movlw	1
  7918   003AF0  0100               	movlb	0	; () banked
  7919   003AF2  1575               	andwf	sqrtf@q& (0+255),w,b
  7920   003AF4  6F64               	movwf	??_sqrtf& (0+255),b
  7921   003AF6  0E00               	movlw	0
  7922   003AF8  1576               	andwf	(sqrtf@q+1)& (0+255),w,b
  7923   003AFA  6F65               	movwf	(??_sqrtf+1)& (0+255),b
  7924   003AFC  0E00               	movlw	0
  7925   003AFE  1577               	andwf	(sqrtf@q+2)& (0+255),w,b
  7926   003B00  6F66               	movwf	(??_sqrtf+2)& (0+255),b
  7927   003B02  0E00               	movlw	0
  7928   003B04  1578               	andwf	(sqrtf@q+3)& (0+255),w,b
  7929   003B06  6F67               	movwf	(??_sqrtf+3)& (0+255),b
  7930   003B08  5164               	movf	??_sqrtf& (0+255),w,b
  7931   003B0A  2775               	addwf	sqrtf@q& (0+255),f,b
  7932   003B0C  5165               	movf	(??_sqrtf+1)& (0+255),w,b
  7933   003B0E  2376               	addwfc	(sqrtf@q+1)& (0+255),f,b
  7934   003B10  5166               	movf	(??_sqrtf+2)& (0+255),w,b
  7935   003B12  2377               	addwfc	(sqrtf@q+2)& (0+255),f,b
  7936   003B14  5167               	movf	(??_sqrtf+3)& (0+255),w,b
  7937   003B16  2378               	addwfc	(sqrtf@q+3)& (0+255),f,b
  7938   003B18                     l1383:
  7939   003B18  C075  F064         	movff	sqrtf@q,??_sqrtf
  7940   003B1C  C076  F065         	movff	sqrtf@q+1,??_sqrtf+1
  7941   003B20  C077  F066         	movff	sqrtf@q+2,??_sqrtf+2
  7942   003B24  C078  F067         	movff	sqrtf@q+3,??_sqrtf+3
  7943   003B28  0100               	movlb	0	; () banked
  7944   003B2A  3567               	rlcf	(??_sqrtf+3)& (0+255),w,b
  7945   003B2C  3367               	rrcf	(??_sqrtf+3)& (0+255),f,b
  7946   003B2E  3366               	rrcf	(??_sqrtf+2)& (0+255),f,b
  7947   003B30  3365               	rrcf	(??_sqrtf+1)& (0+255),f,b
  7948   003B32  3364               	rrcf	??_sqrtf& (0+255),f,b
  7949   003B34  0E00               	movlw	0
  7950   003B36  2564               	addwf	??_sqrtf& (0+255),w,b
  7951   003B38  6F89               	movwf	sqrtf@ix& (0+255),b
  7952   003B3A  0E00               	movlw	0
  7953   003B3C  2165               	addwfc	(??_sqrtf+1)& (0+255),w,b
  7954   003B3E  6F8A               	movwf	(sqrtf@ix+1)& (0+255),b
  7955   003B40  0E00               	movlw	0
  7956   003B42  2166               	addwfc	(??_sqrtf+2)& (0+255),w,b
  7957   003B44  6F8B               	movwf	(sqrtf@ix+2)& (0+255),b
  7958   003B46  0E3F               	movlw	63
  7959   003B48  2167               	addwfc	(??_sqrtf+3)& (0+255),w,b
  7960   003B4A  6F8C               	movwf	(sqrtf@ix+3)& (0+255),b
  7961   003B4C  C081  F064         	movff	sqrtf@m,??_sqrtf
  7962   003B50  C082  F065         	movff	sqrtf@m+1,??_sqrtf+1
  7963   003B54  C083  F066         	movff	sqrtf@m+2,??_sqrtf+2
  7964   003B58  C084  F067         	movff	sqrtf@m+3,??_sqrtf+3
  7965   003B5C  0E17               	movlw	23
  7966   003B5E                     u8065:
  7967   003B5E  90D8               	bcf	status,0,c
  7968   003B60  3764               	rlcf	??_sqrtf& (0+255),f,b
  7969   003B62  3765               	rlcf	(??_sqrtf+1)& (0+255),f,b
  7970   003B64  3766               	rlcf	(??_sqrtf+2)& (0+255),f,b
  7971   003B66  3767               	rlcf	(??_sqrtf+3)& (0+255),f,b
  7972   003B68  2EE8               	decfsz	wreg,f,c
  7973   003B6A  EFAF  F01D         	goto	u8065
  7974   003B6E  5164               	movf	??_sqrtf& (0+255),w,b
  7975   003B70  2789               	addwf	sqrtf@ix& (0+255),f,b
  7976   003B72  5165               	movf	(??_sqrtf+1)& (0+255),w,b
  7977   003B74  238A               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  7978   003B76  5166               	movf	(??_sqrtf+2)& (0+255),w,b
  7979   003B78  238B               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  7980   003B7A  5167               	movf	(??_sqrtf+3)& (0+255),w,b
  7981   003B7C  238C               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  7982   003B7E                     
  7983                           ; BSR set to: 0
  7984   003B7E  C089  F071         	movff	sqrtf@ix,sqrtf@__xc8_float_word
  7985   003B82  C08A  F072         	movff	sqrtf@ix+1,sqrtf@__xc8_float_word+1
  7986   003B86  C08B  F073         	movff	sqrtf@ix+2,sqrtf@__xc8_float_word+2
  7987   003B8A  C08C  F074         	movff	sqrtf@ix+3,sqrtf@__xc8_float_word+3
  7988   003B8E                     
  7989                           ; BSR set to: 0
  7990   003B8E  C071  F07D         	movff	sqrtf@__xc8_float_word,sqrtf@z
  7991   003B92  C072  F07E         	movff	sqrtf@__xc8_float_word+1,sqrtf@z+1
  7992   003B96  C073  F07F         	movff	sqrtf@__xc8_float_word+2,sqrtf@z+2
  7993   003B9A  C074  F080         	movff	sqrtf@__xc8_float_word+3,sqrtf@z+3
  7994   003B9E                     
  7995                           ; BSR set to: 0
  7996   003B9E  C07D  F060         	movff	sqrtf@z,?_sqrtf
  7997   003BA2  C07E  F061         	movff	sqrtf@z+1,?_sqrtf+1
  7998   003BA6  C07F  F062         	movff	sqrtf@z+2,?_sqrtf+2
  7999   003BAA  C080  F063         	movff	sqrtf@z+3,?_sqrtf+3
  8000   003BAE                     l1370:
  8001   003BAE  0012               	return		;funcret
  8002   003BB0                     __end_of_sqrtf:
  8003                           	callstack 0
  8004                           
  8005 ;; *************** function _nanf *****************
  8006 ;; Defined at:
  8007 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nanf.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;  s               2   12[COMRAM] PTR const unsigned char 
  8010 ;;		 -> STR_13(1), 
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;  u               4   16[COMRAM] struct .
  8013 ;; Return value:  Size  Location     Type
  8014 ;;                  4   12[COMRAM] float 
  8015 ;; Registers used:
  8016 ;;		wreg, status,2
  8017 ;; Tracked objects:
  8018 ;;		On entry : 0/0
  8019 ;;		On exit  : 0/0
  8020 ;;		Unchanged: 0/0
  8021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8022 ;;      Params:         4       0       0       0       0       0       0       0       0
  8023 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8024 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8025 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8026 ;;Total ram usage:        8 bytes
  8027 ;; Hardware stack levels used: 1
  8028 ;; Hardware stack levels required when called: 2
  8029 ;; This function calls:
  8030 ;;		Nothing
  8031 ;; This function is called by:
  8032 ;;		_sqrtf
  8033 ;; This function uses a non-reentrant model
  8034 ;;
  8035                           
  8036                           	psect	text25
  8037   006E0E                     __ptext25:
  8038                           	callstack 0
  8039   006E0E                     _nanf:
  8040                           	callstack 27
  8041   006E0E  0EFF               	movlw	255
  8042   006E10  6E11               	movwf	nanf@u^0,c
  8043   006E12  0EFF               	movlw	255
  8044   006E14  6E12               	movwf	(nanf@u+1)^0,c
  8045   006E16  0EFF               	movlw	255
  8046   006E18  6E13               	movwf	(nanf@u+2)^0,c
  8047   006E1A  0E7F               	movlw	127
  8048   006E1C  6E14               	movwf	(nanf@u+3)^0,c
  8049   006E1E  C011  F00D         	movff	nanf@u,?_nanf
  8050   006E22  C012  F00E         	movff	nanf@u+1,?_nanf+1
  8051   006E26  C013  F00F         	movff	nanf@u+2,?_nanf+2
  8052   006E2A  C014  F010         	movff	nanf@u+3,?_nanf+3
  8053   006E2E  0012               	return		;funcret
  8054   006E30                     __end_of_nanf:
  8055                           	callstack 0
  8056                           
  8057 ;; *************** function ___flge *****************
  8058 ;; Defined at:
  8059 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  8060 ;; Parameters:    Size  Location     Type
  8061 ;;  ff1             4   51[COMRAM] float 
  8062 ;;  ff2             4   55[COMRAM] float 
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;		None
  8065 ;; Return value:  Size  Location     Type
  8066 ;;		None               void
  8067 ;; Registers used:
  8068 ;;		wreg, status,2, status,0
  8069 ;; Tracked objects:
  8070 ;;		On entry : 0/0
  8071 ;;		On exit  : 0/0
  8072 ;;		Unchanged: 0/0
  8073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8074 ;;      Params:         8       0       0       0       0       0       0       0       0
  8075 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8076 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8077 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8078 ;;Total ram usage:       12 bytes
  8079 ;; Hardware stack levels used: 1
  8080 ;; Hardware stack levels required when called: 2
  8081 ;; This function calls:
  8082 ;;		Nothing
  8083 ;; This function is called by:
  8084 ;;		_main
  8085 ;;		_verifRes
  8086 ;;		_efgtoa
  8087 ;;		_sqrtf
  8088 ;; This function uses a non-reentrant model
  8089 ;;
  8090                           
  8091                           	psect	text26
  8092   006192                     __ptext26:
  8093                           	callstack 0
  8094   006192                     ___flge:
  8095                           	callstack 23
  8096   006192  0E00               	movlw	0
  8097   006194  1434               	andwf	___flge@ff1^0,w,c
  8098   006196  6E3C               	movwf	??___flge^0,c
  8099   006198  0E00               	movlw	0
  8100   00619A  1435               	andwf	(___flge@ff1+1)^0,w,c
  8101   00619C  6E3D               	movwf	(??___flge+1)^0,c
  8102   00619E  0E80               	movlw	128
  8103   0061A0  1436               	andwf	(___flge@ff1+2)^0,w,c
  8104   0061A2  6E3E               	movwf	(??___flge+2)^0,c
  8105   0061A4  0E7F               	movlw	127
  8106   0061A6  1437               	andwf	(___flge@ff1+3)^0,w,c
  8107   0061A8  6E3F               	movwf	(??___flge+3)^0,c
  8108   0061AA  503C               	movf	??___flge^0,w,c
  8109   0061AC  103D               	iorwf	(??___flge+1)^0,w,c
  8110   0061AE  103E               	iorwf	(??___flge+2)^0,w,c
  8111   0061B0  103F               	iorwf	(??___flge+3)^0,w,c
  8112   0061B2  A4D8               	btfss	status,2,c
  8113   0061B4  EFDE  F030         	goto	u6381
  8114   0061B8  EFE0  F030         	goto	u6380
  8115   0061BC                     u6381:
  8116   0061BC  EFE8  F030         	goto	l6603
  8117   0061C0                     u6380:
  8118   0061C0  0E00               	movlw	0
  8119   0061C2  6E34               	movwf	___flge@ff1^0,c
  8120   0061C4  0E00               	movlw	0
  8121   0061C6  6E35               	movwf	(___flge@ff1+1)^0,c
  8122   0061C8  0E00               	movlw	0
  8123   0061CA  6E36               	movwf	(___flge@ff1+2)^0,c
  8124   0061CC  0E00               	movlw	0
  8125   0061CE  6E37               	movwf	(___flge@ff1+3)^0,c
  8126   0061D0                     l6603:
  8127   0061D0  0E00               	movlw	0
  8128   0061D2  1438               	andwf	___flge@ff2^0,w,c
  8129   0061D4  6E3C               	movwf	??___flge^0,c
  8130   0061D6  0E00               	movlw	0
  8131   0061D8  1439               	andwf	(___flge@ff2+1)^0,w,c
  8132   0061DA  6E3D               	movwf	(??___flge+1)^0,c
  8133   0061DC  0E80               	movlw	128
  8134   0061DE  143A               	andwf	(___flge@ff2+2)^0,w,c
  8135   0061E0  6E3E               	movwf	(??___flge+2)^0,c
  8136   0061E2  0E7F               	movlw	127
  8137   0061E4  143B               	andwf	(___flge@ff2+3)^0,w,c
  8138   0061E6  6E3F               	movwf	(??___flge+3)^0,c
  8139   0061E8  503C               	movf	??___flge^0,w,c
  8140   0061EA  103D               	iorwf	(??___flge+1)^0,w,c
  8141   0061EC  103E               	iorwf	(??___flge+2)^0,w,c
  8142   0061EE  103F               	iorwf	(??___flge+3)^0,w,c
  8143   0061F0  A4D8               	btfss	status,2,c
  8144   0061F2  EFFD  F030         	goto	u6391
  8145   0061F6  EFFF  F030         	goto	u6390
  8146   0061FA                     u6391:
  8147   0061FA  EF07  F031         	goto	l6607
  8148   0061FE                     u6390:
  8149   0061FE  0E00               	movlw	0
  8150   006200  6E38               	movwf	___flge@ff2^0,c
  8151   006202  0E00               	movlw	0
  8152   006204  6E39               	movwf	(___flge@ff2+1)^0,c
  8153   006206  0E00               	movlw	0
  8154   006208  6E3A               	movwf	(___flge@ff2+2)^0,c
  8155   00620A  0E00               	movlw	0
  8156   00620C  6E3B               	movwf	(___flge@ff2+3)^0,c
  8157   00620E                     l6607:
  8158   00620E  AE37               	btfss	(___flge@ff1+3)^0,7,c
  8159   006210  EF0C  F031         	goto	u6401
  8160   006214  EF0E  F031         	goto	u6400
  8161   006218                     u6401:
  8162   006218  EF17  F031         	goto	l6611
  8163   00621C                     u6400:
  8164   00621C  6C34               	negf	___flge@ff1^0,c
  8165   00621E  1E35               	comf	(___flge@ff1+1)^0,f,c
  8166   006220  B0D8               	btfsc	status,0,c
  8167   006222  2A35               	incf	(___flge@ff1+1)^0,f,c
  8168   006224  1E36               	comf	(___flge@ff1+2)^0,f,c
  8169   006226  B0D8               	btfsc	status,0,c
  8170   006228  2A36               	incf	(___flge@ff1+2)^0,f,c
  8171   00622A  0E80               	movlw	128
  8172   00622C  5637               	subfwb	(___flge@ff1+3)^0,f,c
  8173   00622E                     l6611:
  8174   00622E  AE3B               	btfss	(___flge@ff2+3)^0,7,c
  8175   006230  EF1C  F031         	goto	u6411
  8176   006234  EF1E  F031         	goto	u6410
  8177   006238                     u6411:
  8178   006238  EF27  F031         	goto	l554
  8179   00623C                     u6410:
  8180   00623C  6C38               	negf	___flge@ff2^0,c
  8181   00623E  1E39               	comf	(___flge@ff2+1)^0,f,c
  8182   006240  B0D8               	btfsc	status,0,c
  8183   006242  2A39               	incf	(___flge@ff2+1)^0,f,c
  8184   006244  1E3A               	comf	(___flge@ff2+2)^0,f,c
  8185   006246  B0D8               	btfsc	status,0,c
  8186   006248  2A3A               	incf	(___flge@ff2+2)^0,f,c
  8187   00624A  0E80               	movlw	128
  8188   00624C  563B               	subfwb	(___flge@ff2+3)^0,f,c
  8189   00624E                     l554:
  8190   00624E  0E00               	movlw	0
  8191   006250  1A34               	xorwf	___flge@ff1^0,f,c
  8192   006252  0E00               	movlw	0
  8193   006254  1A35               	xorwf	(___flge@ff1+1)^0,f,c
  8194   006256  0E00               	movlw	0
  8195   006258  1A36               	xorwf	(___flge@ff1+2)^0,f,c
  8196   00625A  0E80               	movlw	128
  8197   00625C  1A37               	xorwf	(___flge@ff1+3)^0,f,c
  8198   00625E  0E00               	movlw	0
  8199   006260  1A38               	xorwf	___flge@ff2^0,f,c
  8200   006262  0E00               	movlw	0
  8201   006264  1A39               	xorwf	(___flge@ff2+1)^0,f,c
  8202   006266  0E00               	movlw	0
  8203   006268  1A3A               	xorwf	(___flge@ff2+2)^0,f,c
  8204   00626A  0E80               	movlw	128
  8205   00626C  1A3B               	xorwf	(___flge@ff2+3)^0,f,c
  8206   00626E  5038               	movf	___flge@ff2^0,w,c
  8207   006270  5C34               	subwf	___flge@ff1^0,w,c
  8208   006272  5039               	movf	(___flge@ff2+1)^0,w,c
  8209   006274  5835               	subwfb	(___flge@ff1+1)^0,w,c
  8210   006276  503A               	movf	(___flge@ff2+2)^0,w,c
  8211   006278  5836               	subwfb	(___flge@ff1+2)^0,w,c
  8212   00627A  503B               	movf	(___flge@ff2+3)^0,w,c
  8213   00627C  5837               	subwfb	(___flge@ff1+3)^0,w,c
  8214   00627E  B0D8               	btfsc	status,0,c
  8215   006280  EF44  F031         	goto	u6421
  8216   006284  EF46  F031         	goto	u6420
  8217   006288                     u6421:
  8218   006288  EF49  F031         	goto	l6617
  8219   00628C                     u6420:
  8220   00628C  90D8               	bcf	status,0,c
  8221   00628E  EF4A  F031         	goto	l559
  8222   006292                     l6617:
  8223   006292  80D8               	bsf	status,0,c
  8224   006294                     l559:
  8225   006294  0012               	return		;funcret
  8226   006296                     __end_of___flge:
  8227                           	callstack 0
  8228                           
  8229 ;; *************** function _normalize *****************
  8230 ;; Defined at:
  8231 ;;		line 276 in file "main.c"
  8232 ;; Parameters:    Size  Location     Type
  8233 ;;  N               2  117[BANK0 ] int 
  8234 ;;  X               2  119[BANK0 ] PTR float 
  8235 ;;		 -> Re_X1(128), 
  8236 ;; Auto vars:     Size  Location     Type
  8237 ;;  media           2  125[BANK0 ] int 
  8238 ;;  k               1  127[BANK0 ] unsigned char 
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  1    wreg      void 
  8241 ;; Registers used:
  8242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8243 ;; Tracked objects:
  8244 ;;		On entry : 0/0
  8245 ;;		On exit  : 0/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8248 ;;      Params:         0       4       0       0       0       0       0       0       0
  8249 ;;      Locals:         0       3       0       0       0       0       0       0       0
  8250 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8251 ;;      Totals:         0      11       0       0       0       0       0       0       0
  8252 ;;Total ram usage:       11 bytes
  8253 ;; Hardware stack levels used: 1
  8254 ;; Hardware stack levels required when called: 4
  8255 ;; This function calls:
  8256 ;;		___awdiv
  8257 ;;		___fladd
  8258 ;;		___fldiv
  8259 ;;		___flsub
  8260 ;;		___fltol
  8261 ;;		___xxtofl
  8262 ;; This function is called by:
  8263 ;;		_main
  8264 ;; This function uses a non-reentrant model
  8265 ;;
  8266                           
  8267                           	psect	text27
  8268   005BB0                     __ptext27:
  8269                           	callstack 0
  8270   005BB0                     _normalize:
  8271                           	callstack 26
  8272   005BB0                     
  8273                           ;main.c: 276: void normalize (int N, float X[]);main.c: 277: {;main.c: 278:     char k;;
      +                          main.c: 279:     int media = 0;
  8274   005BB0  0E00               	movlw	0
  8275   005BB2  0100               	movlb	0	; () banked
  8276   005BB4  6FDE               	movwf	(normalize@media+1)& (0+255),b
  8277   005BB6  0E00               	movlw	0
  8278   005BB8  6FDD               	movwf	normalize@media& (0+255),b
  8279                           
  8280                           ;main.c: 281:     for (k=0; k<N; k++)
  8281   005BBA  0E00               	movlw	0
  8282   005BBC  6FDF               	movwf	normalize@k& (0+255),b
  8283   005BBE  EF1B  F02E         	goto	l7779
  8284   005BC2                     l7775:
  8285                           
  8286                           ; BSR set to: 0
  8287                           ;main.c: 282:     {;main.c: 283:         media = media + X[k];
  8288   005BC2  51DF               	movf	normalize@k& (0+255),w,b
  8289   005BC4  0D04               	mullw	4
  8290   005BC6  CFF3 F0D9          	movff	prodl,??_normalize
  8291   005BCA  CFF4 F0DA          	movff	prodh,??_normalize+1
  8292   005BCE  51D9               	movf	??_normalize& (0+255),w,b
  8293   005BD0  25D7               	addwf	normalize@X& (0+255),w,b
  8294   005BD2  6ED9               	movwf	fsr2l,c
  8295   005BD4  51DA               	movf	(??_normalize+1)& (0+255),w,b
  8296   005BD6  21D8               	addwfc	(normalize@X+1)& (0+255),w,b
  8297   005BD8  6EDA               	movwf	fsr2h,c
  8298   005BDA  CFDE F038          	movff	postinc2,___fladd@a
  8299   005BDE  CFDE F039          	movff	postinc2,___fladd@a+1
  8300   005BE2  CFDE F03A          	movff	postinc2,___fladd@a+2
  8301   005BE6  CFDE F03B          	movff	postinc2,___fladd@a+3
  8302   005BEA  C0DD  F00D         	movff	normalize@media,___xxtofl@val
  8303   005BEE  C0DE  F00E         	movff	normalize@media+1,___xxtofl@val+1
  8304   005BF2  0E00               	movlw	0
  8305   005BF4  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  8306   005BF6  0EFF               	movlw	-1
  8307   005BF8  6E0F               	movwf	(___xxtofl@val+2)^0,c
  8308   005BFA  6E10               	movwf	(___xxtofl@val+3)^0,c
  8309   005BFC  0E01               	movlw	1
  8310   005BFE  ECC6  F02E         	call	___xxtofl
  8311   005C02  C00D  F034         	movff	?___xxtofl,___fladd@b
  8312   005C06  C00E  F035         	movff	?___xxtofl+1,___fladd@b+1
  8313   005C0A  C00F  F036         	movff	?___xxtofl+2,___fladd@b+2
  8314   005C0E  C010  F037         	movff	?___xxtofl+3,___fladd@b+3
  8315   005C12  ECD8  F01D         	call	___fladd	;wreg free
  8316   005C16  C034  F0CD         	movff	?___fladd,___fltol@f1
  8317   005C1A  C035  F0CE         	movff	?___fladd+1,___fltol@f1+1
  8318   005C1E  C036  F0CF         	movff	?___fladd+2,___fltol@f1+2
  8319   005C22  C037  F0D0         	movff	?___fladd+3,___fltol@f1+3
  8320   005C26  EC45  F030         	call	___fltol	;wreg free
  8321   005C2A  C0CD  F0DD         	movff	?___fltol,normalize@media
  8322   005C2E  C0CE  F0DE         	movff	?___fltol+1,normalize@media+1
  8323   005C32                     
  8324                           ;main.c: 284:     }
  8325   005C32  0100               	movlb	0	; () banked
  8326   005C34  2BDF               	incf	normalize@k& (0+255),f,b
  8327   005C36                     l7779:
  8328                           
  8329                           ; BSR set to: 0
  8330   005C36  51DF               	movf	normalize@k& (0+255),w,b
  8331   005C38  6FD9               	movwf	??_normalize& (0+255),b
  8332   005C3A  6BDA               	clrf	(??_normalize+1)& (0+255),b
  8333   005C3C  51D5               	movf	normalize@N& (0+255),w,b
  8334   005C3E  5DD9               	subwf	??_normalize& (0+255),w,b
  8335   005C40  51DA               	movf	(??_normalize+1)& (0+255),w,b
  8336   005C42  0A80               	xorlw	128
  8337   005C44  6FDB               	movwf	(??_normalize+2)& (0+255),b
  8338   005C46  51D6               	movf	(normalize@N+1)& (0+255),w,b
  8339   005C48  0A80               	xorlw	128
  8340   005C4A  59DB               	subwfb	(??_normalize+2)& (0+255),w,b
  8341   005C4C  A0D8               	btfss	status,0,c
  8342   005C4E  EF2B  F02E         	goto	u7841
  8343   005C52  EF2D  F02E         	goto	u7840
  8344   005C56                     u7841:
  8345   005C56  EFE1  F02D         	goto	l7775
  8346   005C5A                     u7840:
  8347   005C5A                     
  8348                           ; BSR set to: 0
  8349                           ;main.c: 286:     media = media/N;
  8350   005C5A  C0DD  F00D         	movff	normalize@media,___awdiv@dividend
  8351   005C5E  C0DE  F00E         	movff	normalize@media+1,___awdiv@dividend+1
  8352   005C62  C0D5  F00F         	movff	normalize@N,___awdiv@divisor
  8353   005C66  C0D6  F010         	movff	normalize@N+1,___awdiv@divisor+1
  8354   005C6A  ECAD  F032         	call	___awdiv	;wreg free
  8355   005C6E  C00D  F0DD         	movff	?___awdiv,normalize@media
  8356   005C72  C00E  F0DE         	movff	?___awdiv+1,normalize@media+1
  8357   005C76                     
  8358                           ;main.c: 288:     for (k=0; k<N; k++)
  8359   005C76  0E00               	movlw	0
  8360   005C78  0100               	movlb	0	; () banked
  8361   005C7A  6FDF               	movwf	normalize@k& (0+255),b
  8362   005C7C  EFB3  F02E         	goto	l7789
  8363   005C80                     l7785:
  8364                           
  8365                           ; BSR set to: 0
  8366                           ;main.c: 289:     {;main.c: 290:         X[k] = X[k] - media;
  8367   005C80  51DF               	movf	normalize@k& (0+255),w,b
  8368   005C82  0D04               	mullw	4
  8369   005C84  CFF3 F0D9          	movff	prodl,??_normalize
  8370   005C88  CFF4 F0DA          	movff	prodh,??_normalize+1
  8371   005C8C  51D9               	movf	??_normalize& (0+255),w,b
  8372   005C8E  25D7               	addwf	normalize@X& (0+255),w,b
  8373   005C90  6ED9               	movwf	fsr2l,c
  8374   005C92  51DA               	movf	(??_normalize+1)& (0+255),w,b
  8375   005C94  21D8               	addwfc	(normalize@X+1)& (0+255),w,b
  8376   005C96  6EDA               	movwf	fsr2h,c
  8377   005C98  CFDE F060          	movff	postinc2,___flsub@b
  8378   005C9C  CFDE F061          	movff	postinc2,___flsub@b+1
  8379   005CA0  CFDE F062          	movff	postinc2,___flsub@b+2
  8380   005CA4  CFDE F063          	movff	postinc2,___flsub@b+3
  8381   005CA8  C0DD  F00D         	movff	normalize@media,___xxtofl@val
  8382   005CAC  C0DE  F00E         	movff	normalize@media+1,___xxtofl@val+1
  8383   005CB0  0E00               	movlw	0
  8384   005CB2  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  8385   005CB4  0EFF               	movlw	-1
  8386   005CB6  6E0F               	movwf	(___xxtofl@val+2)^0,c
  8387   005CB8  6E10               	movwf	(___xxtofl@val+3)^0,c
  8388   005CBA  0E01               	movlw	1
  8389   005CBC  ECC6  F02E         	call	___xxtofl
  8390   005CC0  C00D  F064         	movff	?___xxtofl,___flsub@a
  8391   005CC4  C00E  F065         	movff	?___xxtofl+1,___flsub@a+1
  8392   005CC8  C00F  F066         	movff	?___xxtofl+2,___flsub@a+2
  8393   005CCC  C010  F067         	movff	?___xxtofl+3,___flsub@a+3
  8394   005CD0  ECBB  F035         	call	___flsub	;wreg free
  8395   005CD4  0100               	movlb	0	; () banked
  8396   005CD6  51DF               	movf	normalize@k& (0+255),w,b
  8397   005CD8  0D04               	mullw	4
  8398   005CDA  CFF3 F0DB          	movff	prodl,??_normalize+2
  8399   005CDE  CFF4 F0DC          	movff	prodh,??_normalize+3
  8400   005CE2  51DB               	movf	(??_normalize+2)& (0+255),w,b
  8401   005CE4  25D7               	addwf	normalize@X& (0+255),w,b
  8402   005CE6  6ED9               	movwf	fsr2l,c
  8403   005CE8  51DC               	movf	(??_normalize+3)& (0+255),w,b
  8404   005CEA  21D8               	addwfc	(normalize@X+1)& (0+255),w,b
  8405   005CEC  6EDA               	movwf	fsr2h,c
  8406   005CEE  C060  FFDE         	movff	?___flsub,postinc2
  8407   005CF2  C061  FFDE         	movff	?___flsub+1,postinc2
  8408   005CF6  C062  FFDE         	movff	?___flsub+2,postinc2
  8409   005CFA  C063  FFDE         	movff	?___flsub+3,postinc2
  8410                           
  8411                           ;main.c: 291:         X[k] = X[k]/512;
  8412   005CFE  51DF               	movf	normalize@k& (0+255),w,b
  8413   005D00  0D04               	mullw	4
  8414   005D02  CFF3 F0D9          	movff	prodl,??_normalize
  8415   005D06  CFF4 F0DA          	movff	prodh,??_normalize+1
  8416   005D0A  51D9               	movf	??_normalize& (0+255),w,b
  8417   005D0C  25D7               	addwf	normalize@X& (0+255),w,b
  8418   005D0E  6ED9               	movwf	fsr2l,c
  8419   005D10  51DA               	movf	(??_normalize+1)& (0+255),w,b
  8420   005D12  21D8               	addwfc	(normalize@X+1)& (0+255),w,b
  8421   005D14  6EDA               	movwf	fsr2h,c
  8422   005D16  CFDE F068          	movff	postinc2,___fldiv@b
  8423   005D1A  CFDE F069          	movff	postinc2,___fldiv@b+1
  8424   005D1E  CFDE F06A          	movff	postinc2,___fldiv@b+2
  8425   005D22  CFDE F06B          	movff	postinc2,___fldiv@b+3
  8426   005D26  0E00               	movlw	0
  8427   005D28  6F6C               	movwf	___fldiv@a& (0+255),b
  8428   005D2A  0E00               	movlw	0
  8429   005D2C  6F6D               	movwf	(___fldiv@a+1)& (0+255),b
  8430   005D2E  0E00               	movlw	0
  8431   005D30  6F6E               	movwf	(___fldiv@a+2)& (0+255),b
  8432   005D32  0E44               	movlw	68
  8433   005D34  6F6F               	movwf	(___fldiv@a+3)& (0+255),b
  8434   005D36  EC95  F024         	call	___fldiv	;wreg free
  8435   005D3A  0100               	movlb	0	; () banked
  8436   005D3C  51DF               	movf	normalize@k& (0+255),w,b
  8437   005D3E  0D04               	mullw	4
  8438   005D40  CFF3 F0DB          	movff	prodl,??_normalize+2
  8439   005D44  CFF4 F0DC          	movff	prodh,??_normalize+3
  8440   005D48  51DB               	movf	(??_normalize+2)& (0+255),w,b
  8441   005D4A  25D7               	addwf	normalize@X& (0+255),w,b
  8442   005D4C  6ED9               	movwf	fsr2l,c
  8443   005D4E  51DC               	movf	(??_normalize+3)& (0+255),w,b
  8444   005D50  21D8               	addwfc	(normalize@X+1)& (0+255),w,b
  8445   005D52  6EDA               	movwf	fsr2h,c
  8446   005D54  C068  FFDE         	movff	?___fldiv,postinc2
  8447   005D58  C069  FFDE         	movff	?___fldiv+1,postinc2
  8448   005D5C  C06A  FFDE         	movff	?___fldiv+2,postinc2
  8449   005D60  C06B  FFDE         	movff	?___fldiv+3,postinc2
  8450   005D64                     
  8451                           ; BSR set to: 0
  8452                           ;main.c: 292:     }
  8453   005D64  2BDF               	incf	normalize@k& (0+255),f,b
  8454   005D66                     l7789:
  8455                           
  8456                           ; BSR set to: 0
  8457   005D66  51DF               	movf	normalize@k& (0+255),w,b
  8458   005D68  6FD9               	movwf	??_normalize& (0+255),b
  8459   005D6A  6BDA               	clrf	(??_normalize+1)& (0+255),b
  8460   005D6C  51D5               	movf	normalize@N& (0+255),w,b
  8461   005D6E  5DD9               	subwf	??_normalize& (0+255),w,b
  8462   005D70  51DA               	movf	(??_normalize+1)& (0+255),w,b
  8463   005D72  0A80               	xorlw	128
  8464   005D74  6FDB               	movwf	(??_normalize+2)& (0+255),b
  8465   005D76  51D6               	movf	(normalize@N+1)& (0+255),w,b
  8466   005D78  0A80               	xorlw	128
  8467   005D7A  59DB               	subwfb	(??_normalize+2)& (0+255),w,b
  8468   005D7C  A0D8               	btfss	status,0,c
  8469   005D7E  EFC3  F02E         	goto	u7851
  8470   005D82  EFC5  F02E         	goto	u7850
  8471   005D86                     u7851:
  8472   005D86  EF40  F02E         	goto	l7785
  8473   005D8A                     u7850:
  8474   005D8A                     
  8475                           ; BSR set to: 0
  8476   005D8A  0012               	return		;funcret
  8477   005D8C                     __end_of_normalize:
  8478                           	callstack 0
  8479                           
  8480 ;; *************** function _configSampling *****************
  8481 ;; Defined at:
  8482 ;;		line 137 in file "main.c"
  8483 ;; Parameters:    Size  Location     Type
  8484 ;;		None
  8485 ;; Auto vars:     Size  Location     Type
  8486 ;;		None
  8487 ;; Return value:  Size  Location     Type
  8488 ;;                  1    wreg      void 
  8489 ;; Registers used:
  8490 ;;		wreg, status,2, status,0, cstack
  8491 ;; Tracked objects:
  8492 ;;		On entry : 0/0
  8493 ;;		On exit  : 0/0
  8494 ;;		Unchanged: 0/0
  8495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8496 ;;      Params:         0       0       0       0       0       0       0       0       0
  8497 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8498 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8499 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8500 ;;Total ram usage:        2 bytes
  8501 ;; Hardware stack levels used: 1
  8502 ;; Hardware stack levels required when called: 3
  8503 ;; This function calls:
  8504 ;;		_configADCON
  8505 ;; This function is called by:
  8506 ;;		_main
  8507 ;; This function uses a non-reentrant model
  8508 ;;
  8509                           
  8510                           	psect	text28
  8511   0066C8                     __ptext28:
  8512                           	callstack 0
  8513   0066C8                     _configSampling:
  8514                           	callstack 27
  8515   0066C8                     
  8516                           ;main.c: 139:     for(canal=0;canal<2;canal++){
  8517   0066C8  0E00               	movlw	0
  8518   0066CA  6E50               	movwf	_canal^0,c
  8519   0066CC                     l7749:
  8520   0066CC  0E01               	movlw	1
  8521   0066CE  6450               	cpfsgt	_canal^0,c
  8522   0066D0  EF6C  F033         	goto	u7821
  8523   0066D4  EF6E  F033         	goto	u7820
  8524   0066D8                     u7821:
  8525   0066D8  EF82  F033         	goto	l7759
  8526   0066DC                     u7820:
  8527   0066DC  EFAB  F033         	goto	l193
  8528   0066E0                     l7753:
  8529   0066E0  0E06               	movlw	6
  8530   0066E2  6E0D               	movwf	configADCON@adcon1^0,c
  8531   0066E4  0EAD               	movlw	173
  8532   0066E6  6E0E               	movwf	configADCON@adcon2^0,c
  8533   0066E8  0E20               	movlw	32
  8534   0066EA  EC3D  F037         	call	_configADCON
  8535                           
  8536                           ;main.c: 142:           break;
  8537   0066EE  EF97  F033         	goto	l188
  8538   0066F2                     l7755:
  8539   0066F2  0E05               	movlw	5
  8540   0066F4  6E0D               	movwf	configADCON@adcon1^0,c
  8541   0066F6  0EAD               	movlw	173
  8542   0066F8  6E0E               	movwf	configADCON@adcon2^0,c
  8543   0066FA  0E24               	movlw	36
  8544   0066FC  EC3D  F037         	call	_configADCON
  8545                           
  8546                           ;main.c: 144:           break;
  8547   006700  EF97  F033         	goto	l188
  8548   006704                     l7759:
  8549   006704  5050               	movf	_canal^0,w,c
  8550   006706  6E10               	movwf	??_configSampling^0,c
  8551   006708  6A11               	clrf	(??_configSampling+1)^0,c
  8552                           
  8553                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8554                           ; Switch size 1, requested type "simple"
  8555                           ; Number of cases is 1, Range of values is 0 to 0
  8556                           ; switch strategies available:
  8557                           ; Name         Instructions Cycles
  8558                           ; simple_byte            4     3 (average)
  8559                           ;	Chosen strategy is simple_byte
  8560   00670A  5011               	movf	(??_configSampling+1)^0,w,c
  8561   00670C  0A00               	xorlw	0	; case 0
  8562   00670E  B4D8               	btfsc	status,2,c
  8563   006710  EF8C  F033         	goto	l8471
  8564   006714  EF97  F033         	goto	l188
  8565   006718                     l8471:
  8566                           
  8567                           ; Switch size 1, requested type "simple"
  8568                           ; Number of cases is 2, Range of values is 0 to 1
  8569                           ; switch strategies available:
  8570                           ; Name         Instructions Cycles
  8571                           ; simple_byte            7     4 (average)
  8572                           ;	Chosen strategy is simple_byte
  8573   006718  5010               	movf	??_configSampling^0,w,c
  8574   00671A  0A00               	xorlw	0	; case 0
  8575   00671C  B4D8               	btfsc	status,2,c
  8576   00671E  EF70  F033         	goto	l7753
  8577   006722  0A01               	xorlw	1	; case 1
  8578   006724  B4D8               	btfsc	status,2,c
  8579   006726  EF79  F033         	goto	l7755
  8580   00672A  EF97  F033         	goto	l188
  8581   00672E                     l188:
  8582                           
  8583                           ;main.c: 146:       INTCONbits.GIE=1;
  8584   00672E  8EF2               	bsf	242,7,c	;volatile
  8585   006730                     
  8586                           ;main.c: 147:       TMR0L=28;
  8587   006730  0E1C               	movlw	28
  8588   006732  6ED6               	movwf	214,c	;volatile
  8589                           
  8590                           ;main.c: 148:       k=0;
  8591   006734  0E00               	movlw	0
  8592   006736  6E51               	movwf	_k^0,c
  8593                           
  8594                           ;main.c: 149:       while(k<32){
  8595   006738  EF9F  F033         	goto	l7763
  8596   00673C                     l191:
  8597                           
  8598                           ;main.c: 150:           T0CONbits.TMR0ON=1;
  8599   00673C  8ED5               	bsf	213,7,c	;volatile
  8600   00673E                     l7763:
  8601                           
  8602                           ;main.c: 149:       while(k<32){
  8603   00673E  0E1F               	movlw	31
  8604   006740  6451               	cpfsgt	_k^0,c
  8605   006742  EFA5  F033         	goto	u7831
  8606   006746  EFA7  F033         	goto	u7830
  8607   00674A                     u7831:
  8608   00674A  EF9E  F033         	goto	l191
  8609   00674E                     u7830:
  8610   00674E                     
  8611                           ;main.c: 152:       INTCONbits.GIE=0;
  8612   00674E  9EF2               	bcf	242,7,c	;volatile
  8613   006750                     
  8614                           ;main.c: 153:     }
  8615   006750  2A50               	incf	_canal^0,f,c
  8616   006752  EF66  F033         	goto	l7749
  8617   006756                     l193:
  8618   006756  0012               	return		;funcret
  8619   006758                     __end_of_configSampling:
  8620                           	callstack 0
  8621                           
  8622 ;; *************** function _configADCON *****************
  8623 ;; Defined at:
  8624 ;;		line 295 in file "main.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;  adcon0          1    wreg     unsigned char 
  8627 ;;  adcon1          1   12[COMRAM] unsigned char 
  8628 ;;  adcon2          1   13[COMRAM] unsigned char 
  8629 ;; Auto vars:     Size  Location     Type
  8630 ;;  adcon0          1   14[COMRAM] unsigned char 
  8631 ;; Return value:  Size  Location     Type
  8632 ;;                  1    wreg      void 
  8633 ;; Registers used:
  8634 ;;		wreg
  8635 ;; Tracked objects:
  8636 ;;		On entry : 0/0
  8637 ;;		On exit  : 0/0
  8638 ;;		Unchanged: 0/0
  8639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8640 ;;      Params:         2       0       0       0       0       0       0       0       0
  8641 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8642 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8643 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8644 ;;Total ram usage:        3 bytes
  8645 ;; Hardware stack levels used: 1
  8646 ;; Hardware stack levels required when called: 2
  8647 ;; This function calls:
  8648 ;;		Nothing
  8649 ;; This function is called by:
  8650 ;;		_configSampling
  8651 ;;		_verifRes
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           	psect	text29
  8656   006E7A                     __ptext29:
  8657                           	callstack 0
  8658   006E7A                     _configADCON:
  8659                           	callstack 27
  8660                           
  8661                           ;incstack = 0
  8662                           ;configADCON@adcon0 stored from wreg
  8663   006E7A  6E0F               	movwf	configADCON@adcon0^0,c
  8664   006E7C                     
  8665                           ;main.c: 296:     ADCON0=adcon0;
  8666   006E7C  C00F  FFC2         	movff	configADCON@adcon0,4034	;volatile
  8667   006E80                     
  8668                           ;main.c: 297:     ADCON1=adcon1;
  8669   006E80  C00D  FFC1         	movff	configADCON@adcon1,4033	;volatile
  8670   006E84                     
  8671                           ;main.c: 298:     ADCON2=adcon2;
  8672   006E84  C00E  FFC0         	movff	configADCON@adcon2,4032	;volatile
  8673   006E88  0012               	return		;funcret
  8674   006E8A                     __end_of_configADCON:
  8675                           	callstack 0
  8676                           
  8677 ;; *************** function _bitrevsort *****************
  8678 ;; Defined at:
  8679 ;;		line 247 in file "main.c"
  8680 ;; Parameters:    Size  Location     Type
  8681 ;;  N               2   20[COMRAM] int 
  8682 ;;  Re_x            2   22[COMRAM] PTR float 
  8683 ;;		 -> Re_X(128), 
  8684 ;;  Im_x            2   24[COMRAM] PTR float 
  8685 ;;		 -> Im_X(128), 
  8686 ;; Auto vars:     Size  Location     Type
  8687 ;;  tempI           4   33[COMRAM] float 
  8688 ;;  tempR           4   29[COMRAM] float 
  8689 ;;  m               2   41[COMRAM] int 
  8690 ;;  n               2   39[COMRAM] int 
  8691 ;;  k               2   37[COMRAM] int 
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  1    wreg      void 
  8694 ;; Registers used:
  8695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8701 ;;      Params:         6       0       0       0       0       0       0       0       0
  8702 ;;      Locals:        14       0       0       0       0       0       0       0       0
  8703 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8704 ;;      Totals:        23       0       0       0       0       0       0       0       0
  8705 ;;Total ram usage:       23 bytes
  8706 ;; Hardware stack levels used: 1
  8707 ;; Hardware stack levels required when called: 3
  8708 ;; This function calls:
  8709 ;;		___awdiv
  8710 ;; This function is called by:
  8711 ;;		_main
  8712 ;; This function uses a non-reentrant model
  8713 ;;
  8714                           
  8715                           	psect	text30
  8716   0057AA                     __ptext30:
  8717                           	callstack 0
  8718   0057AA                     _bitrevsort:
  8719                           	callstack 27
  8720   0057AA                     
  8721                           ;main.c: 247: void bitrevsort (int N, float Re_x[], float Im_x[]);main.c: 248: {;main.c:
      +                           249:     int m, n, k;;main.c: 250:  float tempR, tempI;;main.c: 252:     m = N/2;
  8722   0057AA  C015  F00D         	movff	bitrevsort@N,___awdiv@dividend
  8723   0057AE  C016  F00E         	movff	bitrevsort@N+1,___awdiv@dividend+1
  8724   0057B2  0E00               	movlw	0
  8725   0057B4  6E10               	movwf	(___awdiv@divisor+1)^0,c
  8726   0057B6  0E02               	movlw	2
  8727   0057B8  6E0F               	movwf	___awdiv@divisor^0,c
  8728   0057BA  ECAD  F032         	call	___awdiv	;wreg free
  8729   0057BE  C00D  F02A         	movff	?___awdiv,bitrevsort@m
  8730   0057C2  C00E  F02B         	movff	?___awdiv+1,bitrevsort@m+1
  8731   0057C6                     
  8732                           ;main.c: 254:     for (n = 1; n <= N-2; n++)
  8733   0057C6  0E00               	movlw	0
  8734   0057C8  6E29               	movwf	(bitrevsort@n+1)^0,c
  8735   0057CA  0E01               	movlw	1
  8736   0057CC  6E28               	movwf	bitrevsort@n^0,c
  8737   0057CE  EFC3  F02C         	goto	l7815
  8738   0057D2                     l7795:
  8739                           
  8740                           ;main.c: 255:     {;main.c: 256:         if (n < m)
  8741   0057D2  502A               	movf	bitrevsort@m^0,w,c
  8742   0057D4  5C28               	subwf	bitrevsort@n^0,w,c
  8743   0057D6  5029               	movf	(bitrevsort@n+1)^0,w,c
  8744   0057D8  0A80               	xorlw	128
  8745   0057DA  6E1B               	movwf	??_bitrevsort^0,c
  8746   0057DC  502B               	movf	(bitrevsort@m+1)^0,w,c
  8747   0057DE  0A80               	xorlw	128
  8748   0057E0  581B               	subwfb	??_bitrevsort^0,w,c
  8749   0057E2  B0D8               	btfsc	status,0,c
  8750   0057E4  EFF6  F02B         	goto	u7861
  8751   0057E8  EFF8  F02B         	goto	u7860
  8752   0057EC                     u7861:
  8753   0057EC  EF88  F02C         	goto	l7803
  8754   0057F0                     u7860:
  8755   0057F0                     
  8756                           ;main.c: 257:         {;main.c: 258:             tempR = Re_x[m];
  8757   0057F0  90D8               	bcf	status,0,c
  8758   0057F2  342A               	rlcf	bitrevsort@m^0,w,c
  8759   0057F4  6ED9               	movwf	fsr2l,c
  8760   0057F6  342B               	rlcf	(bitrevsort@m+1)^0,w,c
  8761   0057F8  6EDA               	movwf	fsr2h,c
  8762   0057FA  90D8               	bcf	status,0,c
  8763   0057FC  36D9               	rlcf	fsr2l,f,c
  8764   0057FE  36DA               	rlcf	fsr2h,f,c
  8765   005800  5017               	movf	bitrevsort@Re_x^0,w,c
  8766   005802  26D9               	addwf	fsr2l,f,c
  8767   005804  5018               	movf	(bitrevsort@Re_x+1)^0,w,c
  8768   005806  22DA               	addwfc	fsr2h,f,c
  8769   005808  CFDE F01E          	movff	postinc2,bitrevsort@tempR
  8770   00580C  CFDE F01F          	movff	postinc2,bitrevsort@tempR+1
  8771   005810  CFDE F020          	movff	postinc2,bitrevsort@tempR+2
  8772   005814  CFDE F021          	movff	postinc2,bitrevsort@tempR+3
  8773                           
  8774                           ;main.c: 259:             tempI = Im_x[m];
  8775   005818  90D8               	bcf	status,0,c
  8776   00581A  342A               	rlcf	bitrevsort@m^0,w,c
  8777   00581C  6ED9               	movwf	fsr2l,c
  8778   00581E  342B               	rlcf	(bitrevsort@m+1)^0,w,c
  8779   005820  6EDA               	movwf	fsr2h,c
  8780   005822  90D8               	bcf	status,0,c
  8781   005824  36D9               	rlcf	fsr2l,f,c
  8782   005826  36DA               	rlcf	fsr2h,f,c
  8783   005828  5019               	movf	bitrevsort@Im_x^0,w,c
  8784   00582A  26D9               	addwf	fsr2l,f,c
  8785   00582C  501A               	movf	(bitrevsort@Im_x+1)^0,w,c
  8786   00582E  22DA               	addwfc	fsr2h,f,c
  8787   005830  CFDE F022          	movff	postinc2,bitrevsort@tempI
  8788   005834  CFDE F023          	movff	postinc2,bitrevsort@tempI+1
  8789   005838  CFDE F024          	movff	postinc2,bitrevsort@tempI+2
  8790   00583C  CFDE F025          	movff	postinc2,bitrevsort@tempI+3
  8791   005840                     
  8792                           ;main.c: 260:             Re_x[m] = Re_x[n];
  8793   005840  90D8               	bcf	status,0,c
  8794   005842  3428               	rlcf	bitrevsort@n^0,w,c
  8795   005844  6ED9               	movwf	fsr2l,c
  8796   005846  3429               	rlcf	(bitrevsort@n+1)^0,w,c
  8797   005848  6EDA               	movwf	fsr2h,c
  8798   00584A  90D8               	bcf	status,0,c
  8799   00584C  36D9               	rlcf	fsr2l,f,c
  8800   00584E  36DA               	rlcf	fsr2h,f,c
  8801   005850  5017               	movf	bitrevsort@Re_x^0,w,c
  8802   005852  26D9               	addwf	fsr2l,f,c
  8803   005854  5018               	movf	(bitrevsort@Re_x+1)^0,w,c
  8804   005856  22DA               	addwfc	fsr2h,f,c
  8805   005858  90D8               	bcf	status,0,c
  8806   00585A  342A               	rlcf	bitrevsort@m^0,w,c
  8807   00585C  6EE1               	movwf	fsr1l,c
  8808   00585E  342B               	rlcf	(bitrevsort@m+1)^0,w,c
  8809   005860  6EE2               	movwf	fsr1h,c
  8810   005862  90D8               	bcf	status,0,c
  8811   005864  36E1               	rlcf	fsr1l,f,c
  8812   005866  36E2               	rlcf	fsr1h,f,c
  8813   005868  5017               	movf	bitrevsort@Re_x^0,w,c
  8814   00586A  26E1               	addwf	fsr1l,f,c
  8815   00586C  5018               	movf	(bitrevsort@Re_x+1)^0,w,c
  8816   00586E  22E2               	addwfc	fsr1h,f,c
  8817   005870  CFDE FFE6          	movff	postinc2,postinc1
  8818   005874  CFDE FFE6          	movff	postinc2,postinc1
  8819   005878  CFDE FFE6          	movff	postinc2,postinc1
  8820   00587C  CFDE FFE6          	movff	postinc2,postinc1
  8821   005880                     
  8822                           ;main.c: 261:             Im_x[m] = Im_x[n];
  8823   005880  90D8               	bcf	status,0,c
  8824   005882  3428               	rlcf	bitrevsort@n^0,w,c
  8825   005884  6ED9               	movwf	fsr2l,c
  8826   005886  3429               	rlcf	(bitrevsort@n+1)^0,w,c
  8827   005888  6EDA               	movwf	fsr2h,c
  8828   00588A  90D8               	bcf	status,0,c
  8829   00588C  36D9               	rlcf	fsr2l,f,c
  8830   00588E  36DA               	rlcf	fsr2h,f,c
  8831   005890  5019               	movf	bitrevsort@Im_x^0,w,c
  8832   005892  26D9               	addwf	fsr2l,f,c
  8833   005894  501A               	movf	(bitrevsort@Im_x+1)^0,w,c
  8834   005896  22DA               	addwfc	fsr2h,f,c
  8835   005898  90D8               	bcf	status,0,c
  8836   00589A  342A               	rlcf	bitrevsort@m^0,w,c
  8837   00589C  6EE1               	movwf	fsr1l,c
  8838   00589E  342B               	rlcf	(bitrevsort@m+1)^0,w,c
  8839   0058A0  6EE2               	movwf	fsr1h,c
  8840   0058A2  90D8               	bcf	status,0,c
  8841   0058A4  36E1               	rlcf	fsr1l,f,c
  8842   0058A6  36E2               	rlcf	fsr1h,f,c
  8843   0058A8  5019               	movf	bitrevsort@Im_x^0,w,c
  8844   0058AA  26E1               	addwf	fsr1l,f,c
  8845   0058AC  501A               	movf	(bitrevsort@Im_x+1)^0,w,c
  8846   0058AE  22E2               	addwfc	fsr1h,f,c
  8847   0058B0  CFDE FFE6          	movff	postinc2,postinc1
  8848   0058B4  CFDE FFE6          	movff	postinc2,postinc1
  8849   0058B8  CFDE FFE6          	movff	postinc2,postinc1
  8850   0058BC  CFDE FFE6          	movff	postinc2,postinc1
  8851                           
  8852                           ;main.c: 262:             Re_x[n] = tempR;
  8853   0058C0  90D8               	bcf	status,0,c
  8854   0058C2  3428               	rlcf	bitrevsort@n^0,w,c
  8855   0058C4  6ED9               	movwf	fsr2l,c
  8856   0058C6  3429               	rlcf	(bitrevsort@n+1)^0,w,c
  8857   0058C8  6EDA               	movwf	fsr2h,c
  8858   0058CA  90D8               	bcf	status,0,c
  8859   0058CC  36D9               	rlcf	fsr2l,f,c
  8860   0058CE  36DA               	rlcf	fsr2h,f,c
  8861   0058D0  5017               	movf	bitrevsort@Re_x^0,w,c
  8862   0058D2  26D9               	addwf	fsr2l,f,c
  8863   0058D4  5018               	movf	(bitrevsort@Re_x+1)^0,w,c
  8864   0058D6  22DA               	addwfc	fsr2h,f,c
  8865   0058D8  C01E  FFDE         	movff	bitrevsort@tempR,postinc2
  8866   0058DC  C01F  FFDE         	movff	bitrevsort@tempR+1,postinc2
  8867   0058E0  C020  FFDE         	movff	bitrevsort@tempR+2,postinc2
  8868   0058E4  C021  FFDE         	movff	bitrevsort@tempR+3,postinc2
  8869                           
  8870                           ;main.c: 263:             Im_x[n] = tempI;
  8871   0058E8  90D8               	bcf	status,0,c
  8872   0058EA  3428               	rlcf	bitrevsort@n^0,w,c
  8873   0058EC  6ED9               	movwf	fsr2l,c
  8874   0058EE  3429               	rlcf	(bitrevsort@n+1)^0,w,c
  8875   0058F0  6EDA               	movwf	fsr2h,c
  8876   0058F2  90D8               	bcf	status,0,c
  8877   0058F4  36D9               	rlcf	fsr2l,f,c
  8878   0058F6  36DA               	rlcf	fsr2h,f,c
  8879   0058F8  5019               	movf	bitrevsort@Im_x^0,w,c
  8880   0058FA  26D9               	addwf	fsr2l,f,c
  8881   0058FC  501A               	movf	(bitrevsort@Im_x+1)^0,w,c
  8882   0058FE  22DA               	addwfc	fsr2h,f,c
  8883   005900  C022  FFDE         	movff	bitrevsort@tempI,postinc2
  8884   005904  C023  FFDE         	movff	bitrevsort@tempI+1,postinc2
  8885   005908  C024  FFDE         	movff	bitrevsort@tempI+2,postinc2
  8886   00590C  C025  FFDE         	movff	bitrevsort@tempI+3,postinc2
  8887   005910                     l7803:
  8888                           
  8889                           ;main.c: 266:         k = N/2;
  8890   005910  C015  F00D         	movff	bitrevsort@N,___awdiv@dividend
  8891   005914  C016  F00E         	movff	bitrevsort@N+1,___awdiv@dividend+1
  8892   005918  0E00               	movlw	0
  8893   00591A  6E10               	movwf	(___awdiv@divisor+1)^0,c
  8894   00591C  0E02               	movlw	2
  8895   00591E  6E0F               	movwf	___awdiv@divisor^0,c
  8896   005920  ECAD  F032         	call	___awdiv	;wreg free
  8897   005924  C00D  F026         	movff	?___awdiv,bitrevsort@k
  8898   005928  C00E  F027         	movff	?___awdiv+1,bitrevsort@k+1
  8899                           
  8900                           ;main.c: 267:         while (k <= m)
  8901   00592C  EFAC  F02C         	goto	l7809
  8902   005930                     l7805:
  8903                           
  8904                           ;main.c: 268:         {;main.c: 269:             m = m-k;
  8905   005930  5026               	movf	bitrevsort@k^0,w,c
  8906   005932  5C2A               	subwf	bitrevsort@m^0,w,c
  8907   005934  6E2A               	movwf	bitrevsort@m^0,c
  8908   005936  5027               	movf	(bitrevsort@k+1)^0,w,c
  8909   005938  582B               	subwfb	(bitrevsort@m+1)^0,w,c
  8910   00593A  6E2B               	movwf	(bitrevsort@m+1)^0,c
  8911   00593C                     
  8912                           ;main.c: 270:             k = k/2;
  8913   00593C  C026  F00D         	movff	bitrevsort@k,___awdiv@dividend
  8914   005940  C027  F00E         	movff	bitrevsort@k+1,___awdiv@dividend+1
  8915   005944  0E00               	movlw	0
  8916   005946  6E10               	movwf	(___awdiv@divisor+1)^0,c
  8917   005948  0E02               	movlw	2
  8918   00594A  6E0F               	movwf	___awdiv@divisor^0,c
  8919   00594C  ECAD  F032         	call	___awdiv	;wreg free
  8920   005950  C00D  F026         	movff	?___awdiv,bitrevsort@k
  8921   005954  C00E  F027         	movff	?___awdiv+1,bitrevsort@k+1
  8922   005958                     l7809:
  8923                           
  8924                           ;main.c: 267:         while (k <= m)
  8925   005958  5026               	movf	bitrevsort@k^0,w,c
  8926   00595A  5C2A               	subwf	bitrevsort@m^0,w,c
  8927   00595C  502B               	movf	(bitrevsort@m+1)^0,w,c
  8928   00595E  0A80               	xorlw	128
  8929   005960  6E1B               	movwf	??_bitrevsort^0,c
  8930   005962  5027               	movf	(bitrevsort@k+1)^0,w,c
  8931   005964  0A80               	xorlw	128
  8932   005966  581B               	subwfb	??_bitrevsort^0,w,c
  8933   005968  B0D8               	btfsc	status,0,c
  8934   00596A  EFB9  F02C         	goto	u7871
  8935   00596E  EFBB  F02C         	goto	u7870
  8936   005972                     u7871:
  8937   005972  EF98  F02C         	goto	l7805
  8938   005976                     u7870:
  8939   005976                     
  8940                           ;main.c: 272:         m = m+k;
  8941   005976  5026               	movf	bitrevsort@k^0,w,c
  8942   005978  242A               	addwf	bitrevsort@m^0,w,c
  8943   00597A  6E2A               	movwf	bitrevsort@m^0,c
  8944   00597C  5027               	movf	(bitrevsort@k+1)^0,w,c
  8945   00597E  202B               	addwfc	(bitrevsort@m+1)^0,w,c
  8946   005980  6E2B               	movwf	(bitrevsort@m+1)^0,c
  8947   005982                     
  8948                           ;main.c: 273:     }
  8949   005982  4A28               	infsnz	bitrevsort@n^0,f,c
  8950   005984  2A29               	incf	(bitrevsort@n+1)^0,f,c
  8951   005986                     l7815:
  8952   005986  0EFE               	movlw	254
  8953   005988  2415               	addwf	bitrevsort@N^0,w,c
  8954   00598A  6E1B               	movwf	??_bitrevsort^0,c
  8955   00598C  0EFF               	movlw	255
  8956   00598E  2016               	addwfc	(bitrevsort@N+1)^0,w,c
  8957   005990  6E1C               	movwf	(??_bitrevsort+1)^0,c
  8958   005992  5028               	movf	bitrevsort@n^0,w,c
  8959   005994  5C1B               	subwf	??_bitrevsort^0,w,c
  8960   005996  501C               	movf	(??_bitrevsort+1)^0,w,c
  8961   005998  0A80               	xorlw	128
  8962   00599A  6E1D               	movwf	(??_bitrevsort+2)^0,c
  8963   00599C  5029               	movf	(bitrevsort@n+1)^0,w,c
  8964   00599E  0A80               	xorlw	128
  8965   0059A0  581D               	subwfb	(??_bitrevsort+2)^0,w,c
  8966   0059A2  B0D8               	btfsc	status,0,c
  8967   0059A4  EFD6  F02C         	goto	u7881
  8968   0059A8  EFD8  F02C         	goto	u7880
  8969   0059AC                     u7881:
  8970   0059AC  EFE9  F02B         	goto	l7795
  8971   0059B0                     u7880:
  8972   0059B0  0012               	return		;funcret
  8973   0059B2                     __end_of_bitrevsort:
  8974                           	callstack 0
  8975                           
  8976 ;; *************** function _SPI_config *****************
  8977 ;; Defined at:
  8978 ;;		line 429 in file "main.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;		None
  8981 ;; Auto vars:     Size  Location     Type
  8982 ;;		None
  8983 ;; Return value:  Size  Location     Type
  8984 ;;                  1    wreg      void 
  8985 ;; Registers used:
  8986 ;;		wreg, status,2, cstack
  8987 ;; Tracked objects:
  8988 ;;		On entry : 0/0
  8989 ;;		On exit  : 0/0
  8990 ;;		Unchanged: 0/0
  8991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8992 ;;      Params:         0       0       0       0       0       0       0       0       0
  8993 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8994 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8995 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8996 ;;Total ram usage:        0 bytes
  8997 ;; Hardware stack levels used: 1
  8998 ;; Hardware stack levels required when called: 4
  8999 ;; This function calls:
  9000 ;;		_SPI_MCP41
  9001 ;; This function is called by:
  9002 ;;		_main
  9003 ;; This function uses a non-reentrant model
  9004 ;;
  9005                           
  9006                           	psect	text31
  9007   006E30                     __ptext31:
  9008                           	callstack 0
  9009   006E30                     _SPI_config:
  9010                           	callstack 26
  9011   006E30                     
  9012                           ;main.c: 431:  TRISC7 = 0;
  9013   006E30  9E94               	bcf	3988,7,c	;volatile
  9014                           
  9015                           ;main.c: 432:  TRISB0 = 1;
  9016   006E32  8093               	bsf	3987,0,c	;volatile
  9017                           
  9018                           ;main.c: 433:  TRISB1 = 0;
  9019   006E34  9293               	bcf	3987,1,c	;volatile
  9020                           
  9021                           ;main.c: 434:  TRISA5 = 0;
  9022   006E36  9A92               	bcf	3986,5,c	;volatile
  9023                           
  9024                           ;main.c: 436:  PORTAbits.RA5 = 1;
  9025   006E38  8A80               	bsf	128,5,c	;volatile
  9026   006E3A                     
  9027                           ;main.c: 438:  SSPCON1 = 0b00100010;
  9028   006E3A  0E22               	movlw	34
  9029   006E3C  6EC6               	movwf	198,c	;volatile
  9030                           
  9031                           ;main.c: 443:  SSPSTAT = 0b01000000;
  9032   006E3E  0E40               	movlw	64
  9033   006E40  6EC7               	movwf	199,c	;volatile
  9034   006E42                     
  9035                           ;main.c: 450:      SPI_MCP41(0x11,pot_value);
  9036   006E42  C175  F00E         	movff	_pot_value,SPI_MCP41@dado
  9037   006E46  0E11               	movlw	17
  9038   006E48  EC33  F037         	call	_SPI_MCP41
  9039   006E4C  0012               	return		;funcret
  9040   006E4E                     __end_of_SPI_config:
  9041                           	callstack 0
  9042                           
  9043 ;; *************** function _SPI_MCP41 *****************
  9044 ;; Defined at:
  9045 ;;		line 464 in file "main.c"
  9046 ;; Parameters:    Size  Location     Type
  9047 ;;  comando         1    wreg     unsigned char 
  9048 ;;  dado            1   13[COMRAM] unsigned char 
  9049 ;; Auto vars:     Size  Location     Type
  9050 ;;  comando         1   14[COMRAM] unsigned char 
  9051 ;; Return value:  Size  Location     Type
  9052 ;;                  1    wreg      void 
  9053 ;; Registers used:
  9054 ;;		wreg, status,2, cstack
  9055 ;; Tracked objects:
  9056 ;;		On entry : 0/0
  9057 ;;		On exit  : 0/0
  9058 ;;		Unchanged: 0/0
  9059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9060 ;;      Params:         1       0       0       0       0       0       0       0       0
  9061 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9062 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9063 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9064 ;;Total ram usage:        2 bytes
  9065 ;; Hardware stack levels used: 1
  9066 ;; Hardware stack levels required when called: 3
  9067 ;; This function calls:
  9068 ;;		_SPI_transm
  9069 ;; This function is called by:
  9070 ;;		_verifRes
  9071 ;;		_SPI_config
  9072 ;; This function uses a non-reentrant model
  9073 ;;
  9074                           
  9075                           	psect	text32
  9076   006E66                     __ptext32:
  9077                           	callstack 0
  9078   006E66                     _SPI_MCP41:
  9079                           	callstack 26
  9080                           
  9081                           ;incstack = 0
  9082                           ;SPI_MCP41@comando stored from wreg
  9083   006E66  6E0F               	movwf	SPI_MCP41@comando^0,c
  9084   006E68                     
  9085                           ;main.c: 464: void SPI_MCP41(unsigned char comando, unsigned char dado);main.c: 465: {;m
      +                          ain.c: 466:     PORTAbits.RA5 = 0;
  9086   006E68  9A80               	bcf	128,5,c	;volatile
  9087   006E6A                     
  9088                           ;main.c: 467:     SPI_transm(comando);
  9089   006E6A  500F               	movf	SPI_MCP41@comando^0,w,c
  9090   006E6C  EC27  F037         	call	_SPI_transm
  9091                           
  9092                           ;main.c: 468:     SPI_transm(dado);
  9093   006E70  500E               	movf	SPI_MCP41@dado^0,w,c
  9094   006E72  EC27  F037         	call	_SPI_transm
  9095   006E76                     
  9096                           ;main.c: 469:     PORTAbits.RA5 = 1;
  9097   006E76  8A80               	bsf	128,5,c	;volatile
  9098   006E78  0012               	return		;funcret
  9099   006E7A                     __end_of_SPI_MCP41:
  9100                           	callstack 0
  9101                           
  9102 ;; *************** function _SPI_transm *****************
  9103 ;; Defined at:
  9104 ;;		line 453 in file "main.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;  dado            1    wreg     unsigned char 
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;  dado            1   12[COMRAM] unsigned char 
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  1    wreg      unsigned char 
  9111 ;; Registers used:
  9112 ;;		wreg
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9118 ;;      Params:         0       0       0       0       0       0       0       0       0
  9119 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9121 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9122 ;;Total ram usage:        1 bytes
  9123 ;; Hardware stack levels used: 1
  9124 ;; Hardware stack levels required when called: 2
  9125 ;; This function calls:
  9126 ;;		Nothing
  9127 ;; This function is called by:
  9128 ;;		_SPI_MCP41
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           	psect	text33
  9133   006E4E                     __ptext33:
  9134                           	callstack 0
  9135   006E4E                     _SPI_transm:
  9136                           	callstack 26
  9137                           
  9138                           ;incstack = 0
  9139                           ;SPI_transm@dado stored from wreg
  9140   006E4E  6E0D               	movwf	SPI_transm@dado^0,c
  9141   006E50                     
  9142                           ;main.c: 453: unsigned char SPI_transm(unsigned char dado);main.c: 454: {;main.c: 455:  
      +                          SSPBUF = dado;
  9143   006E50  C00D  FFC9         	movff	SPI_transm@dado,4041	;volatile
  9144   006E54                     l280:
  9145                           
  9146                           ;main.c: 457:  while(!SSPSTATbits.BF)
  9147   006E54  A0C7               	btfss	199,0,c	;volatile
  9148   006E56  EF2F  F037         	goto	u7291
  9149   006E5A  EF31  F037         	goto	u7290
  9150   006E5E                     u7291:
  9151   006E5E  EF2A  F037         	goto	l280
  9152   006E62                     u7290:
  9153   006E62  50C9               	movf	201,w,c	;volatile
  9154   006E64  0012               	return		;funcret
  9155   006E66                     __end_of_SPI_transm:
  9156                           	callstack 0
  9157                           
  9158 ;; *************** function _LCD_Initialize *****************
  9159 ;; Defined at:
  9160 ;;		line 326 in file "main.c"
  9161 ;; Parameters:    Size  Location     Type
  9162 ;;		None
  9163 ;; Auto vars:     Size  Location     Type
  9164 ;;		None
  9165 ;; Return value:  Size  Location     Type
  9166 ;;                  1    wreg      void 
  9167 ;; Registers used:
  9168 ;;		wreg, status,2, status,0, cstack
  9169 ;; Tracked objects:
  9170 ;;		On entry : 0/0
  9171 ;;		On exit  : 0/0
  9172 ;;		Unchanged: 0/0
  9173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9174 ;;      Params:         0       0       0       0       0       0       0       0       0
  9175 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9176 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9177 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9178 ;;Total ram usage:        1 bytes
  9179 ;; Hardware stack levels used: 1
  9180 ;; Hardware stack levels required when called: 4
  9181 ;; This function calls:
  9182 ;;		_LCDPutCmd
  9183 ;; This function is called by:
  9184 ;;		_main
  9185 ;; This function uses a non-reentrant model
  9186 ;;
  9187                           
  9188                           	psect	text34
  9189   006A7C                     __ptext34:
  9190                           	callstack 0
  9191   006A7C                     _LCD_Initialize:
  9192                           	callstack 26
  9193   006A7C                     
  9194                           ;main.c: 329:     PORTA = 0;
  9195   006A7C  0E00               	movlw	0
  9196   006A7E  6E80               	movwf	128,c	;volatile
  9197                           
  9198                           ;main.c: 331:     TRISA = 0x00;
  9199   006A80  0E00               	movlw	0
  9200   006A82  6E92               	movwf	146,c	;volatile
  9201   006A84                     
  9202                           ;main.c: 337:     _delay((unsigned long)((15)*(16000000/4000.0)));
  9203   006A84  0E4E               	movlw	78
  9204   006A86  6E12               	movwf	??_LCD_Initialize^0,c
  9205   006A88  0EEB               	movlw	235
  9206   006A8A                     u8277:
  9207   006A8A  2EE8               	decfsz	wreg,f,c
  9208   006A8C  D7FE               	bra	u8277
  9209   006A8E  2E12               	decfsz	??_LCD_Initialize^0,f,c
  9210   006A90  D7FC               	bra	u8277
  9211   006A92  F000               	nop	
  9212   006A94                     
  9213                           ;main.c: 340:     LCDPutCmd(0x32);
  9214   006A94  0E32               	movlw	50
  9215   006A96  ECC7  F036         	call	_LCDPutCmd
  9216   006A9A                     
  9217                           ;main.c: 342:     _delay((unsigned long)((4)*(16000000/4000.0)));
  9218   006A9A  0E15               	movlw	21
  9219   006A9C  6E12               	movwf	??_LCD_Initialize^0,c
  9220   006A9E  0EC6               	movlw	198
  9221   006AA0                     u8287:
  9222   006AA0  2EE8               	decfsz	wreg,f,c
  9223   006AA2  D7FE               	bra	u8287
  9224   006AA4  2E12               	decfsz	??_LCD_Initialize^0,f,c
  9225   006AA6  D7FC               	bra	u8287
  9226   006AA8  D000               	nop2	
  9227   006AAA                     
  9228                           ;main.c: 345:     LCDPutCmd(0x28);
  9229   006AAA  0E28               	movlw	40
  9230   006AAC  ECC7  F036         	call	_LCDPutCmd
  9231   006AB0                     
  9232                           ;main.c: 348:     LCDPutCmd(0x0C);
  9233   006AB0  0E0C               	movlw	12
  9234   006AB2  ECC7  F036         	call	_LCDPutCmd
  9235   006AB6                     
  9236                           ;main.c: 350:     LCDPutCmd(0x01);
  9237   006AB6  0E01               	movlw	1
  9238   006AB8  ECC7  F036         	call	_LCDPutCmd
  9239   006ABC                     
  9240                           ;main.c: 353:     LCDPutCmd(0x06);
  9241   006ABC  0E06               	movlw	6
  9242   006ABE  ECC7  F036         	call	_LCDPutCmd
  9243   006AC2                     
  9244                           ;main.c: 355:     _delay((unsigned long)((2)*(16000000/4000.0)));
  9245   006AC2  0E0B               	movlw	11
  9246   006AC4  6E12               	movwf	??_LCD_Initialize^0,c
  9247   006AC6  0E62               	movlw	98
  9248   006AC8                     u8297:
  9249   006AC8  2EE8               	decfsz	wreg,f,c
  9250   006ACA  D7FE               	bra	u8297
  9251   006ACC  2E12               	decfsz	??_LCD_Initialize^0,f,c
  9252   006ACE  D7FC               	bra	u8297
  9253   006AD0  D000               	nop2	
  9254   006AD2  0012               	return		;funcret
  9255   006AD4                     __end_of_LCD_Initialize:
  9256                           	callstack 0
  9257                           
  9258 ;; *************** function _LCDPutCmd *****************
  9259 ;; Defined at:
  9260 ;;		line 372 in file "main.c"
  9261 ;; Parameters:    Size  Location     Type
  9262 ;;  ch              1    wreg     unsigned char 
  9263 ;; Auto vars:     Size  Location     Type
  9264 ;;  ch              1   16[COMRAM] unsigned char 
  9265 ;; Return value:  Size  Location     Type
  9266 ;;                  1    wreg      void 
  9267 ;; Registers used:
  9268 ;;		wreg, status,2, status,0, cstack
  9269 ;; Tracked objects:
  9270 ;;		On entry : 0/0
  9271 ;;		On exit  : 0/0
  9272 ;;		Unchanged: 0/0
  9273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9274 ;;      Params:         0       0       0       0       0       0       0       0       0
  9275 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9276 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9277 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9278 ;;Total ram usage:        2 bytes
  9279 ;; Hardware stack levels used: 1
  9280 ;; Hardware stack levels required when called: 3
  9281 ;; This function calls:
  9282 ;;		_LCDWriteNibble
  9283 ;; This function is called by:
  9284 ;;		_main
  9285 ;;		_verifRes
  9286 ;;		_LCDGoto
  9287 ;;		_LCD_Initialize
  9288 ;; This function uses a non-reentrant model
  9289 ;;
  9290                           
  9291                           	psect	text35
  9292   006D8E                     __ptext35:
  9293                           	callstack 0
  9294   006D8E                     _LCDPutCmd:
  9295                           	callstack 26
  9296                           
  9297                           ;incstack = 0
  9298                           ;LCDPutCmd@ch stored from wreg
  9299   006D8E  6E11               	movwf	LCDPutCmd@ch^0,c
  9300   006D90                     
  9301                           ;main.c: 372: void LCDPutCmd(char ch);main.c: 373: {;main.c: 374:     _delay((unsigned l
      +                          ong)((5)*(16000000/4000.0)));
  9302   006D90  0E1A               	movlw	26
  9303   006D92  6E10               	movwf	??_LCDPutCmd^0,c
  9304   006D94  0EF8               	movlw	248
  9305   006D96                     u8307:
  9306   006D96  2EE8               	decfsz	wreg,f,c
  9307   006D98  D7FE               	bra	u8307
  9308   006D9A  2E10               	decfsz	??_LCDPutCmd^0,f,c
  9309   006D9C  D7FC               	bra	u8307
  9310   006D9E  D000               	nop2	
  9311   006DA0                     
  9312                           ;main.c: 377:     LCDWriteNibble(ch,0);
  9313   006DA0  0E00               	movlw	0
  9314   006DA2  6E0D               	movwf	LCDWriteNibble@rs^0,c
  9315   006DA4  5011               	movf	LCDPutCmd@ch^0,w,c
  9316   006DA6  EC44  F036         	call	_LCDWriteNibble
  9317   006DAA                     
  9318                           ;main.c: 380:     ch = (ch << 4);
  9319   006DAA  3811               	swapf	LCDPutCmd@ch^0,w,c
  9320   006DAC  0BF0               	andlw	240
  9321   006DAE  6E11               	movwf	LCDPutCmd@ch^0,c
  9322   006DB0                     
  9323                           ;main.c: 383:     LCDWriteNibble(ch,0);
  9324   006DB0  0E00               	movlw	0
  9325   006DB2  6E0D               	movwf	LCDWriteNibble@rs^0,c
  9326   006DB4  5011               	movf	LCDPutCmd@ch^0,w,c
  9327   006DB6  EC44  F036         	call	_LCDWriteNibble
  9328   006DBA  0012               	return		;funcret
  9329   006DBC                     __end_of_LCDPutCmd:
  9330                           	callstack 0
  9331                           
  9332 ;; *************** function _LCDWriteNibble *****************
  9333 ;; Defined at:
  9334 ;;		line 400 in file "main.c"
  9335 ;; Parameters:    Size  Location     Type
  9336 ;;  ch              1    wreg     unsigned char 
  9337 ;;  rs              1   12[COMRAM] unsigned char 
  9338 ;; Auto vars:     Size  Location     Type
  9339 ;;  ch              1   14[COMRAM] unsigned char 
  9340 ;; Return value:  Size  Location     Type
  9341 ;;                  1    wreg      void 
  9342 ;; Registers used:
  9343 ;;		wreg, status,2, status,0
  9344 ;; Tracked objects:
  9345 ;;		On entry : 0/0
  9346 ;;		On exit  : 0/0
  9347 ;;		Unchanged: 0/0
  9348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9349 ;;      Params:         1       0       0       0       0       0       0       0       0
  9350 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9351 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9352 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9353 ;;Total ram usage:        3 bytes
  9354 ;; Hardware stack levels used: 1
  9355 ;; Hardware stack levels required when called: 2
  9356 ;; This function calls:
  9357 ;;		Nothing
  9358 ;; This function is called by:
  9359 ;;		_LCDPutChar
  9360 ;;		_LCDPutCmd
  9361 ;; This function uses a non-reentrant model
  9362 ;;
  9363                           
  9364                           	psect	text36
  9365   006C88                     __ptext36:
  9366                           	callstack 0
  9367   006C88                     _LCDWriteNibble:
  9368                           	callstack 25
  9369                           
  9370                           ;incstack = 0
  9371                           ;LCDWriteNibble@ch stored from wreg
  9372   006C88  6E0F               	movwf	LCDWriteNibble@ch^0,c
  9373   006C8A                     
  9374                           ;main.c: 400: void LCDWriteNibble(char ch, char rs);main.c: 401: {;main.c: 403:     ch =
      +                           (ch >> 4);
  9375   006C8A  380F               	swapf	LCDWriteNibble@ch^0,w,c
  9376   006C8C  0B0F               	andlw	15
  9377   006C8E  6E0F               	movwf	LCDWriteNibble@ch^0,c
  9378                           
  9379                           ;main.c: 406:     ch = (ch & 0x0F);
  9380   006C90  500F               	movf	LCDWriteNibble@ch^0,w,c
  9381   006C92  0B0F               	andlw	15
  9382   006C94  6E0F               	movwf	LCDWriteNibble@ch^0,c
  9383                           
  9384                           ;main.c: 409:     PORTA = (PORTA & 0xF0);
  9385   006C96  5080               	movf	128,w,c	;volatile
  9386   006C98  0BF0               	andlw	240
  9387   006C9A  6E80               	movwf	128,c	;volatile
  9388                           
  9389                           ;main.c: 412:     PORTA = (PORTA | ch);
  9390   006C9C  5080               	movf	128,w,c	;volatile
  9391   006C9E  100F               	iorwf	LCDWriteNibble@ch^0,w,c
  9392   006CA0  6E80               	movwf	128,c	;volatile
  9393   006CA2                     
  9394                           ;main.c: 415:     PORTBbits.RB5 = rs;
  9395   006CA2  B00D               	btfsc	LCDWriteNibble@rs^0,0,c
  9396   006CA4  D002               	bra	u7135
  9397   006CA6  9A81               	bcf	129,5,c	;volatile
  9398   006CA8  D001               	bra	u7136
  9399   006CAA                     u7135:
  9400   006CAA  8A81               	bsf	129,5,c	;volatile
  9401   006CAC                     u7136:
  9402   006CAC                     
  9403                           ;main.c: 420:     _delay((unsigned long)((5)*(16000000/4000.0)));
  9404   006CAC  0E1A               	movlw	26
  9405   006CAE  6E0E               	movwf	??_LCDWriteNibble^0,c
  9406   006CB0  0EF8               	movlw	248
  9407   006CB2                     u8317:
  9408   006CB2  2EE8               	decfsz	wreg,f,c
  9409   006CB4  D7FE               	bra	u8317
  9410   006CB6  2E0E               	decfsz	??_LCDWriteNibble^0,f,c
  9411   006CB8  D7FC               	bra	u8317
  9412   006CBA  D000               	nop2	
  9413   006CBC                     
  9414                           ;main.c: 423:     PORTBbits.RB4 = 1;
  9415   006CBC  8881               	bsf	129,4,c	;volatile
  9416   006CBE                     
  9417                           ;main.c: 426:     PORTBbits.RB4 = 0;
  9418   006CBE  9881               	bcf	129,4,c	;volatile
  9419   006CC0  0012               	return		;funcret
  9420   006CC2                     __end_of_LCDWriteNibble:
  9421                           	callstack 0
  9422                           
  9423 ;; *************** function _FFT *****************
  9424 ;; Defined at:
  9425 ;;		line 208 in file "main.c"
  9426 ;; Parameters:    Size  Location     Type
  9427 ;;  N               2   38[BANK1 ] int 
  9428 ;;  Re_X            2   40[BANK1 ] PTR float 
  9429 ;;		 -> Re_X(128), 
  9430 ;;  Im_X            2   42[BANK1 ] PTR float 
  9431 ;;		 -> Im_X(128), 
  9432 ;; Auto vars:     Size  Location     Type
  9433 ;;  uI              4   94[BANK1 ] float 
  9434 ;;  tempR           4   90[BANK1 ] float 
  9435 ;;  uR              4   84[BANK1 ] float 
  9436 ;;  sI              4   78[BANK1 ] float 
  9437 ;;  sR              4   74[BANK1 ] float 
  9438 ;;  tempI           4   70[BANK1 ] float 
  9439 ;;  n               2  102[BANK1 ] int 
  9440 ;;  L               2  100[BANK1 ] int 
  9441 ;;  m               2   98[BANK1 ] int 
  9442 ;;  k               2   88[BANK1 ] int 
  9443 ;;  p               2   82[BANK1 ] int 
  9444 ;;  M               2   68[BANK1 ] int 
  9445 ;; Return value:  Size  Location     Type
  9446 ;;                  1    wreg      void 
  9447 ;; Registers used:
  9448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9449 ;; Tracked objects:
  9450 ;;		On entry : 0/0
  9451 ;;		On exit  : 0/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9454 ;;      Params:         0       0       6       0       0       0       0       0       0
  9455 ;;      Locals:         0       0      60       0       0       0       0       0       0
  9456 ;;      Temps:          0       3       0       0       0       0       0       0       0
  9457 ;;      Totals:         0       3      66       0       0       0       0       0       0
  9458 ;;Total ram usage:       69 bytes
  9459 ;; Hardware stack levels used: 1
  9460 ;; Hardware stack levels required when called: 6
  9461 ;; This function calls:
  9462 ;;		___awdiv
  9463 ;;		___fladd
  9464 ;;		___fldiv
  9465 ;;		___flmul
  9466 ;;		___flneg
  9467 ;;		___flsub
  9468 ;;		___fltol
  9469 ;;		___xxtofl
  9470 ;;		_cosf
  9471 ;;		_logf
  9472 ;;		_sinf
  9473 ;; This function is called by:
  9474 ;;		_main
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478                           	psect	text37
  9479   002476                     __ptext37:
  9480                           	callstack 0
  9481   002476                     _FFT:
  9482                           	callstack 24
  9483   002476                     
  9484                           ;main.c: 208: void FFT (int N, float Re_X[], float Im_X[]);main.c: 209: {;main.c: 210:  
      +                             int M, m, n, k, L, p;;main.c: 211:     float tempR, tempI, uR, uI, sR, sI;;main.c: 21
      +                          3:     M = logf(N)/logf(2);
  9485   002476  C1B1  F00D         	movff	FFT@N,___xxtofl@val
  9486   00247A  C1B2  F00E         	movff	FFT@N+1,___xxtofl@val+1
  9487   00247E  0E00               	movlw	0
  9488   002480  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  9489   002482  0EFF               	movlw	-1
  9490   002484  6E0F               	movwf	(___xxtofl@val+2)^0,c
  9491   002486  6E10               	movwf	(___xxtofl@val+3)^0,c
  9492   002488  0E01               	movlw	1
  9493   00248A  ECC6  F02E         	call	___xxtofl
  9494   00248E  C00D  F1B7         	movff	?___xxtofl,_FFT$1791
  9495   002492  C00E  F1B8         	movff	?___xxtofl+1,_FFT$1791+1
  9496   002496  C00F  F1B9         	movff	?___xxtofl+2,_FFT$1791+2
  9497   00249A  C010  F1BA         	movff	?___xxtofl+3,_FFT$1791+3
  9498   00249E                     
  9499                           ;main.c: 208: void FFT (int N, float Re_X[], float Im_X[]);main.c: 209: {;main.c: 210:  
      +                             int M, m, n, k, L, p;;main.c: 211:     float tempR, tempI, uR, uI, sR, sI;;main.c: 21
      +                          3:     M = logf(N)/logf(2);
  9500   00249E  0E00               	movlw	0
  9501   0024A0  0100               	movlb	0	; () banked
  9502   0024A2  6F81               	movwf	logf@x& (0+255),b
  9503   0024A4  0E00               	movlw	0
  9504   0024A6  6F82               	movwf	(logf@x+1)& (0+255),b
  9505   0024A8  0E00               	movlw	0
  9506   0024AA  6F83               	movwf	(logf@x+2)& (0+255),b
  9507   0024AC  0E40               	movlw	64
  9508   0024AE  6F84               	movwf	(logf@x+3)& (0+255),b
  9509   0024B0  EC96  F00E         	call	_logf	;wreg free
  9510   0024B4  C081  F1BB         	movff	?_logf,_FFT$1792
  9511   0024B8  C082  F1BC         	movff	?_logf+1,_FFT$1792+1
  9512   0024BC  C083  F1BD         	movff	?_logf+2,_FFT$1792+2
  9513   0024C0  C084  F1BE         	movff	?_logf+3,_FFT$1792+3
  9514   0024C4                     
  9515                           ;main.c: 208: void FFT (int N, float Re_X[], float Im_X[]);main.c: 209: {;main.c: 210:  
      +                             int M, m, n, k, L, p;;main.c: 211:     float tempR, tempI, uR, uI, sR, sI;;main.c: 21
      +                          3:     M = logf(N)/logf(2);
  9516   0024C4  C1B7  F081         	movff	_FFT$1791,logf@x
  9517   0024C8  C1B8  F082         	movff	_FFT$1791+1,logf@x+1
  9518   0024CC  C1B9  F083         	movff	_FFT$1791+2,logf@x+2
  9519   0024D0  C1BA  F084         	movff	_FFT$1791+3,logf@x+3
  9520   0024D4  EC96  F00E         	call	_logf	;wreg free
  9521   0024D8  C081  F1BF         	movff	?_logf,_FFT$1793
  9522   0024DC  C082  F1C0         	movff	?_logf+1,_FFT$1793+1
  9523   0024E0  C083  F1C1         	movff	?_logf+2,_FFT$1793+2
  9524   0024E4  C084  F1C2         	movff	?_logf+3,_FFT$1793+3
  9525                           
  9526                           ;main.c: 208: void FFT (int N, float Re_X[], float Im_X[]);main.c: 209: {;main.c: 210:  
      +                             int M, m, n, k, L, p;;main.c: 211:     float tempR, tempI, uR, uI, sR, sI;;main.c: 21
      +                          3:     M = logf(N)/logf(2);
  9527   0024E8  C1BB  F06C         	movff	_FFT$1792,___fldiv@a
  9528   0024EC  C1BC  F06D         	movff	_FFT$1792+1,___fldiv@a+1
  9529   0024F0  C1BD  F06E         	movff	_FFT$1792+2,___fldiv@a+2
  9530   0024F4  C1BE  F06F         	movff	_FFT$1792+3,___fldiv@a+3
  9531   0024F8  C1BF  F068         	movff	_FFT$1793,___fldiv@b
  9532   0024FC  C1C0  F069         	movff	_FFT$1793+1,___fldiv@b+1
  9533   002500  C1C1  F06A         	movff	_FFT$1793+2,___fldiv@b+2
  9534   002504  C1C2  F06B         	movff	_FFT$1793+3,___fldiv@b+3
  9535   002508  EC95  F024         	call	___fldiv	;wreg free
  9536   00250C  C068  F0CD         	movff	?___fldiv,___fltol@f1
  9537   002510  C069  F0CE         	movff	?___fldiv+1,___fltol@f1+1
  9538   002514  C06A  F0CF         	movff	?___fldiv+2,___fltol@f1+2
  9539   002518  C06B  F0D0         	movff	?___fldiv+3,___fltol@f1+3
  9540   00251C  EC45  F030         	call	___fltol	;wreg free
  9541   002520  C0CD  F1CF         	movff	?___fltol,FFT@M
  9542   002524  C0CE  F1D0         	movff	?___fltol+1,FFT@M+1
  9543   002528                     
  9544                           ;main.c: 215:     for (p = 1; p <= M; p++)
  9545   002528  0E00               	movlw	0
  9546   00252A  0101               	movlb	1	; () banked
  9547   00252C  6FDE               	movwf	(FFT@p+1)& (0+255),b
  9548   00252E  0E01               	movlw	1
  9549   002530  6FDD               	movwf	FFT@p& (0+255),b
  9550   002532  EFB7  F015         	goto	l7873
  9551   002536                     l7825:
  9552                           
  9553                           ; BSR set to: 0
  9554                           ;main.c: 216:     {;main.c: 218:         L=1;
  9555   002536  0E00               	movlw	0
  9556   002538  0101               	movlb	1	; () banked
  9557   00253A  6FF0               	movwf	(FFT@L+1)& (0+255),b
  9558   00253C  0E01               	movlw	1
  9559   00253E  6FEF               	movwf	FFT@L& (0+255),b
  9560                           
  9561                           ;main.c: 219:         for(k=0;k<p;k++){
  9562   002540  0E00               	movlw	0
  9563   002542  6FE4               	movwf	(FFT@k+1)& (0+255),b
  9564   002544  0E00               	movlw	0
  9565   002546  6FE3               	movwf	FFT@k& (0+255),b
  9566   002548  EFAE  F012         	goto	l7831
  9567   00254C                     l7827:
  9568                           
  9569                           ; BSR set to: 0
  9570                           ;main.c: 220:             L=2*L;
  9571   00254C  90D8               	bcf	status,0,c
  9572   00254E  0101               	movlb	1	; () banked
  9573   002550  35EF               	rlcf	FFT@L& (0+255),w,b
  9574   002552  6FEF               	movwf	FFT@L& (0+255),b
  9575   002554  35F0               	rlcf	(FFT@L+1)& (0+255),w,b
  9576   002556  6FF0               	movwf	(FFT@L+1)& (0+255),b
  9577   002558                     
  9578                           ; BSR set to: 1
  9579                           ;main.c: 221:         }
  9580   002558  4BE3               	infsnz	FFT@k& (0+255),f,b
  9581   00255A  2BE4               	incf	(FFT@k+1)& (0+255),f,b
  9582   00255C                     l7831:
  9583                           
  9584                           ; BSR set to: 1
  9585   00255C  51DD               	movf	FFT@p& (0+255),w,b
  9586   00255E  5DE3               	subwf	FFT@k& (0+255),w,b
  9587   002560  51E4               	movf	(FFT@k+1)& (0+255),w,b
  9588   002562  0A80               	xorlw	128
  9589   002564  0100               	movlb	0	; () banked
  9590   002566  6FFD               	movwf	??_FFT& (0+255),b
  9591   002568  0101               	movlb	1	; () banked
  9592   00256A  51DE               	movf	(FFT@p+1)& (0+255),w,b
  9593   00256C  0A80               	xorlw	128
  9594   00256E  0100               	movlb	0	; () banked
  9595   002570  59FD               	subwfb	??_FFT& (0+255),w,b
  9596   002572  A0D8               	btfss	status,0,c
  9597   002574  EFBE  F012         	goto	u7891
  9598   002578  EFC0  F012         	goto	u7890
  9599   00257C                     u7891:
  9600   00257C  EFA6  F012         	goto	l7827
  9601   002580                     u7890:
  9602   002580                     
  9603                           ; BSR set to: 0
  9604                           ;main.c: 223:         uR = 1;
  9605   002580  0E00               	movlw	0
  9606   002582  0101               	movlb	1	; () banked
  9607   002584  6FDF               	movwf	FFT@uR& (0+255),b
  9608   002586  0E00               	movlw	0
  9609   002588  6FE0               	movwf	(FFT@uR+1)& (0+255),b
  9610   00258A  0E80               	movlw	128
  9611   00258C  6FE1               	movwf	(FFT@uR+2)& (0+255),b
  9612   00258E  0E3F               	movlw	63
  9613   002590  6FE2               	movwf	(FFT@uR+3)& (0+255),b
  9614                           
  9615                           ;main.c: 224:         uI = 0;
  9616   002592  0E00               	movlw	0
  9617   002594  6FE9               	movwf	FFT@uI& (0+255),b
  9618   002596  0E00               	movlw	0
  9619   002598  6FEA               	movwf	(FFT@uI+1)& (0+255),b
  9620   00259A  0E00               	movlw	0
  9621   00259C  6FEB               	movwf	(FFT@uI+2)& (0+255),b
  9622   00259E  0E00               	movlw	0
  9623   0025A0  6FEC               	movwf	(FFT@uI+3)& (0+255),b
  9624   0025A2                     
  9625                           ; BSR set to: 1
  9626                           ;main.c: 225:         sR = cosf(2*3.14159265358979323846/L);
  9627   0025A2  0EDB               	movlw	219
  9628   0025A4  0100               	movlb	0	; () banked
  9629   0025A6  6F68               	movwf	___fldiv@b& (0+255),b
  9630   0025A8  0E0F               	movlw	15
  9631   0025AA  6F69               	movwf	(___fldiv@b+1)& (0+255),b
  9632   0025AC  0EC9               	movlw	201
  9633   0025AE  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
  9634   0025B0  0E40               	movlw	64
  9635   0025B2  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
  9636   0025B4  C1EF  F00D         	movff	FFT@L,___xxtofl@val
  9637   0025B8  C1F0  F00E         	movff	FFT@L+1,___xxtofl@val+1
  9638   0025BC  0E00               	movlw	0
  9639   0025BE  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  9640   0025C0  0EFF               	movlw	-1
  9641   0025C2  6E0F               	movwf	(___xxtofl@val+2)^0,c
  9642   0025C4  6E10               	movwf	(___xxtofl@val+3)^0,c
  9643   0025C6  0E01               	movlw	1
  9644   0025C8  ECC6  F02E         	call	___xxtofl
  9645   0025CC  C00D  F06C         	movff	?___xxtofl,___fldiv@a
  9646   0025D0  C00E  F06D         	movff	?___xxtofl+1,___fldiv@a+1
  9647   0025D4  C00F  F06E         	movff	?___xxtofl+2,___fldiv@a+2
  9648   0025D8  C010  F06F         	movff	?___xxtofl+3,___fldiv@a+3
  9649   0025DC  EC95  F024         	call	___fldiv	;wreg free
  9650   0025E0  C068  F1C3         	movff	?___fldiv,_FFT$1794
  9651   0025E4  C069  F1C4         	movff	?___fldiv+1,_FFT$1794+1
  9652   0025E8  C06A  F1C5         	movff	?___fldiv+2,_FFT$1794+2
  9653   0025EC  C06B  F1C6         	movff	?___fldiv+3,_FFT$1794+3
  9654   0025F0                     
  9655                           ;main.c: 225:         sR = cosf(2*3.14159265358979323846/L);
  9656   0025F0  C1C3  F18B         	movff	_FFT$1794,cosf@x
  9657   0025F4  C1C4  F18C         	movff	_FFT$1794+1,cosf@x+1
  9658   0025F8  C1C5  F18D         	movff	_FFT$1794+2,cosf@x+2
  9659   0025FC  C1C6  F18E         	movff	_FFT$1794+3,cosf@x+3
  9660   002600  ECA9  F018         	call	_cosf	;wreg free
  9661   002604  C18B  F1D5         	movff	?_cosf,FFT@sR
  9662   002608  C18C  F1D6         	movff	?_cosf+1,FFT@sR+1
  9663   00260C  C18D  F1D7         	movff	?_cosf+2,FFT@sR+2
  9664   002610  C18E  F1D8         	movff	?_cosf+3,FFT@sR+3
  9665   002614                     
  9666                           ;main.c: 226:         sI = -sinf(2*3.14159265358979323846/L);
  9667   002614  C1EF  F00D         	movff	FFT@L,___xxtofl@val
  9668   002618  C1F0  F00E         	movff	FFT@L+1,___xxtofl@val+1
  9669   00261C  0E00               	movlw	0
  9670   00261E  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  9671   002620  0EFF               	movlw	-1
  9672   002622  6E0F               	movwf	(___xxtofl@val+2)^0,c
  9673   002624  6E10               	movwf	(___xxtofl@val+3)^0,c
  9674   002626  0E01               	movlw	1
  9675   002628  ECC6  F02E         	call	___xxtofl
  9676   00262C  C00D  F06C         	movff	?___xxtofl,___fldiv@a
  9677   002630  C00E  F06D         	movff	?___xxtofl+1,___fldiv@a+1
  9678   002634  C00F  F06E         	movff	?___xxtofl+2,___fldiv@a+2
  9679   002638  C010  F06F         	movff	?___xxtofl+3,___fldiv@a+3
  9680   00263C  0EDB               	movlw	219
  9681   00263E  0100               	movlb	0	; () banked
  9682   002640  6F68               	movwf	___fldiv@b& (0+255),b
  9683   002642  0E0F               	movlw	15
  9684   002644  6F69               	movwf	(___fldiv@b+1)& (0+255),b
  9685   002646  0EC9               	movlw	201
  9686   002648  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
  9687   00264A  0E40               	movlw	64
  9688   00264C  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
  9689   00264E  EC95  F024         	call	___fldiv	;wreg free
  9690   002652  C068  F1C7         	movff	?___fldiv,_FFT$1795
  9691   002656  C069  F1C8         	movff	?___fldiv+1,_FFT$1795+1
  9692   00265A  C06A  F1C9         	movff	?___fldiv+2,_FFT$1795+2
  9693   00265E  C06B  F1CA         	movff	?___fldiv+3,_FFT$1795+3
  9694   002662                     
  9695                           ;main.c: 226:         sI = -sinf(2*3.14159265358979323846/L);
  9696   002662  C1C7  F18B         	movff	_FFT$1795,sinf@x
  9697   002666  C1C8  F18C         	movff	_FFT$1795+1,sinf@x+1
  9698   00266A  C1C9  F18D         	movff	_FFT$1795+2,sinf@x+2
  9699   00266E  C1CA  F18E         	movff	_FFT$1795+3,sinf@x+3
  9700   002672  ECCA  F015         	call	_sinf	;wreg free
  9701   002676  C18B  F1CB         	movff	?_sinf,_FFT$1796
  9702   00267A  C18C  F1CC         	movff	?_sinf+1,_FFT$1796+1
  9703   00267E  C18D  F1CD         	movff	?_sinf+2,_FFT$1796+2
  9704   002682  C18E  F1CE         	movff	?_sinf+3,_FFT$1796+3
  9705   002686                     
  9706                           ;main.c: 226:         sI = -sinf(2*3.14159265358979323846/L);
  9707   002686  C1CB  F081         	movff	_FFT$1796,___flneg@f1
  9708   00268A  C1CC  F082         	movff	_FFT$1796+1,___flneg@f1+1
  9709   00268E  C1CD  F083         	movff	_FFT$1796+2,___flneg@f1+2
  9710   002692  C1CE  F084         	movff	_FFT$1796+3,___flneg@f1+3
  9711   002696  EC61  F036         	call	___flneg	;wreg free
  9712   00269A  C081  F1D9         	movff	?___flneg,FFT@sI
  9713   00269E  C082  F1DA         	movff	?___flneg+1,FFT@sI+1
  9714   0026A2  C083  F1DB         	movff	?___flneg+2,FFT@sI+2
  9715   0026A6  C084  F1DC         	movff	?___flneg+3,FFT@sI+3
  9716   0026AA                     
  9717                           ;main.c: 228:         for (k = 0; k < L/2; k++)
  9718   0026AA  0E00               	movlw	0
  9719   0026AC  0101               	movlb	1	; () banked
  9720   0026AE  6FE4               	movwf	(FFT@k+1)& (0+255),b
  9721   0026B0  0E00               	movlw	0
  9722   0026B2  6FE3               	movwf	FFT@k& (0+255),b
  9723   0026B4  EF99  F015         	goto	l7869
  9724   0026B8                     l212:
  9725                           
  9726                           ; BSR set to: 0
  9727                           ;main.c: 229:         {;main.c: 230:             for (n = k; n < (N-1); n+=L)
  9728   0026B8  C1E3  F1F1         	movff	FFT@k,FFT@n
  9729   0026BC  C1E4  F1F2         	movff	FFT@k+1,FFT@n+1
  9730   0026C0  EFF7  F014         	goto	l7863
  9731   0026C4                     l7847:
  9732                           
  9733                           ; BSR set to: 0
  9734                           ;main.c: 231:             {;main.c: 232:                 m = n + L/2;
  9735   0026C4  C1EF  F00D         	movff	FFT@L,___awdiv@dividend
  9736   0026C8  C1F0  F00E         	movff	FFT@L+1,___awdiv@dividend+1
  9737   0026CC  0E00               	movlw	0
  9738   0026CE  6E10               	movwf	(___awdiv@divisor+1)^0,c
  9739   0026D0  0E02               	movlw	2
  9740   0026D2  6E0F               	movwf	___awdiv@divisor^0,c
  9741   0026D4  ECAD  F032         	call	___awdiv	;wreg free
  9742   0026D8  0101               	movlb	1	; () banked
  9743   0026DA  51F1               	movf	FFT@n& (0+255),w,b
  9744   0026DC  240D               	addwf	?___awdiv^0,w,c
  9745   0026DE  6FED               	movwf	FFT@m& (0+255),b
  9746   0026E0  51F2               	movf	(FFT@n+1)& (0+255),w,b
  9747   0026E2  200E               	addwfc	(?___awdiv+1)^0,w,c
  9748   0026E4  6FEE               	movwf	(FFT@m+1)& (0+255),b
  9749   0026E6                     
  9750                           ; BSR set to: 1
  9751                           ;main.c: 233:                 tempR = Re_X[m]*uR - Im_X[m]*uI;
  9752   0026E6  C1DF  F01F         	movff	FFT@uR,___flmul@a
  9753   0026EA  C1E0  F020         	movff	FFT@uR+1,___flmul@a+1
  9754   0026EE  C1E1  F021         	movff	FFT@uR+2,___flmul@a+2
  9755   0026F2  C1E2  F022         	movff	FFT@uR+3,___flmul@a+3
  9756   0026F6  90D8               	bcf	status,0,c
  9757   0026F8  35ED               	rlcf	FFT@m& (0+255),w,b
  9758   0026FA  6ED9               	movwf	fsr2l,c
  9759   0026FC  35EE               	rlcf	(FFT@m+1)& (0+255),w,b
  9760   0026FE  6EDA               	movwf	fsr2h,c
  9761   002700  90D8               	bcf	status,0,c
  9762   002702  36D9               	rlcf	fsr2l,f,c
  9763   002704  36DA               	rlcf	fsr2h,f,c
  9764   002706  51B3               	movf	FFT@Re_X& (0+255),w,b
  9765   002708  26D9               	addwf	fsr2l,f,c
  9766   00270A  51B4               	movf	(FFT@Re_X+1)& (0+255),w,b
  9767   00270C  22DA               	addwfc	fsr2h,f,c
  9768   00270E  CFDE F01B          	movff	postinc2,___flmul@b
  9769   002712  CFDE F01C          	movff	postinc2,___flmul@b+1
  9770   002716  CFDE F01D          	movff	postinc2,___flmul@b+2
  9771   00271A  CFDE F01E          	movff	postinc2,___flmul@b+3
  9772   00271E  EC80  F022         	call	___flmul	;wreg free
  9773   002722  C01B  F060         	movff	?___flmul,___flsub@b
  9774   002726  C01C  F061         	movff	?___flmul+1,___flsub@b+1
  9775   00272A  C01D  F062         	movff	?___flmul+2,___flsub@b+2
  9776   00272E  C01E  F063         	movff	?___flmul+3,___flsub@b+3
  9777   002732  C1E9  F01F         	movff	FFT@uI,___flmul@a
  9778   002736  C1EA  F020         	movff	FFT@uI+1,___flmul@a+1
  9779   00273A  C1EB  F021         	movff	FFT@uI+2,___flmul@a+2
  9780   00273E  C1EC  F022         	movff	FFT@uI+3,___flmul@a+3
  9781   002742  90D8               	bcf	status,0,c
  9782   002744  0101               	movlb	1	; () banked
  9783   002746  35ED               	rlcf	FFT@m& (0+255),w,b
  9784   002748  6ED9               	movwf	fsr2l,c
  9785   00274A  35EE               	rlcf	(FFT@m+1)& (0+255),w,b
  9786   00274C  6EDA               	movwf	fsr2h,c
  9787   00274E  90D8               	bcf	status,0,c
  9788   002750  36D9               	rlcf	fsr2l,f,c
  9789   002752  36DA               	rlcf	fsr2h,f,c
  9790   002754  51B5               	movf	FFT@Im_X& (0+255),w,b
  9791   002756  26D9               	addwf	fsr2l,f,c
  9792   002758  51B6               	movf	(FFT@Im_X+1)& (0+255),w,b
  9793   00275A  22DA               	addwfc	fsr2h,f,c
  9794   00275C  CFDE F01B          	movff	postinc2,___flmul@b
  9795   002760  CFDE F01C          	movff	postinc2,___flmul@b+1
  9796   002764  CFDE F01D          	movff	postinc2,___flmul@b+2
  9797   002768  CFDE F01E          	movff	postinc2,___flmul@b+3
  9798   00276C  EC80  F022         	call	___flmul	;wreg free
  9799   002770  C01B  F064         	movff	?___flmul,___flsub@a
  9800   002774  C01C  F065         	movff	?___flmul+1,___flsub@a+1
  9801   002778  C01D  F066         	movff	?___flmul+2,___flsub@a+2
  9802   00277C  C01E  F067         	movff	?___flmul+3,___flsub@a+3
  9803   002780  ECBB  F035         	call	___flsub	;wreg free
  9804   002784  C060  F1E5         	movff	?___flsub,FFT@tempR
  9805   002788  C061  F1E6         	movff	?___flsub+1,FFT@tempR+1
  9806   00278C  C062  F1E7         	movff	?___flsub+2,FFT@tempR+2
  9807   002790  C063  F1E8         	movff	?___flsub+3,FFT@tempR+3
  9808   002794                     
  9809                           ;main.c: 234:                 tempI = Re_X[m]*uI + Im_X[m]*uR;
  9810   002794  C1E9  F01F         	movff	FFT@uI,___flmul@a
  9811   002798  C1EA  F020         	movff	FFT@uI+1,___flmul@a+1
  9812   00279C  C1EB  F021         	movff	FFT@uI+2,___flmul@a+2
  9813   0027A0  C1EC  F022         	movff	FFT@uI+3,___flmul@a+3
  9814   0027A4  90D8               	bcf	status,0,c
  9815   0027A6  0101               	movlb	1	; () banked
  9816   0027A8  35ED               	rlcf	FFT@m& (0+255),w,b
  9817   0027AA  6ED9               	movwf	fsr2l,c
  9818   0027AC  35EE               	rlcf	(FFT@m+1)& (0+255),w,b
  9819   0027AE  6EDA               	movwf	fsr2h,c
  9820   0027B0  90D8               	bcf	status,0,c
  9821   0027B2  36D9               	rlcf	fsr2l,f,c
  9822   0027B4  36DA               	rlcf	fsr2h,f,c
  9823   0027B6  51B3               	movf	FFT@Re_X& (0+255),w,b
  9824   0027B8  26D9               	addwf	fsr2l,f,c
  9825   0027BA  51B4               	movf	(FFT@Re_X+1)& (0+255),w,b
  9826   0027BC  22DA               	addwfc	fsr2h,f,c
  9827   0027BE  CFDE F01B          	movff	postinc2,___flmul@b
  9828   0027C2  CFDE F01C          	movff	postinc2,___flmul@b+1
  9829   0027C6  CFDE F01D          	movff	postinc2,___flmul@b+2
  9830   0027CA  CFDE F01E          	movff	postinc2,___flmul@b+3
  9831   0027CE  EC80  F022         	call	___flmul	;wreg free
  9832   0027D2  C01B  F034         	movff	?___flmul,___fladd@b
  9833   0027D6  C01C  F035         	movff	?___flmul+1,___fladd@b+1
  9834   0027DA  C01D  F036         	movff	?___flmul+2,___fladd@b+2
  9835   0027DE  C01E  F037         	movff	?___flmul+3,___fladd@b+3
  9836   0027E2  C1DF  F01F         	movff	FFT@uR,___flmul@a
  9837   0027E6  C1E0  F020         	movff	FFT@uR+1,___flmul@a+1
  9838   0027EA  C1E1  F021         	movff	FFT@uR+2,___flmul@a+2
  9839   0027EE  C1E2  F022         	movff	FFT@uR+3,___flmul@a+3
  9840   0027F2  90D8               	bcf	status,0,c
  9841   0027F4  0101               	movlb	1	; () banked
  9842   0027F6  35ED               	rlcf	FFT@m& (0+255),w,b
  9843   0027F8  6ED9               	movwf	fsr2l,c
  9844   0027FA  35EE               	rlcf	(FFT@m+1)& (0+255),w,b
  9845   0027FC  6EDA               	movwf	fsr2h,c
  9846   0027FE  90D8               	bcf	status,0,c
  9847   002800  36D9               	rlcf	fsr2l,f,c
  9848   002802  36DA               	rlcf	fsr2h,f,c
  9849   002804  51B5               	movf	FFT@Im_X& (0+255),w,b
  9850   002806  26D9               	addwf	fsr2l,f,c
  9851   002808  51B6               	movf	(FFT@Im_X+1)& (0+255),w,b
  9852   00280A  22DA               	addwfc	fsr2h,f,c
  9853   00280C  CFDE F01B          	movff	postinc2,___flmul@b
  9854   002810  CFDE F01C          	movff	postinc2,___flmul@b+1
  9855   002814  CFDE F01D          	movff	postinc2,___flmul@b+2
  9856   002818  CFDE F01E          	movff	postinc2,___flmul@b+3
  9857   00281C  EC80  F022         	call	___flmul	;wreg free
  9858   002820  C01B  F038         	movff	?___flmul,___fladd@a
  9859   002824  C01C  F039         	movff	?___flmul+1,___fladd@a+1
  9860   002828  C01D  F03A         	movff	?___flmul+2,___fladd@a+2
  9861   00282C  C01E  F03B         	movff	?___flmul+3,___fladd@a+3
  9862   002830  ECD8  F01D         	call	___fladd	;wreg free
  9863   002834  C034  F1D1         	movff	?___fladd,FFT@tempI
  9864   002838  C035  F1D2         	movff	?___fladd+1,FFT@tempI+1
  9865   00283C  C036  F1D3         	movff	?___fladd+2,FFT@tempI+2
  9866   002840  C037  F1D4         	movff	?___fladd+3,FFT@tempI+3
  9867   002844                     
  9868                           ;main.c: 235:                 Re_X[m] = Re_X[n] - tempR;
  9869   002844  90D8               	bcf	status,0,c
  9870   002846  0101               	movlb	1	; () banked
  9871   002848  35F1               	rlcf	FFT@n& (0+255),w,b
  9872   00284A  6ED9               	movwf	fsr2l,c
  9873   00284C  35F2               	rlcf	(FFT@n+1)& (0+255),w,b
  9874   00284E  6EDA               	movwf	fsr2h,c
  9875   002850  90D8               	bcf	status,0,c
  9876   002852  36D9               	rlcf	fsr2l,f,c
  9877   002854  36DA               	rlcf	fsr2h,f,c
  9878   002856  51B3               	movf	FFT@Re_X& (0+255),w,b
  9879   002858  26D9               	addwf	fsr2l,f,c
  9880   00285A  51B4               	movf	(FFT@Re_X+1)& (0+255),w,b
  9881   00285C  22DA               	addwfc	fsr2h,f,c
  9882   00285E  CFDE F060          	movff	postinc2,___flsub@b
  9883   002862  CFDE F061          	movff	postinc2,___flsub@b+1
  9884   002866  CFDE F062          	movff	postinc2,___flsub@b+2
  9885   00286A  CFDE F063          	movff	postinc2,___flsub@b+3
  9886   00286E  C1E5  F064         	movff	FFT@tempR,___flsub@a
  9887   002872  C1E6  F065         	movff	FFT@tempR+1,___flsub@a+1
  9888   002876  C1E7  F066         	movff	FFT@tempR+2,___flsub@a+2
  9889   00287A  C1E8  F067         	movff	FFT@tempR+3,___flsub@a+3
  9890   00287E  ECBB  F035         	call	___flsub	;wreg free
  9891   002882  90D8               	bcf	status,0,c
  9892   002884  0101               	movlb	1	; () banked
  9893   002886  35ED               	rlcf	FFT@m& (0+255),w,b
  9894   002888  6ED9               	movwf	fsr2l,c
  9895   00288A  35EE               	rlcf	(FFT@m+1)& (0+255),w,b
  9896   00288C  6EDA               	movwf	fsr2h,c
  9897   00288E  90D8               	bcf	status,0,c
  9898   002890  36D9               	rlcf	fsr2l,f,c
  9899   002892  36DA               	rlcf	fsr2h,f,c
  9900   002894  51B3               	movf	FFT@Re_X& (0+255),w,b
  9901   002896  26D9               	addwf	fsr2l,f,c
  9902   002898  51B4               	movf	(FFT@Re_X+1)& (0+255),w,b
  9903   00289A  22DA               	addwfc	fsr2h,f,c
  9904   00289C  0100               	movlb	0	; () banked
  9905   00289E  C060  FFDE         	movff	?___flsub,postinc2
  9906   0028A2  C061  FFDE         	movff	?___flsub+1,postinc2
  9907   0028A6  C062  FFDE         	movff	?___flsub+2,postinc2
  9908   0028AA  C063  FFDE         	movff	?___flsub+3,postinc2
  9909   0028AE                     
  9910                           ; BSR set to: 0
  9911                           ;main.c: 236:                 Im_X[m] = Im_X[n] - tempI;
  9912   0028AE  90D8               	bcf	status,0,c
  9913   0028B0  0101               	movlb	1	; () banked
  9914   0028B2  35F1               	rlcf	FFT@n& (0+255),w,b
  9915   0028B4  6ED9               	movwf	fsr2l,c
  9916   0028B6  35F2               	rlcf	(FFT@n+1)& (0+255),w,b
  9917   0028B8  6EDA               	movwf	fsr2h,c
  9918   0028BA  90D8               	bcf	status,0,c
  9919   0028BC  36D9               	rlcf	fsr2l,f,c
  9920   0028BE  36DA               	rlcf	fsr2h,f,c
  9921   0028C0  51B5               	movf	FFT@Im_X& (0+255),w,b
  9922   0028C2  26D9               	addwf	fsr2l,f,c
  9923   0028C4  51B6               	movf	(FFT@Im_X+1)& (0+255),w,b
  9924   0028C6  22DA               	addwfc	fsr2h,f,c
  9925   0028C8  CFDE F060          	movff	postinc2,___flsub@b
  9926   0028CC  CFDE F061          	movff	postinc2,___flsub@b+1
  9927   0028D0  CFDE F062          	movff	postinc2,___flsub@b+2
  9928   0028D4  CFDE F063          	movff	postinc2,___flsub@b+3
  9929   0028D8  C1D1  F064         	movff	FFT@tempI,___flsub@a
  9930   0028DC  C1D2  F065         	movff	FFT@tempI+1,___flsub@a+1
  9931   0028E0  C1D3  F066         	movff	FFT@tempI+2,___flsub@a+2
  9932   0028E4  C1D4  F067         	movff	FFT@tempI+3,___flsub@a+3
  9933   0028E8  ECBB  F035         	call	___flsub	;wreg free
  9934   0028EC  90D8               	bcf	status,0,c
  9935   0028EE  0101               	movlb	1	; () banked
  9936   0028F0  35ED               	rlcf	FFT@m& (0+255),w,b
  9937   0028F2  6ED9               	movwf	fsr2l,c
  9938   0028F4  35EE               	rlcf	(FFT@m+1)& (0+255),w,b
  9939   0028F6  6EDA               	movwf	fsr2h,c
  9940   0028F8  90D8               	bcf	status,0,c
  9941   0028FA  36D9               	rlcf	fsr2l,f,c
  9942   0028FC  36DA               	rlcf	fsr2h,f,c
  9943   0028FE  51B5               	movf	FFT@Im_X& (0+255),w,b
  9944   002900  26D9               	addwf	fsr2l,f,c
  9945   002902  51B6               	movf	(FFT@Im_X+1)& (0+255),w,b
  9946   002904  22DA               	addwfc	fsr2h,f,c
  9947   002906  0100               	movlb	0	; () banked
  9948   002908  C060  FFDE         	movff	?___flsub,postinc2
  9949   00290C  C061  FFDE         	movff	?___flsub+1,postinc2
  9950   002910  C062  FFDE         	movff	?___flsub+2,postinc2
  9951   002914  C063  FFDE         	movff	?___flsub+3,postinc2
  9952   002918                     
  9953                           ; BSR set to: 0
  9954                           ;main.c: 237:                 Re_X[n] = Re_X[n] + tempR;
  9955   002918  90D8               	bcf	status,0,c
  9956   00291A  0101               	movlb	1	; () banked
  9957   00291C  35F1               	rlcf	FFT@n& (0+255),w,b
  9958   00291E  6ED9               	movwf	fsr2l,c
  9959   002920  35F2               	rlcf	(FFT@n+1)& (0+255),w,b
  9960   002922  6EDA               	movwf	fsr2h,c
  9961   002924  90D8               	bcf	status,0,c
  9962   002926  36D9               	rlcf	fsr2l,f,c
  9963   002928  36DA               	rlcf	fsr2h,f,c
  9964   00292A  51B3               	movf	FFT@Re_X& (0+255),w,b
  9965   00292C  26D9               	addwf	fsr2l,f,c
  9966   00292E  51B4               	movf	(FFT@Re_X+1)& (0+255),w,b
  9967   002930  22DA               	addwfc	fsr2h,f,c
  9968   002932  CFDE F034          	movff	postinc2,___fladd@b
  9969   002936  CFDE F035          	movff	postinc2,___fladd@b+1
  9970   00293A  CFDE F036          	movff	postinc2,___fladd@b+2
  9971   00293E  CFDE F037          	movff	postinc2,___fladd@b+3
  9972   002942  C1E5  F038         	movff	FFT@tempR,___fladd@a
  9973   002946  C1E6  F039         	movff	FFT@tempR+1,___fladd@a+1
  9974   00294A  C1E7  F03A         	movff	FFT@tempR+2,___fladd@a+2
  9975   00294E  C1E8  F03B         	movff	FFT@tempR+3,___fladd@a+3
  9976   002952  ECD8  F01D         	call	___fladd	;wreg free
  9977   002956  90D8               	bcf	status,0,c
  9978   002958  0101               	movlb	1	; () banked
  9979   00295A  35F1               	rlcf	FFT@n& (0+255),w,b
  9980   00295C  6ED9               	movwf	fsr2l,c
  9981   00295E  35F2               	rlcf	(FFT@n+1)& (0+255),w,b
  9982   002960  6EDA               	movwf	fsr2h,c
  9983   002962  90D8               	bcf	status,0,c
  9984   002964  36D9               	rlcf	fsr2l,f,c
  9985   002966  36DA               	rlcf	fsr2h,f,c
  9986   002968  51B3               	movf	FFT@Re_X& (0+255),w,b
  9987   00296A  26D9               	addwf	fsr2l,f,c
  9988   00296C  51B4               	movf	(FFT@Re_X+1)& (0+255),w,b
  9989   00296E  22DA               	addwfc	fsr2h,f,c
  9990   002970  C034  FFDE         	movff	?___fladd,postinc2
  9991   002974  C035  FFDE         	movff	?___fladd+1,postinc2
  9992   002978  C036  FFDE         	movff	?___fladd+2,postinc2
  9993   00297C  C037  FFDE         	movff	?___fladd+3,postinc2
  9994   002980                     
  9995                           ; BSR set to: 1
  9996                           ;main.c: 238:                 Im_X[n] = Im_X[n] + tempI;
  9997   002980  90D8               	bcf	status,0,c
  9998   002982  35F1               	rlcf	FFT@n& (0+255),w,b
  9999   002984  6ED9               	movwf	fsr2l,c
 10000   002986  35F2               	rlcf	(FFT@n+1)& (0+255),w,b
 10001   002988  6EDA               	movwf	fsr2h,c
 10002   00298A  90D8               	bcf	status,0,c
 10003   00298C  36D9               	rlcf	fsr2l,f,c
 10004   00298E  36DA               	rlcf	fsr2h,f,c
 10005   002990  51B5               	movf	FFT@Im_X& (0+255),w,b
 10006   002992  26D9               	addwf	fsr2l,f,c
 10007   002994  51B6               	movf	(FFT@Im_X+1)& (0+255),w,b
 10008   002996  22DA               	addwfc	fsr2h,f,c
 10009   002998  CFDE F034          	movff	postinc2,___fladd@b
 10010   00299C  CFDE F035          	movff	postinc2,___fladd@b+1
 10011   0029A0  CFDE F036          	movff	postinc2,___fladd@b+2
 10012   0029A4  CFDE F037          	movff	postinc2,___fladd@b+3
 10013   0029A8  C1D1  F038         	movff	FFT@tempI,___fladd@a
 10014   0029AC  C1D2  F039         	movff	FFT@tempI+1,___fladd@a+1
 10015   0029B0  C1D3  F03A         	movff	FFT@tempI+2,___fladd@a+2
 10016   0029B4  C1D4  F03B         	movff	FFT@tempI+3,___fladd@a+3
 10017   0029B8  ECD8  F01D         	call	___fladd	;wreg free
 10018   0029BC  90D8               	bcf	status,0,c
 10019   0029BE  0101               	movlb	1	; () banked
 10020   0029C0  35F1               	rlcf	FFT@n& (0+255),w,b
 10021   0029C2  6ED9               	movwf	fsr2l,c
 10022   0029C4  35F2               	rlcf	(FFT@n+1)& (0+255),w,b
 10023   0029C6  6EDA               	movwf	fsr2h,c
 10024   0029C8  90D8               	bcf	status,0,c
 10025   0029CA  36D9               	rlcf	fsr2l,f,c
 10026   0029CC  36DA               	rlcf	fsr2h,f,c
 10027   0029CE  51B5               	movf	FFT@Im_X& (0+255),w,b
 10028   0029D0  26D9               	addwf	fsr2l,f,c
 10029   0029D2  51B6               	movf	(FFT@Im_X+1)& (0+255),w,b
 10030   0029D4  22DA               	addwfc	fsr2h,f,c
 10031   0029D6  C034  FFDE         	movff	?___fladd,postinc2
 10032   0029DA  C035  FFDE         	movff	?___fladd+1,postinc2
 10033   0029DE  C036  FFDE         	movff	?___fladd+2,postinc2
 10034   0029E2  C037  FFDE         	movff	?___fladd+3,postinc2
 10035   0029E6                     
 10036                           ; BSR set to: 1
 10037                           ;main.c: 239:             }
 10038   0029E6  51EF               	movf	FFT@L& (0+255),w,b
 10039   0029E8  27F1               	addwf	FFT@n& (0+255),f,b
 10040   0029EA  51F0               	movf	(FFT@L+1)& (0+255),w,b
 10041   0029EC  23F2               	addwfc	(FFT@n+1)& (0+255),f,b
 10042   0029EE                     l7863:
 10043   0029EE  0EFF               	movlw	255
 10044   0029F0  0101               	movlb	1	; () banked
 10045   0029F2  25B1               	addwf	FFT@N& (0+255),w,b
 10046   0029F4  0100               	movlb	0	; () banked
 10047   0029F6  6FFD               	movwf	??_FFT& (0+255),b
 10048   0029F8  0EFF               	movlw	255
 10049   0029FA  0101               	movlb	1	; () banked
 10050   0029FC  21B2               	addwfc	(FFT@N+1)& (0+255),w,b
 10051   0029FE  0100               	movlb	0	; () banked
 10052   002A00  6FFE               	movwf	(??_FFT+1)& (0+255),b
 10053   002A02  51FD               	movf	??_FFT& (0+255),w,b
 10054   002A04  0101               	movlb	1	; () banked
 10055   002A06  5DF1               	subwf	FFT@n& (0+255),w,b
 10056   002A08  51F2               	movf	(FFT@n+1)& (0+255),w,b
 10057   002A0A  0A80               	xorlw	128
 10058   002A0C  0100               	movlb	0	; () banked
 10059   002A0E  6FFF               	movwf	(??_FFT+2)& (0+255),b
 10060   002A10  51FE               	movf	(??_FFT+1)& (0+255),w,b
 10061   002A12  0A80               	xorlw	128
 10062   002A14  59FF               	subwfb	(??_FFT+2)& (0+255),w,b
 10063   002A16  A0D8               	btfss	status,0,c
 10064   002A18  EF10  F015         	goto	u7901
 10065   002A1C  EF12  F015         	goto	u7900
 10066   002A20                     u7901:
 10067   002A20  EF62  F013         	goto	l7847
 10068   002A24                     u7900:
 10069   002A24                     
 10070                           ; BSR set to: 0
 10071                           ;main.c: 240:             tempR = uR;
 10072   002A24  C1DF  F1E5         	movff	FFT@uR,FFT@tempR
 10073   002A28  C1E0  F1E6         	movff	FFT@uR+1,FFT@tempR+1
 10074   002A2C  C1E1  F1E7         	movff	FFT@uR+2,FFT@tempR+2
 10075   002A30  C1E2  F1E8         	movff	FFT@uR+3,FFT@tempR+3
 10076   002A34                     
 10077                           ; BSR set to: 0
 10078                           ;main.c: 241:             uR = tempR*sR - uI*sI;
 10079   002A34  C1D5  F01F         	movff	FFT@sR,___flmul@a
 10080   002A38  C1D6  F020         	movff	FFT@sR+1,___flmul@a+1
 10081   002A3C  C1D7  F021         	movff	FFT@sR+2,___flmul@a+2
 10082   002A40  C1D8  F022         	movff	FFT@sR+3,___flmul@a+3
 10083   002A44  C1E5  F01B         	movff	FFT@tempR,___flmul@b
 10084   002A48  C1E6  F01C         	movff	FFT@tempR+1,___flmul@b+1
 10085   002A4C  C1E7  F01D         	movff	FFT@tempR+2,___flmul@b+2
 10086   002A50  C1E8  F01E         	movff	FFT@tempR+3,___flmul@b+3
 10087   002A54  EC80  F022         	call	___flmul	;wreg free
 10088   002A58  C01B  F060         	movff	?___flmul,___flsub@b
 10089   002A5C  C01C  F061         	movff	?___flmul+1,___flsub@b+1
 10090   002A60  C01D  F062         	movff	?___flmul+2,___flsub@b+2
 10091   002A64  C01E  F063         	movff	?___flmul+3,___flsub@b+3
 10092   002A68  C1D9  F01F         	movff	FFT@sI,___flmul@a
 10093   002A6C  C1DA  F020         	movff	FFT@sI+1,___flmul@a+1
 10094   002A70  C1DB  F021         	movff	FFT@sI+2,___flmul@a+2
 10095   002A74  C1DC  F022         	movff	FFT@sI+3,___flmul@a+3
 10096   002A78  C1E9  F01B         	movff	FFT@uI,___flmul@b
 10097   002A7C  C1EA  F01C         	movff	FFT@uI+1,___flmul@b+1
 10098   002A80  C1EB  F01D         	movff	FFT@uI+2,___flmul@b+2
 10099   002A84  C1EC  F01E         	movff	FFT@uI+3,___flmul@b+3
 10100   002A88  EC80  F022         	call	___flmul	;wreg free
 10101   002A8C  C01B  F064         	movff	?___flmul,___flsub@a
 10102   002A90  C01C  F065         	movff	?___flmul+1,___flsub@a+1
 10103   002A94  C01D  F066         	movff	?___flmul+2,___flsub@a+2
 10104   002A98  C01E  F067         	movff	?___flmul+3,___flsub@a+3
 10105   002A9C  ECBB  F035         	call	___flsub	;wreg free
 10106   002AA0  C060  F1DF         	movff	?___flsub,FFT@uR
 10107   002AA4  C061  F1E0         	movff	?___flsub+1,FFT@uR+1
 10108   002AA8  C062  F1E1         	movff	?___flsub+2,FFT@uR+2
 10109   002AAC  C063  F1E2         	movff	?___flsub+3,FFT@uR+3
 10110                           
 10111                           ;main.c: 242:             uI = tempR*sI + uI*sR;
 10112   002AB0  C1D9  F01F         	movff	FFT@sI,___flmul@a
 10113   002AB4  C1DA  F020         	movff	FFT@sI+1,___flmul@a+1
 10114   002AB8  C1DB  F021         	movff	FFT@sI+2,___flmul@a+2
 10115   002ABC  C1DC  F022         	movff	FFT@sI+3,___flmul@a+3
 10116   002AC0  C1E5  F01B         	movff	FFT@tempR,___flmul@b
 10117   002AC4  C1E6  F01C         	movff	FFT@tempR+1,___flmul@b+1
 10118   002AC8  C1E7  F01D         	movff	FFT@tempR+2,___flmul@b+2
 10119   002ACC  C1E8  F01E         	movff	FFT@tempR+3,___flmul@b+3
 10120   002AD0  EC80  F022         	call	___flmul	;wreg free
 10121   002AD4  C01B  F034         	movff	?___flmul,___fladd@b
 10122   002AD8  C01C  F035         	movff	?___flmul+1,___fladd@b+1
 10123   002ADC  C01D  F036         	movff	?___flmul+2,___fladd@b+2
 10124   002AE0  C01E  F037         	movff	?___flmul+3,___fladd@b+3
 10125   002AE4  C1D5  F01F         	movff	FFT@sR,___flmul@a
 10126   002AE8  C1D6  F020         	movff	FFT@sR+1,___flmul@a+1
 10127   002AEC  C1D7  F021         	movff	FFT@sR+2,___flmul@a+2
 10128   002AF0  C1D8  F022         	movff	FFT@sR+3,___flmul@a+3
 10129   002AF4  C1E9  F01B         	movff	FFT@uI,___flmul@b
 10130   002AF8  C1EA  F01C         	movff	FFT@uI+1,___flmul@b+1
 10131   002AFC  C1EB  F01D         	movff	FFT@uI+2,___flmul@b+2
 10132   002B00  C1EC  F01E         	movff	FFT@uI+3,___flmul@b+3
 10133   002B04  EC80  F022         	call	___flmul	;wreg free
 10134   002B08  C01B  F038         	movff	?___flmul,___fladd@a
 10135   002B0C  C01C  F039         	movff	?___flmul+1,___fladd@a+1
 10136   002B10  C01D  F03A         	movff	?___flmul+2,___fladd@a+2
 10137   002B14  C01E  F03B         	movff	?___flmul+3,___fladd@a+3
 10138   002B18  ECD8  F01D         	call	___fladd	;wreg free
 10139   002B1C  C034  F1E9         	movff	?___fladd,FFT@uI
 10140   002B20  C035  F1EA         	movff	?___fladd+1,FFT@uI+1
 10141   002B24  C036  F1EB         	movff	?___fladd+2,FFT@uI+2
 10142   002B28  C037  F1EC         	movff	?___fladd+3,FFT@uI+3
 10143   002B2C                     
 10144                           ;main.c: 243:         }
 10145   002B2C  0101               	movlb	1	; () banked
 10146   002B2E  4BE3               	infsnz	FFT@k& (0+255),f,b
 10147   002B30  2BE4               	incf	(FFT@k+1)& (0+255),f,b
 10148   002B32                     l7869:
 10149                           
 10150                           ; BSR set to: 1
 10151   002B32  C1EF  F00D         	movff	FFT@L,___awdiv@dividend
 10152   002B36  C1F0  F00E         	movff	FFT@L+1,___awdiv@dividend+1
 10153   002B3A  0E00               	movlw	0
 10154   002B3C  6E10               	movwf	(___awdiv@divisor+1)^0,c
 10155   002B3E  0E02               	movlw	2
 10156   002B40  6E0F               	movwf	___awdiv@divisor^0,c
 10157   002B42  ECAD  F032         	call	___awdiv	;wreg free
 10158   002B46  500D               	movf	?___awdiv^0,w,c
 10159   002B48  0101               	movlb	1	; () banked
 10160   002B4A  5DE3               	subwf	FFT@k& (0+255),w,b
 10161   002B4C  51E4               	movf	(FFT@k+1)& (0+255),w,b
 10162   002B4E  0A80               	xorlw	128
 10163   002B50  0100               	movlb	0	; () banked
 10164   002B52  6FFD               	movwf	??_FFT& (0+255),b
 10165   002B54  500E               	movf	(?___awdiv+1)^0,w,c
 10166   002B56  0A80               	xorlw	128
 10167   002B58  59FD               	subwfb	??_FFT& (0+255),w,b
 10168   002B5A  A0D8               	btfss	status,0,c
 10169   002B5C  EFB2  F015         	goto	u7911
 10170   002B60  EFB4  F015         	goto	u7910
 10171   002B64                     u7911:
 10172   002B64  EF5C  F013         	goto	l212
 10173   002B68                     u7910:
 10174   002B68                     
 10175                           ; BSR set to: 0
 10176                           ;main.c: 244:     }
 10177   002B68  0101               	movlb	1	; () banked
 10178   002B6A  4BDD               	infsnz	FFT@p& (0+255),f,b
 10179   002B6C  2BDE               	incf	(FFT@p+1)& (0+255),f,b
 10180   002B6E                     l7873:
 10181                           
 10182                           ; BSR set to: 1
 10183   002B6E  51DD               	movf	FFT@p& (0+255),w,b
 10184   002B70  5DCF               	subwf	FFT@M& (0+255),w,b
 10185   002B72  51D0               	movf	(FFT@M+1)& (0+255),w,b
 10186   002B74  0A80               	xorlw	128
 10187   002B76  0100               	movlb	0	; () banked
 10188   002B78  6FFD               	movwf	??_FFT& (0+255),b
 10189   002B7A  0101               	movlb	1	; () banked
 10190   002B7C  51DE               	movf	(FFT@p+1)& (0+255),w,b
 10191   002B7E  0A80               	xorlw	128
 10192   002B80  0100               	movlb	0	; () banked
 10193   002B82  59FD               	subwfb	??_FFT& (0+255),w,b
 10194   002B84  B0D8               	btfsc	status,0,c
 10195   002B86  EFC7  F015         	goto	u7921
 10196   002B8A  EFC9  F015         	goto	u7920
 10197   002B8E                     u7921:
 10198   002B8E  EF9B  F012         	goto	l7825
 10199   002B92                     u7920:
 10200   002B92                     
 10201                           ; BSR set to: 0
 10202   002B92  0012               	return		;funcret
 10203   002B94                     __end_of_FFT:
 10204                           	callstack 0
 10205                           
 10206 ;; *************** function _sinf *****************
 10207 ;; Defined at:
 10208 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sinf.c"
 10209 ;; Parameters:    Size  Location     Type
 10210 ;;  x               4    0[BANK1 ] float 
 10211 ;; Auto vars:     Size  Location     Type
 10212 ;;  ix              4   34[BANK1 ] unsigned long 
 10213 ;;  y               4   30[BANK1 ] unsigned long 
 10214 ;;  __xc8_float_    4   12[BANK1 ] struct .
 10215 ;;  n               4    8[BANK1 ] long 
 10216 ;;  sign            2   24[BANK1 ] int 
 10217 ;; Return value:  Size  Location     Type
 10218 ;;                  4    0[BANK1 ] float 
 10219 ;; Registers used:
 10220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10221 ;; Tracked objects:
 10222 ;;		On entry : 0/0
 10223 ;;		On exit  : 0/0
 10224 ;;		Unchanged: 0/0
 10225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10226 ;;      Params:         0       0       4       0       0       0       0       0       0
 10227 ;;      Locals:         0       0      30       0       0       0       0       0       0
 10228 ;;      Temps:          0       0       4       0       0       0       0       0       0
 10229 ;;      Totals:         0       0      38       0       0       0       0       0       0
 10230 ;;Total ram usage:       38 bytes
 10231 ;; Hardware stack levels used: 1
 10232 ;; Hardware stack levels required when called: 5
 10233 ;; This function calls:
 10234 ;;		___cosdf
 10235 ;;		___fladd
 10236 ;;		___flneg
 10237 ;;		___flsub
 10238 ;;		___rem_pio2f
 10239 ;;		___sindf
 10240 ;; This function is called by:
 10241 ;;		_FFT
 10242 ;; This function uses a non-reentrant model
 10243 ;;
 10244                           
 10245                           	psect	text38
 10246   002B94                     __ptext38:
 10247                           	callstack 0
 10248   002B94                     _sinf:
 10249                           	callstack 24
 10250   002B94  C18B  F197         	movff	sinf@x,sinf@__xc8_float_word
 10251   002B98  C18C  F198         	movff	sinf@x+1,sinf@__xc8_float_word+1
 10252   002B9C  C18D  F199         	movff	sinf@x+2,sinf@__xc8_float_word+2
 10253   002BA0  C18E  F19A         	movff	sinf@x+3,sinf@__xc8_float_word+3
 10254   002BA4  C197  F1AD         	movff	sinf@__xc8_float_word,sinf@ix
 10255   002BA8  C198  F1AE         	movff	sinf@__xc8_float_word+1,sinf@ix+1
 10256   002BAC  C199  F1AF         	movff	sinf@__xc8_float_word+2,sinf@ix+2
 10257   002BB0  C19A  F1B0         	movff	sinf@__xc8_float_word+3,sinf@ix+3
 10258   002BB4  C1AD  F18F         	movff	sinf@ix,??_sinf
 10259   002BB8  C1AE  F190         	movff	sinf@ix+1,??_sinf+1
 10260   002BBC  C1AF  F191         	movff	sinf@ix+2,??_sinf+2
 10261   002BC0  C1B0  F192         	movff	sinf@ix+3,??_sinf+3
 10262   002BC4  0E20               	movlw	32
 10263   002BC6  EFEB  F015         	goto	u7640
 10264   002BCA                     u7645:
 10265   002BCA  0101               	movlb	1	; () banked
 10266   002BCC  90D8               	bcf	status,0,c
 10267   002BCE  3392               	rrcf	(??_sinf+3)& (0+255),f,b
 10268   002BD0  3391               	rrcf	(??_sinf+2)& (0+255),f,b
 10269   002BD2  3390               	rrcf	(??_sinf+1)& (0+255),f,b
 10270   002BD4  338F               	rrcf	??_sinf& (0+255),f,b
 10271   002BD6                     u7640:
 10272   002BD6  2EE8               	decfsz	wreg,f,c
 10273   002BD8  EFE5  F015         	goto	u7645
 10274   002BDC  C18F  F1A3         	movff	??_sinf,sinf@sign
 10275   002BE0  C190  F1A4         	movff	??_sinf+1,sinf@sign+1
 10276   002BE4                     
 10277                           ; BSR set to: 1
 10278   002BE4  9FB0               	bcf	(sinf@ix+3)& (0+255),7,b
 10279   002BE6                     
 10280                           ; BSR set to: 1
 10281   002BE6  0EDB               	movlw	219
 10282   002BE8  5DAD               	subwf	sinf@ix& (0+255),w,b
 10283   002BEA  0E0F               	movlw	15
 10284   002BEC  59AE               	subwfb	(sinf@ix+1)& (0+255),w,b
 10285   002BEE  0E49               	movlw	73
 10286   002BF0  59AF               	subwfb	(sinf@ix+2)& (0+255),w,b
 10287   002BF2  0E3F               	movlw	63
 10288   002BF4  59B0               	subwfb	(sinf@ix+3)& (0+255),w,b
 10289   002BF6  B0D8               	btfsc	status,0,c
 10290   002BF8  EF00  F016         	goto	u7651
 10291   002BFC  EF02  F016         	goto	u7650
 10292   002C00                     u7651:
 10293   002C00  EF2B  F016         	goto	l7567
 10294   002C04                     u7650:
 10295   002C04                     
 10296                           ; BSR set to: 1
 10297   002C04  0E80               	movlw	128
 10298   002C06  5DAF               	subwf	(sinf@ix+2)& (0+255),w,b
 10299   002C08  0E39               	movlw	57
 10300   002C0A  59B0               	subwfb	(sinf@ix+3)& (0+255),w,b
 10301   002C0C  B0D8               	btfsc	status,0,c
 10302   002C0E  EF0B  F016         	goto	u7661
 10303   002C12  EF0D  F016         	goto	u7660
 10304   002C16                     u7661:
 10305   002C16  EF17  F016         	goto	l7563
 10306   002C1A                     u7660:
 10307   002C1A                     
 10308                           ; BSR set to: 1
 10309   002C1A  C18B  F18B         	movff	sinf@x,?_sinf
 10310   002C1E  C18C  F18C         	movff	sinf@x+1,?_sinf+1
 10311   002C22  C18D  F18D         	movff	sinf@x+2,?_sinf+2
 10312   002C26  C18E  F18E         	movff	sinf@x+3,?_sinf+3
 10313   002C2A  EFA8  F018         	goto	l1335
 10314   002C2E                     l7563:
 10315                           
 10316                           ; BSR set to: 1
 10317   002C2E  C18B  F085         	movff	sinf@x,___sindf@x
 10318   002C32  C18C  F086         	movff	sinf@x+1,___sindf@x+1
 10319   002C36  C18D  F087         	movff	sinf@x+2,___sindf@x+2
 10320   002C3A  C18E  F088         	movff	sinf@x+3,___sindf@x+3
 10321   002C3E  ECB1  F029         	call	___sindf	;wreg free
 10322   002C42  C085  F18B         	movff	?___sindf,?_sinf
 10323   002C46  C086  F18C         	movff	?___sindf+1,?_sinf+1
 10324   002C4A  C087  F18D         	movff	?___sindf+2,?_sinf+2
 10325   002C4E  C088  F18E         	movff	?___sindf+3,?_sinf+3
 10326   002C52  EFA8  F018         	goto	l1335
 10327   002C56                     l7567:
 10328                           
 10329                           ; BSR set to: 1
 10330   002C56  0ED2               	movlw	210
 10331   002C58  5DAD               	subwf	sinf@ix& (0+255),w,b
 10332   002C5A  0E53               	movlw	83
 10333   002C5C  59AE               	subwfb	(sinf@ix+1)& (0+255),w,b
 10334   002C5E  0E7B               	movlw	123
 10335   002C60  59AF               	subwfb	(sinf@ix+2)& (0+255),w,b
 10336   002C62  0E40               	movlw	64
 10337   002C64  59B0               	subwfb	(sinf@ix+3)& (0+255),w,b
 10338   002C66  B0D8               	btfsc	status,0,c
 10339   002C68  EF38  F016         	goto	u7671
 10340   002C6C  EF3A  F016         	goto	u7670
 10341   002C70                     u7671:
 10342   002C70  EF1F  F017         	goto	l7597
 10343   002C74                     u7670:
 10344   002C74                     
 10345                           ; BSR set to: 1
 10346   002C74  0EE4               	movlw	228
 10347   002C76  5DAD               	subwf	sinf@ix& (0+255),w,b
 10348   002C78  0ECB               	movlw	203
 10349   002C7A  59AE               	subwfb	(sinf@ix+1)& (0+255),w,b
 10350   002C7C  0E16               	movlw	22
 10351   002C7E  59AF               	subwfb	(sinf@ix+2)& (0+255),w,b
 10352   002C80  0E40               	movlw	64
 10353   002C82  59B0               	subwfb	(sinf@ix+3)& (0+255),w,b
 10354   002C84  B0D8               	btfsc	status,0,c
 10355   002C86  EF47  F016         	goto	u7681
 10356   002C8A  EF49  F016         	goto	u7680
 10357   002C8E                     u7681:
 10358   002C8E  EFB8  F016         	goto	l7587
 10359   002C92                     u7680:
 10360   002C92                     
 10361                           ; BSR set to: 1
 10362   002C92  51A3               	movf	sinf@sign& (0+255),w,b
 10363   002C94  11A4               	iorwf	(sinf@sign+1)& (0+255),w,b
 10364   002C96  B4D8               	btfsc	status,2,c
 10365   002C98  EF50  F016         	goto	u7691
 10366   002C9C  EF52  F016         	goto	u7690
 10367   002CA0                     u7691:
 10368   002CA0  EF8A  F016         	goto	l7581
 10369   002CA4                     u7690:
 10370   002CA4                     
 10371                           ; BSR set to: 1
 10372   002CA4  0EDB               	movlw	219
 10373   002CA6  6E38               	movwf	___fladd@a^0,c
 10374   002CA8  0E0F               	movlw	15
 10375   002CAA  6E39               	movwf	(___fladd@a+1)^0,c
 10376   002CAC  0EC9               	movlw	201
 10377   002CAE  6E3A               	movwf	(___fladd@a+2)^0,c
 10378   002CB0  0E3F               	movlw	63
 10379   002CB2  6E3B               	movwf	(___fladd@a+3)^0,c
 10380   002CB4  C18B  F034         	movff	sinf@x,___fladd@b
 10381   002CB8  C18C  F035         	movff	sinf@x+1,___fladd@b+1
 10382   002CBC  C18D  F036         	movff	sinf@x+2,___fladd@b+2
 10383   002CC0  C18E  F037         	movff	sinf@x+3,___fladd@b+3
 10384   002CC4  ECD8  F01D         	call	___fladd	;wreg free
 10385   002CC8  C034  F1A5         	movff	?___fladd,_sinf$1810
 10386   002CCC  C035  F1A6         	movff	?___fladd+1,_sinf$1810+1
 10387   002CD0  C036  F1A7         	movff	?___fladd+2,_sinf$1810+2
 10388   002CD4  C037  F1A8         	movff	?___fladd+3,_sinf$1810+3
 10389   002CD8                     l7575:
 10390   002CD8  C1A5  F060         	movff	_sinf$1810,___cosdf@x
 10391   002CDC  C1A6  F061         	movff	_sinf$1810+1,___cosdf@x+1
 10392   002CE0  C1A7  F062         	movff	_sinf$1810+2,___cosdf@x+2
 10393   002CE4  C1A8  F063         	movff	_sinf$1810+3,___cosdf@x+3
 10394   002CE8  ECD9  F02C         	call	___cosdf	;wreg free
 10395   002CEC  C060  F081         	movff	?___cosdf,___flneg@f1
 10396   002CF0  C061  F082         	movff	?___cosdf+1,___flneg@f1+1
 10397   002CF4  C062  F083         	movff	?___cosdf+2,___flneg@f1+2
 10398   002CF8  C063  F084         	movff	?___cosdf+3,___flneg@f1+3
 10399   002CFC  EC61  F036         	call	___flneg	;wreg free
 10400   002D00  C081  F18B         	movff	?___flneg,?_sinf
 10401   002D04  C082  F18C         	movff	?___flneg+1,?_sinf+1
 10402   002D08  C083  F18D         	movff	?___flneg+2,?_sinf+2
 10403   002D0C  C084  F18E         	movff	?___flneg+3,?_sinf+3
 10404   002D10  EFA8  F018         	goto	l1335
 10405   002D14                     l7581:
 10406                           
 10407                           ; BSR set to: 1
 10408   002D14  C18B  F034         	movff	sinf@x,___fladd@b
 10409   002D18  C18C  F035         	movff	sinf@x+1,___fladd@b+1
 10410   002D1C  C18D  F036         	movff	sinf@x+2,___fladd@b+2
 10411   002D20  C18E  F037         	movff	sinf@x+3,___fladd@b+3
 10412   002D24  0EDB               	movlw	219
 10413   002D26  6E38               	movwf	___fladd@a^0,c
 10414   002D28  0E0F               	movlw	15
 10415   002D2A  6E39               	movwf	(___fladd@a+1)^0,c
 10416   002D2C  0EC9               	movlw	201
 10417   002D2E  6E3A               	movwf	(___fladd@a+2)^0,c
 10418   002D30  0EBF               	movlw	191
 10419   002D32  6E3B               	movwf	(___fladd@a+3)^0,c
 10420   002D34  ECD8  F01D         	call	___fladd	;wreg free
 10421   002D38  C034  F1A5         	movff	?___fladd,_sinf$1810
 10422   002D3C  C035  F1A6         	movff	?___fladd+1,_sinf$1810+1
 10423   002D40  C036  F1A7         	movff	?___fladd+2,_sinf$1810+2
 10424   002D44  C037  F1A8         	movff	?___fladd+3,_sinf$1810+3
 10425   002D48                     l7583:
 10426   002D48  C1A5  F060         	movff	_sinf$1810,___cosdf@x
 10427   002D4C  C1A6  F061         	movff	_sinf$1810+1,___cosdf@x+1
 10428   002D50  C1A7  F062         	movff	_sinf$1810+2,___cosdf@x+2
 10429   002D54  C1A8  F063         	movff	_sinf$1810+3,___cosdf@x+3
 10430   002D58  ECD9  F02C         	call	___cosdf	;wreg free
 10431   002D5C  C060  F18B         	movff	?___cosdf,?_sinf
 10432   002D60  C061  F18C         	movff	?___cosdf+1,?_sinf+1
 10433   002D64  C062  F18D         	movff	?___cosdf+2,?_sinf+2
 10434   002D68  C063  F18E         	movff	?___cosdf+3,?_sinf+3
 10435   002D6C  EFA8  F018         	goto	l1335
 10436   002D70                     l7587:
 10437                           
 10438                           ; BSR set to: 1
 10439   002D70  51A3               	movf	sinf@sign& (0+255),w,b
 10440   002D72  11A4               	iorwf	(sinf@sign+1)& (0+255),w,b
 10441   002D74  A4D8               	btfss	status,2,c
 10442   002D76  EFBF  F016         	goto	u7701
 10443   002D7A  EFC1  F016         	goto	u7700
 10444   002D7E                     u7701:
 10445   002D7E  EFE7  F016         	goto	l7591
 10446   002D82                     u7700:
 10447   002D82                     
 10448                           ; BSR set to: 1
 10449   002D82  0EDB               	movlw	219
 10450   002D84  6E38               	movwf	___fladd@a^0,c
 10451   002D86  0E0F               	movlw	15
 10452   002D88  6E39               	movwf	(___fladd@a+1)^0,c
 10453   002D8A  0E49               	movlw	73
 10454   002D8C  6E3A               	movwf	(___fladd@a+2)^0,c
 10455   002D8E  0EC0               	movlw	192
 10456   002D90  6E3B               	movwf	(___fladd@a+3)^0,c
 10457   002D92  C18B  F034         	movff	sinf@x,___fladd@b
 10458   002D96  C18C  F035         	movff	sinf@x+1,___fladd@b+1
 10459   002D9A  C18D  F036         	movff	sinf@x+2,___fladd@b+2
 10460   002D9E  C18E  F037         	movff	sinf@x+3,___fladd@b+3
 10461   002DA2  ECD8  F01D         	call	___fladd	;wreg free
 10462   002DA6  C034  F081         	movff	?___fladd,___flneg@f1
 10463   002DAA  C035  F082         	movff	?___fladd+1,___flneg@f1+1
 10464   002DAE  C036  F083         	movff	?___fladd+2,___flneg@f1+2
 10465   002DB2  C037  F084         	movff	?___fladd+3,___flneg@f1+3
 10466   002DB6  EC61  F036         	call	___flneg	;wreg free
 10467   002DBA  C081  F19B         	movff	?___flneg,_sinf$1556
 10468   002DBE  C082  F19C         	movff	?___flneg+1,_sinf$1556+1
 10469   002DC2  C083  F19D         	movff	?___flneg+2,_sinf$1556+2
 10470   002DC6  C084  F19E         	movff	?___flneg+3,_sinf$1556+3
 10471   002DCA  EF0B  F017         	goto	l7593
 10472   002DCE                     l7591:
 10473                           
 10474                           ; BSR set to: 1
 10475   002DCE  0EDB               	movlw	219
 10476   002DD0  6E38               	movwf	___fladd@a^0,c
 10477   002DD2  0E0F               	movlw	15
 10478   002DD4  6E39               	movwf	(___fladd@a+1)^0,c
 10479   002DD6  0E49               	movlw	73
 10480   002DD8  6E3A               	movwf	(___fladd@a+2)^0,c
 10481   002DDA  0E40               	movlw	64
 10482   002DDC  6E3B               	movwf	(___fladd@a+3)^0,c
 10483   002DDE  C18B  F034         	movff	sinf@x,___fladd@b
 10484   002DE2  C18C  F035         	movff	sinf@x+1,___fladd@b+1
 10485   002DE6  C18D  F036         	movff	sinf@x+2,___fladd@b+2
 10486   002DEA  C18E  F037         	movff	sinf@x+3,___fladd@b+3
 10487   002DEE  ECD8  F01D         	call	___fladd	;wreg free
 10488   002DF2  C034  F081         	movff	?___fladd,___flneg@f1
 10489   002DF6  C035  F082         	movff	?___fladd+1,___flneg@f1+1
 10490   002DFA  C036  F083         	movff	?___fladd+2,___flneg@f1+2
 10491   002DFE  C037  F084         	movff	?___fladd+3,___flneg@f1+3
 10492   002E02  EC61  F036         	call	___flneg	;wreg free
 10493   002E06  C081  F19B         	movff	?___flneg,_sinf$1556
 10494   002E0A  C082  F19C         	movff	?___flneg+1,_sinf$1556+1
 10495   002E0E  C083  F19D         	movff	?___flneg+2,_sinf$1556+2
 10496   002E12  C084  F19E         	movff	?___flneg+3,_sinf$1556+3
 10497   002E16                     l7593:
 10498   002E16  C19B  F085         	movff	_sinf$1556,___sindf@x
 10499   002E1A  C19C  F086         	movff	_sinf$1556+1,___sindf@x+1
 10500   002E1E  C19D  F087         	movff	_sinf$1556+2,___sindf@x+2
 10501   002E22  C19E  F088         	movff	_sinf$1556+3,___sindf@x+3
 10502   002E26  ECB1  F029         	call	___sindf	;wreg free
 10503   002E2A  C085  F18B         	movff	?___sindf,?_sinf
 10504   002E2E  C086  F18C         	movff	?___sindf+1,?_sinf+1
 10505   002E32  C087  F18D         	movff	?___sindf+2,?_sinf+2
 10506   002E36  C088  F18E         	movff	?___sindf+3,?_sinf+3
 10507   002E3A  EFA8  F018         	goto	l1335
 10508   002E3E                     l7597:
 10509                           
 10510                           ; BSR set to: 1
 10511   002E3E  0ED6               	movlw	214
 10512   002E40  5DAD               	subwf	sinf@ix& (0+255),w,b
 10513   002E42  0E31               	movlw	49
 10514   002E44  59AE               	subwfb	(sinf@ix+1)& (0+255),w,b
 10515   002E46  0EE2               	movlw	226
 10516   002E48  59AF               	subwfb	(sinf@ix+2)& (0+255),w,b
 10517   002E4A  0E40               	movlw	64
 10518   002E4C  59B0               	subwfb	(sinf@ix+3)& (0+255),w,b
 10519   002E4E  B0D8               	btfsc	status,0,c
 10520   002E50  EF2C  F017         	goto	u7711
 10521   002E54  EF2E  F017         	goto	u7710
 10522   002E58                     u7711:
 10523   002E58  EFD1  F017         	goto	l7627
 10524   002E5C                     u7710:
 10525   002E5C                     
 10526                           ; BSR set to: 1
 10527   002E5C  0EE0               	movlw	224
 10528   002E5E  5DAD               	subwf	sinf@ix& (0+255),w,b
 10529   002E60  0EED               	movlw	237
 10530   002E62  59AE               	subwfb	(sinf@ix+1)& (0+255),w,b
 10531   002E64  0EAF               	movlw	175
 10532   002E66  59AF               	subwfb	(sinf@ix+2)& (0+255),w,b
 10533   002E68  0E40               	movlw	64
 10534   002E6A  59B0               	subwfb	(sinf@ix+3)& (0+255),w,b
 10535   002E6C  B0D8               	btfsc	status,0,c
 10536   002E6E  EF3B  F017         	goto	u7721
 10537   002E72  EF3D  F017         	goto	u7720
 10538   002E76                     u7721:
 10539   002E76  EF7E  F017         	goto	l7617
 10540   002E7A                     u7720:
 10541   002E7A                     
 10542                           ; BSR set to: 1
 10543   002E7A  51A3               	movf	sinf@sign& (0+255),w,b
 10544   002E7C  11A4               	iorwf	(sinf@sign+1)& (0+255),w,b
 10545   002E7E  B4D8               	btfsc	status,2,c
 10546   002E80  EF44  F017         	goto	u7731
 10547   002E84  EF46  F017         	goto	u7730
 10548   002E88                     u7731:
 10549   002E88  EF62  F017         	goto	l7611
 10550   002E8C                     u7730:
 10551   002E8C                     
 10552                           ; BSR set to: 1
 10553   002E8C  C18B  F034         	movff	sinf@x,___fladd@b
 10554   002E90  C18C  F035         	movff	sinf@x+1,___fladd@b+1
 10555   002E94  C18D  F036         	movff	sinf@x+2,___fladd@b+2
 10556   002E98  C18E  F037         	movff	sinf@x+3,___fladd@b+3
 10557   002E9C  0EE4               	movlw	228
 10558   002E9E  6E38               	movwf	___fladd@a^0,c
 10559   002EA0  0ECB               	movlw	203
 10560   002EA2  6E39               	movwf	(___fladd@a+1)^0,c
 10561   002EA4  0E96               	movlw	150
 10562   002EA6  6E3A               	movwf	(___fladd@a+2)^0,c
 10563   002EA8  0E40               	movlw	64
 10564   002EAA  6E3B               	movwf	(___fladd@a+3)^0,c
 10565   002EAC  ECD8  F01D         	call	___fladd	;wreg free
 10566   002EB0  C034  F1A5         	movff	?___fladd,_sinf$1810
 10567   002EB4  C035  F1A6         	movff	?___fladd+1,_sinf$1810+1
 10568   002EB8  C036  F1A7         	movff	?___fladd+2,_sinf$1810+2
 10569   002EBC  C037  F1A8         	movff	?___fladd+3,_sinf$1810+3
 10570   002EC0  EFA4  F016         	goto	l7583
 10571   002EC4                     l7611:
 10572                           
 10573                           ; BSR set to: 1
 10574   002EC4  0EE4               	movlw	228
 10575   002EC6  6E38               	movwf	___fladd@a^0,c
 10576   002EC8  0ECB               	movlw	203
 10577   002ECA  6E39               	movwf	(___fladd@a+1)^0,c
 10578   002ECC  0E96               	movlw	150
 10579   002ECE  6E3A               	movwf	(___fladd@a+2)^0,c
 10580   002ED0  0EC0               	movlw	192
 10581   002ED2  6E3B               	movwf	(___fladd@a+3)^0,c
 10582   002ED4  C18B  F034         	movff	sinf@x,___fladd@b
 10583   002ED8  C18C  F035         	movff	sinf@x+1,___fladd@b+1
 10584   002EDC  C18D  F036         	movff	sinf@x+2,___fladd@b+2
 10585   002EE0  C18E  F037         	movff	sinf@x+3,___fladd@b+3
 10586   002EE4  ECD8  F01D         	call	___fladd	;wreg free
 10587   002EE8  C034  F1A5         	movff	?___fladd,_sinf$1810
 10588   002EEC  C035  F1A6         	movff	?___fladd+1,_sinf$1810+1
 10589   002EF0  C036  F1A7         	movff	?___fladd+2,_sinf$1810+2
 10590   002EF4  C037  F1A8         	movff	?___fladd+3,_sinf$1810+3
 10591   002EF8  EF6C  F016         	goto	l7575
 10592   002EFC                     l7617:
 10593                           
 10594                           ; BSR set to: 1
 10595   002EFC  51A3               	movf	sinf@sign& (0+255),w,b
 10596   002EFE  11A4               	iorwf	(sinf@sign+1)& (0+255),w,b
 10597   002F00  A4D8               	btfss	status,2,c
 10598   002F02  EF85  F017         	goto	u7741
 10599   002F06  EF87  F017         	goto	u7740
 10600   002F0A                     u7741:
 10601   002F0A  EFA3  F017         	goto	l7621
 10602   002F0E                     u7740:
 10603   002F0E                     
 10604                           ; BSR set to: 1
 10605   002F0E  C18B  F034         	movff	sinf@x,___fladd@b
 10606   002F12  C18C  F035         	movff	sinf@x+1,___fladd@b+1
 10607   002F16  C18D  F036         	movff	sinf@x+2,___fladd@b+2
 10608   002F1A  C18E  F037         	movff	sinf@x+3,___fladd@b+3
 10609   002F1E  0EDB               	movlw	219
 10610   002F20  6E38               	movwf	___fladd@a^0,c
 10611   002F22  0E0F               	movlw	15
 10612   002F24  6E39               	movwf	(___fladd@a+1)^0,c
 10613   002F26  0EC9               	movlw	201
 10614   002F28  6E3A               	movwf	(___fladd@a+2)^0,c
 10615   002F2A  0EC0               	movlw	192
 10616   002F2C  6E3B               	movwf	(___fladd@a+3)^0,c
 10617   002F2E  ECD8  F01D         	call	___fladd	;wreg free
 10618   002F32  C034  F19F         	movff	?___fladd,_sinf$1557
 10619   002F36  C035  F1A0         	movff	?___fladd+1,_sinf$1557+1
 10620   002F3A  C036  F1A1         	movff	?___fladd+2,_sinf$1557+2
 10621   002F3E  C037  F1A2         	movff	?___fladd+3,_sinf$1557+3
 10622   002F42  EFBD  F017         	goto	l7623
 10623   002F46                     l7621:
 10624                           
 10625                           ; BSR set to: 1
 10626   002F46  C18B  F034         	movff	sinf@x,___fladd@b
 10627   002F4A  C18C  F035         	movff	sinf@x+1,___fladd@b+1
 10628   002F4E  C18D  F036         	movff	sinf@x+2,___fladd@b+2
 10629   002F52  C18E  F037         	movff	sinf@x+3,___fladd@b+3
 10630   002F56  0EDB               	movlw	219
 10631   002F58  6E38               	movwf	___fladd@a^0,c
 10632   002F5A  0E0F               	movlw	15
 10633   002F5C  6E39               	movwf	(___fladd@a+1)^0,c
 10634   002F5E  0EC9               	movlw	201
 10635   002F60  6E3A               	movwf	(___fladd@a+2)^0,c
 10636   002F62  0E40               	movlw	64
 10637   002F64  6E3B               	movwf	(___fladd@a+3)^0,c
 10638   002F66  ECD8  F01D         	call	___fladd	;wreg free
 10639   002F6A  C034  F19F         	movff	?___fladd,_sinf$1557
 10640   002F6E  C035  F1A0         	movff	?___fladd+1,_sinf$1557+1
 10641   002F72  C036  F1A1         	movff	?___fladd+2,_sinf$1557+2
 10642   002F76  C037  F1A2         	movff	?___fladd+3,_sinf$1557+3
 10643   002F7A                     l7623:
 10644   002F7A  C19F  F085         	movff	_sinf$1557,___sindf@x
 10645   002F7E  C1A0  F086         	movff	_sinf$1557+1,___sindf@x+1
 10646   002F82  C1A1  F087         	movff	_sinf$1557+2,___sindf@x+2
 10647   002F86  C1A2  F088         	movff	_sinf$1557+3,___sindf@x+3
 10648   002F8A  ECB1  F029         	call	___sindf	;wreg free
 10649   002F8E  C085  F18B         	movff	?___sindf,?_sinf
 10650   002F92  C086  F18C         	movff	?___sindf+1,?_sinf+1
 10651   002F96  C087  F18D         	movff	?___sindf+2,?_sinf+2
 10652   002F9A  C088  F18E         	movff	?___sindf+3,?_sinf+3
 10653   002F9E  EFA8  F018         	goto	l1335
 10654   002FA2                     l7627:
 10655                           
 10656                           ; BSR set to: 1
 10657   002FA2  0E80               	movlw	128
 10658   002FA4  5DAF               	subwf	(sinf@ix+2)& (0+255),w,b
 10659   002FA6  0E7F               	movlw	127
 10660   002FA8  59B0               	subwfb	(sinf@ix+3)& (0+255),w,b
 10661   002FAA  A0D8               	btfss	status,0,c
 10662   002FAC  EFDA  F017         	goto	u7751
 10663   002FB0  EFDC  F017         	goto	u7750
 10664   002FB4                     u7751:
 10665   002FB4  EFF8  F017         	goto	l7633
 10666   002FB8                     u7750:
 10667   002FB8                     
 10668                           ; BSR set to: 1
 10669   002FB8  C18B  F060         	movff	sinf@x,___flsub@b
 10670   002FBC  C18C  F061         	movff	sinf@x+1,___flsub@b+1
 10671   002FC0  C18D  F062         	movff	sinf@x+2,___flsub@b+2
 10672   002FC4  C18E  F063         	movff	sinf@x+3,___flsub@b+3
 10673   002FC8  C18B  F064         	movff	sinf@x,___flsub@a
 10674   002FCC  C18C  F065         	movff	sinf@x+1,___flsub@a+1
 10675   002FD0  C18D  F066         	movff	sinf@x+2,___flsub@a+2
 10676   002FD4  C18E  F067         	movff	sinf@x+3,___flsub@a+3
 10677   002FD8  ECBB  F035         	call	___flsub	;wreg free
 10678   002FDC  C060  F18B         	movff	?___flsub,?_sinf
 10679   002FE0  C061  F18C         	movff	?___flsub+1,?_sinf+1
 10680   002FE4  C062  F18D         	movff	?___flsub+2,?_sinf+2
 10681   002FE8  C063  F18E         	movff	?___flsub+3,?_sinf+3
 10682   002FEC  EFA8  F018         	goto	l1335
 10683   002FF0                     l7633:
 10684                           
 10685                           ; BSR set to: 1
 10686   002FF0  C18B  F0D5         	movff	sinf@x,___rem_pio2f@x
 10687   002FF4  C18C  F0D6         	movff	sinf@x+1,___rem_pio2f@x+1
 10688   002FF8  C18D  F0D7         	movff	sinf@x+2,___rem_pio2f@x+2
 10689   002FFC  C18E  F0D8         	movff	sinf@x+3,___rem_pio2f@x+3
 10690   003000  0EA9               	movlw	low sinf@y
 10691   003002  0100               	movlb	0	; () banked
 10692   003004  6FD9               	movwf	___rem_pio2f@y& (0+255),b
 10693   003006  0E01               	movlw	high sinf@y
 10694   003008  6FDA               	movwf	(___rem_pio2f@y+1)& (0+255),b
 10695   00300A  EC38  F020         	call	___rem_pio2f	;wreg free
 10696   00300E  0100               	movlb	0	; () banked
 10697   003010  C0D5  F193         	movff	?___rem_pio2f,sinf@n
 10698   003014  C0D6  F194         	movff	?___rem_pio2f+1,sinf@n+1
 10699   003018  0101               	movlb	1	; () banked
 10700   00301A  0E00               	movlw	0
 10701   00301C  BF94               	btfsc	(sinf@n+1)& (0+255),7,b
 10702   00301E  0EFF               	movlw	-1
 10703   003020  6F95               	movwf	(sinf@n+2)& (0+255),b
 10704   003022  6F96               	movwf	(sinf@n+3)& (0+255),b
 10705   003024  EF78  F018         	goto	l7653
 10706   003028                     l7635:
 10707                           
 10708                           ; BSR set to: 1
 10709   003028  C1A9  F085         	movff	sinf@y,___sindf@x
 10710   00302C  C1AA  F086         	movff	sinf@y+1,___sindf@x+1
 10711   003030  C1AB  F087         	movff	sinf@y+2,___sindf@x+2
 10712   003034  C1AC  F088         	movff	sinf@y+3,___sindf@x+3
 10713   003038  ECB1  F029         	call	___sindf	;wreg free
 10714   00303C  C085  F18B         	movff	?___sindf,?_sinf
 10715   003040  C086  F18C         	movff	?___sindf+1,?_sinf+1
 10716   003044  C087  F18D         	movff	?___sindf+2,?_sinf+2
 10717   003048  C088  F18E         	movff	?___sindf+3,?_sinf+3
 10718   00304C  EFA8  F018         	goto	l1335
 10719   003050                     l7639:
 10720                           
 10721                           ; BSR set to: 1
 10722   003050  C1A9  F060         	movff	sinf@y,___cosdf@x
 10723   003054  C1AA  F061         	movff	sinf@y+1,___cosdf@x+1
 10724   003058  C1AB  F062         	movff	sinf@y+2,___cosdf@x+2
 10725   00305C  C1AC  F063         	movff	sinf@y+3,___cosdf@x+3
 10726   003060  ECD9  F02C         	call	___cosdf	;wreg free
 10727   003064  C060  F18B         	movff	?___cosdf,?_sinf
 10728   003068  C061  F18C         	movff	?___cosdf+1,?_sinf+1
 10729   00306C  C062  F18D         	movff	?___cosdf+2,?_sinf+2
 10730   003070  C063  F18E         	movff	?___cosdf+3,?_sinf+3
 10731   003074  EFA8  F018         	goto	l1335
 10732   003078                     l7643:
 10733                           
 10734                           ; BSR set to: 1
 10735   003078  C1A9  F081         	movff	sinf@y,___flneg@f1
 10736   00307C  C1AA  F082         	movff	sinf@y+1,___flneg@f1+1
 10737   003080  C1AB  F083         	movff	sinf@y+2,___flneg@f1+2
 10738   003084  C1AC  F084         	movff	sinf@y+3,___flneg@f1+3
 10739   003088  EC61  F036         	call	___flneg	;wreg free
 10740   00308C  C081  F085         	movff	?___flneg,___sindf@x
 10741   003090  C082  F086         	movff	?___flneg+1,___sindf@x+1
 10742   003094  C083  F087         	movff	?___flneg+2,___sindf@x+2
 10743   003098  C084  F088         	movff	?___flneg+3,___sindf@x+3
 10744   00309C  ECB1  F029         	call	___sindf	;wreg free
 10745   0030A0  C085  F18B         	movff	?___sindf,?_sinf
 10746   0030A4  C086  F18C         	movff	?___sindf+1,?_sinf+1
 10747   0030A8  C087  F18D         	movff	?___sindf+2,?_sinf+2
 10748   0030AC  C088  F18E         	movff	?___sindf+3,?_sinf+3
 10749   0030B0  EFA8  F018         	goto	l1335
 10750   0030B4                     l7647:
 10751                           
 10752                           ; BSR set to: 1
 10753   0030B4  C1A9  F060         	movff	sinf@y,___cosdf@x
 10754   0030B8  C1AA  F061         	movff	sinf@y+1,___cosdf@x+1
 10755   0030BC  C1AB  F062         	movff	sinf@y+2,___cosdf@x+2
 10756   0030C0  C1AC  F063         	movff	sinf@y+3,___cosdf@x+3
 10757   0030C4  ECD9  F02C         	call	___cosdf	;wreg free
 10758   0030C8  C060  F081         	movff	?___cosdf,___flneg@f1
 10759   0030CC  C061  F082         	movff	?___cosdf+1,___flneg@f1+1
 10760   0030D0  C062  F083         	movff	?___cosdf+2,___flneg@f1+2
 10761   0030D4  C063  F084         	movff	?___cosdf+3,___flneg@f1+3
 10762   0030D8  EC61  F036         	call	___flneg	;wreg free
 10763   0030DC  C081  F18B         	movff	?___flneg,?_sinf
 10764   0030E0  C082  F18C         	movff	?___flneg+1,?_sinf+1
 10765   0030E4  C083  F18D         	movff	?___flneg+2,?_sinf+2
 10766   0030E8  C084  F18E         	movff	?___flneg+3,?_sinf+3
 10767   0030EC  EFA8  F018         	goto	l1335
 10768   0030F0                     l7653:
 10769                           
 10770                           ; BSR set to: 1
 10771   0030F0  0E03               	movlw	3
 10772   0030F2  1593               	andwf	sinf@n& (0+255),w,b
 10773   0030F4  6F8F               	movwf	??_sinf& (0+255),b
 10774   0030F6  0E00               	movlw	0
 10775   0030F8  1594               	andwf	(sinf@n+1)& (0+255),w,b
 10776   0030FA  6F90               	movwf	(??_sinf+1)& (0+255),b
 10777   0030FC  0E00               	movlw	0
 10778   0030FE  1595               	andwf	(sinf@n+2)& (0+255),w,b
 10779   003100  6F91               	movwf	(??_sinf+2)& (0+255),b
 10780   003102  0E00               	movlw	0
 10781   003104  1596               	andwf	(sinf@n+3)& (0+255),w,b
 10782   003106  6F92               	movwf	(??_sinf+3)& (0+255),b
 10783                           
 10784                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 10785                           ; Switch size 1, requested type "simple"
 10786                           ; Number of cases is 1, Range of values is 0 to 0
 10787                           ; switch strategies available:
 10788                           ; Name         Instructions Cycles
 10789                           ; simple_byte            4     3 (average)
 10790                           ;	Chosen strategy is simple_byte
 10791   003108  5192               	movf	(??_sinf+3)& (0+255),w,b
 10792   00310A  0A00               	xorlw	0	; case 0
 10793   00310C  B4D8               	btfsc	status,2,c
 10794   00310E  EFA1  F018         	goto	l8475
 10795   003112  EF5A  F018         	goto	l7647
 10796   003116                     l8473:
 10797                           
 10798                           ; BSR set to: 1
 10799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10800                           ; Switch size 1, requested type "simple"
 10801                           ; Number of cases is 1, Range of values is 0 to 0
 10802                           ; switch strategies available:
 10803                           ; Name         Instructions Cycles
 10804                           ; simple_byte            4     3 (average)
 10805                           ;	Chosen strategy is simple_byte
 10806   003116  5190               	movf	(??_sinf+1)& (0+255),w,b
 10807   003118  0A00               	xorlw	0	; case 0
 10808   00311A  B4D8               	btfsc	status,2,c
 10809   00311C  EF92  F018         	goto	l8477
 10810   003120  EF5A  F018         	goto	l7647
 10811   003124                     l8477:
 10812                           
 10813                           ; BSR set to: 1
 10814                           ; Switch size 1, requested type "simple"
 10815                           ; Number of cases is 3, Range of values is 0 to 2
 10816                           ; switch strategies available:
 10817                           ; Name         Instructions Cycles
 10818                           ; simple_byte           10     6 (average)
 10819                           ;	Chosen strategy is simple_byte
 10820   003124  518F               	movf	??_sinf& (0+255),w,b
 10821   003126  0A00               	xorlw	0	; case 0
 10822   003128  B4D8               	btfsc	status,2,c
 10823   00312A  EF14  F018         	goto	l7635
 10824   00312E  0A01               	xorlw	1	; case 1
 10825   003130  B4D8               	btfsc	status,2,c
 10826   003132  EF28  F018         	goto	l7639
 10827   003136  0A03               	xorlw	3	; case 2
 10828   003138  B4D8               	btfsc	status,2,c
 10829   00313A  EF3C  F018         	goto	l7643
 10830   00313E  EF5A  F018         	goto	l7647
 10831   003142                     l8475:
 10832                           
 10833                           ; BSR set to: 1
 10834                           ; Switch size 1, requested type "simple"
 10835                           ; Number of cases is 1, Range of values is 0 to 0
 10836                           ; switch strategies available:
 10837                           ; Name         Instructions Cycles
 10838                           ; simple_byte            4     3 (average)
 10839                           ;	Chosen strategy is simple_byte
 10840   003142  5191               	movf	(??_sinf+2)& (0+255),w,b
 10841   003144  0A00               	xorlw	0	; case 0
 10842   003146  B4D8               	btfsc	status,2,c
 10843   003148  EF8B  F018         	goto	l8473
 10844   00314C  EF5A  F018         	goto	l7647
 10845   003150                     l1335:
 10846   003150  0012               	return		;funcret
 10847   003152                     __end_of_sinf:
 10848                           	callstack 0
 10849                           
 10850 ;; *************** function _logf *****************
 10851 ;; Defined at:
 10852 ;;		line 29 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\logf.c"
 10853 ;; Parameters:    Size  Location     Type
 10854 ;;  x               4   33[BANK0 ] float 
 10855 ;; Auto vars:     Size  Location     Type
 10856 ;;  ix              4  105[BANK0 ] unsigned long 
 10857 ;;  f               4  101[BANK0 ] float 
 10858 ;;  u               4   97[BANK0 ] struct .
 10859 ;;  w               4   89[BANK0 ] float 
 10860 ;;  z               4   85[BANK0 ] float 
 10861 ;;  s               4   81[BANK0 ] float 
 10862 ;;  dk              4   77[BANK0 ] float 
 10863 ;;  hfsq            4   73[BANK0 ] float 
 10864 ;;  t2              4   51[BANK0 ] float 
 10865 ;;  t1              4   47[BANK0 ] float 
 10866 ;;  R               4   43[BANK0 ] float 
 10867 ;;  k               2   71[BANK0 ] int 
 10868 ;; Return value:  Size  Location     Type
 10869 ;;                  4   33[BANK0 ] float 
 10870 ;; Registers used:
 10871 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10872 ;; Tracked objects:
 10873 ;;		On entry : 0/0
 10874 ;;		On exit  : 0/0
 10875 ;;		Unchanged: 0/0
 10876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10877 ;;      Params:         0       4       0       0       0       0       0       0       0
 10878 ;;      Locals:         0      66       0       0       0       0       0       0       0
 10879 ;;      Temps:          0       6       0       0       0       0       0       0       0
 10880 ;;      Totals:         0      76       0       0       0       0       0       0       0
 10881 ;;Total ram usage:       76 bytes
 10882 ;; Hardware stack levels used: 1
 10883 ;; Hardware stack levels required when called: 4
 10884 ;; This function calls:
 10885 ;;		___fladd
 10886 ;;		___fldiv
 10887 ;;		___flmul
 10888 ;;		___flsub
 10889 ;;		___xxtofl
 10890 ;; This function is called by:
 10891 ;;		_main
 10892 ;;		_FFT
 10893 ;; This function uses a non-reentrant model
 10894 ;;
 10895                           
 10896                           	psect	text39
 10897   001D2C                     __ptext39:
 10898                           	callstack 0
 10899   001D2C                     _logf:
 10900                           	callstack 26
 10901   001D2C  C158  F0C1         	movff	logf@F472,logf@u
 10902   001D30  C159  F0C2         	movff	logf@F472+1,logf@u+1
 10903   001D34  C15A  F0C3         	movff	logf@F472+2,logf@u+2
 10904   001D38  C15B  F0C4         	movff	logf@F472+3,logf@u+3
 10905   001D3C  C081  F0C1         	movff	logf@x,logf@u
 10906   001D40  C082  F0C2         	movff	logf@x+1,logf@u+1
 10907   001D44  C083  F0C3         	movff	logf@x+2,logf@u+2
 10908   001D48  C084  F0C4         	movff	logf@x+3,logf@u+3
 10909   001D4C  C0C1  F0C9         	movff	logf@u,logf@ix
 10910   001D50  C0C2  F0CA         	movff	logf@u+1,logf@ix+1
 10911   001D54  C0C3  F0CB         	movff	logf@u+2,logf@ix+2
 10912   001D58  C0C4  F0CC         	movff	logf@u+3,logf@ix+3
 10913   001D5C  0E00               	movlw	0
 10914   001D5E  0100               	movlb	0	; () banked
 10915   001D60  6FA8               	movwf	(logf@k+1)& (0+255),b
 10916   001D62  0E00               	movlw	0
 10917   001D64  6FA7               	movwf	logf@k& (0+255),b
 10918   001D66                     
 10919                           ; BSR set to: 0
 10920   001D66  51CC               	movf	(logf@ix+3)& (0+255),w,b
 10921   001D68  E109               	bnz	u7400
 10922   001D6A  0E80               	movlw	128
 10923   001D6C  5DCB               	subwf	(logf@ix+2)& (0+255),w,b
 10924   001D6E  A0D8               	btfss	status,0,c
 10925   001D70  EFBC  F00E         	goto	u7401
 10926   001D74  EFBE  F00E         	goto	u7400
 10927   001D78                     u7401:
 10928   001D78  EFDC  F00E         	goto	l7317
 10929   001D7C                     u7400:
 10930   001D7C                     
 10931                           ; BSR set to: 0
 10932   001D7C  C0C9  F085         	movff	logf@ix,??_logf
 10933   001D80  C0CA  F086         	movff	logf@ix+1,??_logf+1
 10934   001D84  C0CB  F087         	movff	logf@ix+2,??_logf+2
 10935   001D88  C0CC  F088         	movff	logf@ix+3,??_logf+3
 10936   001D8C  0E20               	movlw	32
 10937   001D8E  EFCE  F00E         	goto	u7410
 10938   001D92                     u7415:
 10939   001D92  90D8               	bcf	status,0,c
 10940   001D94  3388               	rrcf	(??_logf+3)& (0+255),f,b
 10941   001D96  3387               	rrcf	(??_logf+2)& (0+255),f,b
 10942   001D98  3386               	rrcf	(??_logf+1)& (0+255),f,b
 10943   001D9A  3385               	rrcf	??_logf& (0+255),f,b
 10944   001D9C                     u7410:
 10945   001D9C  2EE8               	decfsz	wreg,f,c
 10946   001D9E  EFC9  F00E         	goto	u7415
 10947   001DA2  5185               	movf	??_logf& (0+255),w,b
 10948   001DA4  1186               	iorwf	(??_logf+1)& (0+255),w,b
 10949   001DA6  1187               	iorwf	(??_logf+2)& (0+255),w,b
 10950   001DA8  1188               	iorwf	(??_logf+3)& (0+255),w,b
 10951   001DAA  B4D8               	btfsc	status,2,c
 10952   001DAC  EFDA  F00E         	goto	u7421
 10953   001DB0  EFDC  F00E         	goto	u7420
 10954   001DB4                     u7421:
 10955   001DB4  EF9F  F00F         	goto	l7339
 10956   001DB8                     u7420:
 10957   001DB8                     l7317:
 10958                           
 10959                           ; BSR set to: 0
 10960   001DB8  90D8               	bcf	status,0,c
 10961   001DBA  35C9               	rlcf	logf@ix& (0+255),w,b
 10962   001DBC  6F85               	movwf	??_logf& (0+255),b
 10963   001DBE  35CA               	rlcf	(logf@ix+1)& (0+255),w,b
 10964   001DC0  6F86               	movwf	(??_logf+1)& (0+255),b
 10965   001DC2  35CB               	rlcf	(logf@ix+2)& (0+255),w,b
 10966   001DC4  6F87               	movwf	(??_logf+2)& (0+255),b
 10967   001DC6  35CC               	rlcf	(logf@ix+3)& (0+255),w,b
 10968   001DC8  6F88               	movwf	(??_logf+3)& (0+255),b
 10969   001DCA  5185               	movf	??_logf& (0+255),w,b
 10970   001DCC  1186               	iorwf	(??_logf+1)& (0+255),w,b
 10971   001DCE  1187               	iorwf	(??_logf+2)& (0+255),w,b
 10972   001DD0  1188               	iorwf	(??_logf+3)& (0+255),w,b
 10973   001DD2  A4D8               	btfss	status,2,c
 10974   001DD4  EFEE  F00E         	goto	u7431
 10975   001DD8  EFF0  F00E         	goto	u7430
 10976   001DDC                     u7431:
 10977   001DDC  EF1E  F00F         	goto	l7323
 10978   001DE0                     u7430:
 10979   001DE0                     
 10980                           ; BSR set to: 0
 10981   001DE0  0E00               	movlw	0
 10982   001DE2  6F68               	movwf	___fldiv@b& (0+255),b
 10983   001DE4  0E00               	movlw	0
 10984   001DE6  6F69               	movwf	(___fldiv@b+1)& (0+255),b
 10985   001DE8  0E80               	movlw	128
 10986   001DEA  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
 10987   001DEC  0EBF               	movlw	191
 10988   001DEE  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 10989   001DF0  C081  F01F         	movff	logf@x,___flmul@a
 10990   001DF4  C082  F020         	movff	logf@x+1,___flmul@a+1
 10991   001DF8  C083  F021         	movff	logf@x+2,___flmul@a+2
 10992   001DFC  C084  F022         	movff	logf@x+3,___flmul@a+3
 10993   001E00  C081  F01B         	movff	logf@x,___flmul@b
 10994   001E04  C082  F01C         	movff	logf@x+1,___flmul@b+1
 10995   001E08  C083  F01D         	movff	logf@x+2,___flmul@b+2
 10996   001E0C  C084  F01E         	movff	logf@x+3,___flmul@b+3
 10997   001E10  EC80  F022         	call	___flmul	;wreg free
 10998   001E14  C01B  F06C         	movff	?___flmul,___fldiv@a
 10999   001E18  C01C  F06D         	movff	?___flmul+1,___fldiv@a+1
 11000   001E1C  C01D  F06E         	movff	?___flmul+2,___fldiv@a+2
 11001   001E20  C01E  F06F         	movff	?___flmul+3,___fldiv@a+3
 11002   001E24  EC95  F024         	call	___fldiv	;wreg free
 11003   001E28  C068  F081         	movff	?___fldiv,?_logf
 11004   001E2C  C069  F082         	movff	?___fldiv+1,?_logf+1
 11005   001E30  C06A  F083         	movff	?___fldiv+2,?_logf+2
 11006   001E34  C06B  F084         	movff	?___fldiv+3,?_logf+3
 11007   001E38  EF3A  F012         	goto	l1077
 11008   001E3C                     l7323:
 11009                           
 11010                           ; BSR set to: 0
 11011   001E3C  C0C9  F085         	movff	logf@ix,??_logf
 11012   001E40  C0CA  F086         	movff	logf@ix+1,??_logf+1
 11013   001E44  C0CB  F087         	movff	logf@ix+2,??_logf+2
 11014   001E48  C0CC  F088         	movff	logf@ix+3,??_logf+3
 11015   001E4C  0E20               	movlw	32
 11016   001E4E  EF2E  F00F         	goto	u7440
 11017   001E52                     u7445:
 11018   001E52  90D8               	bcf	status,0,c
 11019   001E54  3388               	rrcf	(??_logf+3)& (0+255),f,b
 11020   001E56  3387               	rrcf	(??_logf+2)& (0+255),f,b
 11021   001E58  3386               	rrcf	(??_logf+1)& (0+255),f,b
 11022   001E5A  3385               	rrcf	??_logf& (0+255),f,b
 11023   001E5C                     u7440:
 11024   001E5C  2EE8               	decfsz	wreg,f,c
 11025   001E5E  EF29  F00F         	goto	u7445
 11026   001E62  5185               	movf	??_logf& (0+255),w,b
 11027   001E64  1186               	iorwf	(??_logf+1)& (0+255),w,b
 11028   001E66  1187               	iorwf	(??_logf+2)& (0+255),w,b
 11029   001E68  1188               	iorwf	(??_logf+3)& (0+255),w,b
 11030   001E6A  B4D8               	btfsc	status,2,c
 11031   001E6C  EF3A  F00F         	goto	u7451
 11032   001E70  EF3C  F00F         	goto	u7450
 11033   001E74                     u7451:
 11034   001E74  EF6F  F00F         	goto	l7331
 11035   001E78                     u7450:
 11036   001E78                     
 11037                           ; BSR set to: 0
 11038   001E78  0E00               	movlw	0
 11039   001E7A  6E4F               	movwf	(_errno+1)^0,c
 11040   001E7C  0E21               	movlw	33
 11041   001E7E  6E4E               	movwf	_errno^0,c
 11042   001E80                     
 11043                           ; BSR set to: 0
 11044   001E80  C081  F064         	movff	logf@x,___flsub@a
 11045   001E84  C082  F065         	movff	logf@x+1,___flsub@a+1
 11046   001E88  C083  F066         	movff	logf@x+2,___flsub@a+2
 11047   001E8C  C084  F067         	movff	logf@x+3,___flsub@a+3
 11048   001E90  C081  F060         	movff	logf@x,___flsub@b
 11049   001E94  C082  F061         	movff	logf@x+1,___flsub@b+1
 11050   001E98  C083  F062         	movff	logf@x+2,___flsub@b+2
 11051   001E9C  C084  F063         	movff	logf@x+3,___flsub@b+3
 11052   001EA0  ECBB  F035         	call	___flsub	;wreg free
 11053   001EA4  C060  F068         	movff	?___flsub,___fldiv@b
 11054   001EA8  C061  F069         	movff	?___flsub+1,___fldiv@b+1
 11055   001EAC  C062  F06A         	movff	?___flsub+2,___fldiv@b+2
 11056   001EB0  C063  F06B         	movff	?___flsub+3,___fldiv@b+3
 11057   001EB4  0E00               	movlw	0
 11058   001EB6  0100               	movlb	0	; () banked
 11059   001EB8  6F6C               	movwf	___fldiv@a& (0+255),b
 11060   001EBA  0E00               	movlw	0
 11061   001EBC  6F6D               	movwf	(___fldiv@a+1)& (0+255),b
 11062   001EBE  0E00               	movlw	0
 11063   001EC0  6F6E               	movwf	(___fldiv@a+2)& (0+255),b
 11064   001EC2  0E00               	movlw	0
 11065   001EC4  6F6F               	movwf	(___fldiv@a+3)& (0+255),b
 11066   001EC6  EC95  F024         	call	___fldiv	;wreg free
 11067   001ECA  C068  F081         	movff	?___fldiv,?_logf
 11068   001ECE  C069  F082         	movff	?___fldiv+1,?_logf+1
 11069   001ED2  C06A  F083         	movff	?___fldiv+2,?_logf+2
 11070   001ED6  C06B  F084         	movff	?___fldiv+3,?_logf+3
 11071   001EDA  EF3A  F012         	goto	l1077
 11072   001EDE                     l7331:
 11073                           
 11074                           ; BSR set to: 0
 11075   001EDE  0EE7               	movlw	231
 11076   001EE0  27A7               	addwf	logf@k& (0+255),f,b
 11077   001EE2  0EFF               	movlw	255
 11078   001EE4  23A8               	addwfc	(logf@k+1)& (0+255),f,b
 11079   001EE6                     
 11080                           ; BSR set to: 0
 11081   001EE6  C081  F01B         	movff	logf@x,___flmul@b
 11082   001EEA  C082  F01C         	movff	logf@x+1,___flmul@b+1
 11083   001EEE  C083  F01D         	movff	logf@x+2,___flmul@b+2
 11084   001EF2  C084  F01E         	movff	logf@x+3,___flmul@b+3
 11085   001EF6  0E00               	movlw	0
 11086   001EF8  6E1F               	movwf	___flmul@a^0,c
 11087   001EFA  0E00               	movlw	0
 11088   001EFC  6E20               	movwf	(___flmul@a+1)^0,c
 11089   001EFE  0E00               	movlw	0
 11090   001F00  6E21               	movwf	(___flmul@a+2)^0,c
 11091   001F02  0E4C               	movlw	76
 11092   001F04  6E22               	movwf	(___flmul@a+3)^0,c
 11093   001F06  EC80  F022         	call	___flmul	;wreg free
 11094   001F0A  C01B  F081         	movff	?___flmul,logf@x
 11095   001F0E  C01C  F082         	movff	?___flmul+1,logf@x+1
 11096   001F12  C01D  F083         	movff	?___flmul+2,logf@x+2
 11097   001F16  C01E  F084         	movff	?___flmul+3,logf@x+3
 11098   001F1A  C081  F0C1         	movff	logf@x,logf@u
 11099   001F1E  C082  F0C2         	movff	logf@x+1,logf@u+1
 11100   001F22  C083  F0C3         	movff	logf@x+2,logf@u+2
 11101   001F26  C084  F0C4         	movff	logf@x+3,logf@u+3
 11102   001F2A  C0C1  F0C9         	movff	logf@u,logf@ix
 11103   001F2E  C0C2  F0CA         	movff	logf@u+1,logf@ix+1
 11104   001F32  C0C3  F0CB         	movff	logf@u+2,logf@ix+2
 11105   001F36  C0C4  F0CC         	movff	logf@u+3,logf@ix+3
 11106   001F3A  EFCC  F00F         	goto	l7351
 11107   001F3E                     l7339:
 11108                           
 11109                           ; BSR set to: 0
 11110   001F3E  0E80               	movlw	128
 11111   001F40  5DCB               	subwf	(logf@ix+2)& (0+255),w,b
 11112   001F42  0E7F               	movlw	127
 11113   001F44  59CC               	subwfb	(logf@ix+3)& (0+255),w,b
 11114   001F46  A0D8               	btfss	status,0,c
 11115   001F48  EFA8  F00F         	goto	u7461
 11116   001F4C  EFAA  F00F         	goto	u7460
 11117   001F50                     u7461:
 11118   001F50  EFB4  F00F         	goto	l7345
 11119   001F54                     u7460:
 11120   001F54                     
 11121                           ; BSR set to: 0
 11122   001F54  C081  F081         	movff	logf@x,?_logf
 11123   001F58  C082  F082         	movff	logf@x+1,?_logf+1
 11124   001F5C  C083  F083         	movff	logf@x+2,?_logf+2
 11125   001F60  C084  F084         	movff	logf@x+3,?_logf+3
 11126   001F64  EF3A  F012         	goto	l1077
 11127   001F68                     l7345:
 11128                           
 11129                           ; BSR set to: 0
 11130   001F68  0E80               	movlw	128
 11131   001F6A  19CB               	xorwf	(logf@ix+2)& (0+255),w,b
 11132   001F6C  E109               	bnz	u7471
 11133   001F6E  0E3F               	movlw	63
 11134   001F70  19CC               	xorwf	(logf@ix+3)& (0+255),w,b
 11135   001F72  11C9               	iorwf	logf@ix& (0+255),w,b
 11136   001F74  11CA               	iorwf	(logf@ix+1)& (0+255),w,b
 11137   001F76  A4D8               	btfss	status,2,c
 11138   001F78  EFC0  F00F         	goto	u7471
 11139   001F7C  EFC2  F00F         	goto	u7470
 11140   001F80                     u7471:
 11141   001F80  EFCC  F00F         	goto	l7351
 11142   001F84                     u7470:
 11143   001F84                     
 11144                           ; BSR set to: 0
 11145   001F84  0E00               	movlw	0
 11146   001F86  6F81               	movwf	?_logf& (0+255),b
 11147   001F88  0E00               	movlw	0
 11148   001F8A  6F82               	movwf	(?_logf+1)& (0+255),b
 11149   001F8C  0E00               	movlw	0
 11150   001F8E  6F83               	movwf	(?_logf+2)& (0+255),b
 11151   001F90  0E00               	movlw	0
 11152   001F92  6F84               	movwf	(?_logf+3)& (0+255),b
 11153   001F94  EF3A  F012         	goto	l1077
 11154   001F98                     l7351:
 11155   001F98  0E0D               	movlw	13
 11156   001F9A  0100               	movlb	0	; () banked
 11157   001F9C  27C9               	addwf	logf@ix& (0+255),f,b
 11158   001F9E  0EFB               	movlw	251
 11159   001FA0  23CA               	addwfc	(logf@ix+1)& (0+255),f,b
 11160   001FA2  0E4A               	movlw	74
 11161   001FA4  23CB               	addwfc	(logf@ix+2)& (0+255),f,b
 11162   001FA6  0E00               	movlw	0
 11163   001FA8  23CC               	addwfc	(logf@ix+3)& (0+255),f,b
 11164   001FAA  C0C9  F085         	movff	logf@ix,??_logf
 11165   001FAE  C0CA  F086         	movff	logf@ix+1,??_logf+1
 11166   001FB2  C0CB  F087         	movff	logf@ix+2,??_logf+2
 11167   001FB6  C0CC  F088         	movff	logf@ix+3,??_logf+3
 11168   001FBA  0E18               	movlw	24
 11169   001FBC  EFE5  F00F         	goto	u7480
 11170   001FC0                     u7485:
 11171   001FC0  90D8               	bcf	status,0,c
 11172   001FC2  3388               	rrcf	(??_logf+3)& (0+255),f,b
 11173   001FC4  3387               	rrcf	(??_logf+2)& (0+255),f,b
 11174   001FC6  3386               	rrcf	(??_logf+1)& (0+255),f,b
 11175   001FC8  3385               	rrcf	??_logf& (0+255),f,b
 11176   001FCA                     u7480:
 11177   001FCA  2EE8               	decfsz	wreg,f,c
 11178   001FCC  EFE0  F00F         	goto	u7485
 11179   001FD0  0E81               	movlw	129
 11180   001FD2  2585               	addwf	??_logf& (0+255),w,b
 11181   001FD4  6F89               	movwf	(??_logf+4)& (0+255),b
 11182   001FD6  0EFF               	movlw	255
 11183   001FD8  2186               	addwfc	(??_logf+1)& (0+255),w,b
 11184   001FDA  6F8A               	movwf	(??_logf+5)& (0+255),b
 11185   001FDC  5189               	movf	(??_logf+4)& (0+255),w,b
 11186   001FDE  27A7               	addwf	logf@k& (0+255),f,b
 11187   001FE0  518A               	movf	(??_logf+5)& (0+255),w,b
 11188   001FE2  23A8               	addwfc	(logf@k+1)& (0+255),f,b
 11189   001FE4  0EFF               	movlw	255
 11190   001FE6  15C9               	andwf	logf@ix& (0+255),w,b
 11191   001FE8  6F85               	movwf	??_logf& (0+255),b
 11192   001FEA  0EFF               	movlw	255
 11193   001FEC  15CA               	andwf	(logf@ix+1)& (0+255),w,b
 11194   001FEE  6F86               	movwf	(??_logf+1)& (0+255),b
 11195   001FF0  0E7F               	movlw	127
 11196   001FF2  15CB               	andwf	(logf@ix+2)& (0+255),w,b
 11197   001FF4  6F87               	movwf	(??_logf+2)& (0+255),b
 11198   001FF6  0E00               	movlw	0
 11199   001FF8  15CC               	andwf	(logf@ix+3)& (0+255),w,b
 11200   001FFA  6F88               	movwf	(??_logf+3)& (0+255),b
 11201   001FFC  0EF3               	movlw	243
 11202   001FFE  2585               	addwf	??_logf& (0+255),w,b
 11203   002000  6FC9               	movwf	logf@ix& (0+255),b
 11204   002002  0E04               	movlw	4
 11205   002004  2186               	addwfc	(??_logf+1)& (0+255),w,b
 11206   002006  6FCA               	movwf	(logf@ix+1)& (0+255),b
 11207   002008  0E35               	movlw	53
 11208   00200A  2187               	addwfc	(??_logf+2)& (0+255),w,b
 11209   00200C  6FCB               	movwf	(logf@ix+2)& (0+255),b
 11210   00200E  0E3F               	movlw	63
 11211   002010  2188               	addwfc	(??_logf+3)& (0+255),w,b
 11212   002012  6FCC               	movwf	(logf@ix+3)& (0+255),b
 11213   002014                     
 11214                           ; BSR set to: 0
 11215   002014  C0C9  F0C1         	movff	logf@ix,logf@u
 11216   002018  C0CA  F0C2         	movff	logf@ix+1,logf@u+1
 11217   00201C  C0CB  F0C3         	movff	logf@ix+2,logf@u+2
 11218   002020  C0CC  F0C4         	movff	logf@ix+3,logf@u+3
 11219   002024                     
 11220                           ; BSR set to: 0
 11221   002024  C0C1  F081         	movff	logf@u,logf@x
 11222   002028  C0C2  F082         	movff	logf@u+1,logf@x+1
 11223   00202C  C0C3  F083         	movff	logf@u+2,logf@x+2
 11224   002030  C0C4  F084         	movff	logf@u+3,logf@x+3
 11225   002034                     
 11226                           ; BSR set to: 0
 11227   002034  C081  F034         	movff	logf@x,___fladd@b
 11228   002038  C082  F035         	movff	logf@x+1,___fladd@b+1
 11229   00203C  C083  F036         	movff	logf@x+2,___fladd@b+2
 11230   002040  C084  F037         	movff	logf@x+3,___fladd@b+3
 11231   002044  0E00               	movlw	0
 11232   002046  6E38               	movwf	___fladd@a^0,c
 11233   002048  0E00               	movlw	0
 11234   00204A  6E39               	movwf	(___fladd@a+1)^0,c
 11235   00204C  0E80               	movlw	128
 11236   00204E  6E3A               	movwf	(___fladd@a+2)^0,c
 11237   002050  0EBF               	movlw	191
 11238   002052  6E3B               	movwf	(___fladd@a+3)^0,c
 11239   002054  ECD8  F01D         	call	___fladd	;wreg free
 11240   002058  C034  F0C5         	movff	?___fladd,logf@f
 11241   00205C  C035  F0C6         	movff	?___fladd+1,logf@f+1
 11242   002060  C036  F0C7         	movff	?___fladd+2,logf@f+2
 11243   002064  C037  F0C8         	movff	?___fladd+3,logf@f+3
 11244   002068  C0C5  F068         	movff	logf@f,___fldiv@b
 11245   00206C  C0C6  F069         	movff	logf@f+1,___fldiv@b+1
 11246   002070  C0C7  F06A         	movff	logf@f+2,___fldiv@b+2
 11247   002074  C0C8  F06B         	movff	logf@f+3,___fldiv@b+3
 11248   002078  0E00               	movlw	0
 11249   00207A  6E38               	movwf	___fladd@a^0,c
 11250   00207C  0E00               	movlw	0
 11251   00207E  6E39               	movwf	(___fladd@a+1)^0,c
 11252   002080  0E00               	movlw	0
 11253   002082  6E3A               	movwf	(___fladd@a+2)^0,c
 11254   002084  0E40               	movlw	64
 11255   002086  6E3B               	movwf	(___fladd@a+3)^0,c
 11256   002088  C0C5  F034         	movff	logf@f,___fladd@b
 11257   00208C  C0C6  F035         	movff	logf@f+1,___fladd@b+1
 11258   002090  C0C7  F036         	movff	logf@f+2,___fladd@b+2
 11259   002094  C0C8  F037         	movff	logf@f+3,___fladd@b+3
 11260   002098  ECD8  F01D         	call	___fladd	;wreg free
 11261   00209C  C034  F06C         	movff	?___fladd,___fldiv@a
 11262   0020A0  C035  F06D         	movff	?___fladd+1,___fldiv@a+1
 11263   0020A4  C036  F06E         	movff	?___fladd+2,___fldiv@a+2
 11264   0020A8  C037  F06F         	movff	?___fladd+3,___fldiv@a+3
 11265   0020AC  EC95  F024         	call	___fldiv	;wreg free
 11266   0020B0  C068  F0B1         	movff	?___fldiv,logf@s
 11267   0020B4  C069  F0B2         	movff	?___fldiv+1,logf@s+1
 11268   0020B8  C06A  F0B3         	movff	?___fldiv+2,logf@s+2
 11269   0020BC  C06B  F0B4         	movff	?___fldiv+3,logf@s+3
 11270   0020C0  C0B1  F01B         	movff	logf@s,___flmul@b
 11271   0020C4  C0B2  F01C         	movff	logf@s+1,___flmul@b+1
 11272   0020C8  C0B3  F01D         	movff	logf@s+2,___flmul@b+2
 11273   0020CC  C0B4  F01E         	movff	logf@s+3,___flmul@b+3
 11274   0020D0  C0B1  F01F         	movff	logf@s,___flmul@a
 11275   0020D4  C0B2  F020         	movff	logf@s+1,___flmul@a+1
 11276   0020D8  C0B3  F021         	movff	logf@s+2,___flmul@a+2
 11277   0020DC  C0B4  F022         	movff	logf@s+3,___flmul@a+3
 11278   0020E0  EC80  F022         	call	___flmul	;wreg free
 11279   0020E4  C01B  F0B5         	movff	?___flmul,logf@z
 11280   0020E8  C01C  F0B6         	movff	?___flmul+1,logf@z+1
 11281   0020EC  C01D  F0B7         	movff	?___flmul+2,logf@z+2
 11282   0020F0  C01E  F0B8         	movff	?___flmul+3,logf@z+3
 11283   0020F4  C0B5  F01B         	movff	logf@z,___flmul@b
 11284   0020F8  C0B6  F01C         	movff	logf@z+1,___flmul@b+1
 11285   0020FC  C0B7  F01D         	movff	logf@z+2,___flmul@b+2
 11286   002100  C0B8  F01E         	movff	logf@z+3,___flmul@b+3
 11287   002104  C0B5  F01F         	movff	logf@z,___flmul@a
 11288   002108  C0B6  F020         	movff	logf@z+1,___flmul@a+1
 11289   00210C  C0B7  F021         	movff	logf@z+2,___flmul@a+2
 11290   002110  C0B8  F022         	movff	logf@z+3,___flmul@a+3
 11291   002114  EC80  F022         	call	___flmul	;wreg free
 11292   002118  C01B  F0B9         	movff	?___flmul,logf@w
 11293   00211C  C01C  F0BA         	movff	?___flmul+1,logf@w+1
 11294   002120  C01D  F0BB         	movff	?___flmul+2,logf@w+2
 11295   002124  C01E  F0BC         	movff	?___flmul+3,logf@w+3
 11296   002128  0E13               	movlw	19
 11297   00212A  6E38               	movwf	___fladd@a^0,c
 11298   00212C  0ECE               	movlw	206
 11299   00212E  6E39               	movwf	(___fladd@a+1)^0,c
 11300   002130  0ECC               	movlw	204
 11301   002132  6E3A               	movwf	(___fladd@a+2)^0,c
 11302   002134  0E3E               	movlw	62
 11303   002136  6E3B               	movwf	(___fladd@a+3)^0,c
 11304   002138  0E26               	movlw	38
 11305   00213A  6E1F               	movwf	___flmul@a^0,c
 11306   00213C  0E9E               	movlw	158
 11307   00213E  6E20               	movwf	(___flmul@a+1)^0,c
 11308   002140  0E78               	movlw	120
 11309   002142  6E21               	movwf	(___flmul@a+2)^0,c
 11310   002144  0E3E               	movlw	62
 11311   002146  6E22               	movwf	(___flmul@a+3)^0,c
 11312   002148  C0B9  F01B         	movff	logf@w,___flmul@b
 11313   00214C  C0BA  F01C         	movff	logf@w+1,___flmul@b+1
 11314   002150  C0BB  F01D         	movff	logf@w+2,___flmul@b+2
 11315   002154  C0BC  F01E         	movff	logf@w+3,___flmul@b+3
 11316   002158  EC80  F022         	call	___flmul	;wreg free
 11317   00215C  C01B  F034         	movff	?___flmul,___fladd@b
 11318   002160  C01C  F035         	movff	?___flmul+1,___fladd@b+1
 11319   002164  C01D  F036         	movff	?___flmul+2,___fladd@b+2
 11320   002168  C01E  F037         	movff	?___flmul+3,___fladd@b+3
 11321   00216C  ECD8  F01D         	call	___fladd	;wreg free
 11322   002170  C034  F0BD         	movff	?___fladd,_logf$1805
 11323   002174  C035  F0BE         	movff	?___fladd+1,_logf$1805+1
 11324   002178  C036  F0BF         	movff	?___fladd+2,_logf$1805+2
 11325   00217C  C037  F0C0         	movff	?___fladd+3,_logf$1805+3
 11326   002180  C0BD  F01B         	movff	_logf$1805,___flmul@b
 11327   002184  C0BE  F01C         	movff	_logf$1805+1,___flmul@b+1
 11328   002188  C0BF  F01D         	movff	_logf$1805+2,___flmul@b+2
 11329   00218C  C0C0  F01E         	movff	_logf$1805+3,___flmul@b+3
 11330   002190  C0B9  F01F         	movff	logf@w,___flmul@a
 11331   002194  C0BA  F020         	movff	logf@w+1,___flmul@a+1
 11332   002198  C0BB  F021         	movff	logf@w+2,___flmul@a+2
 11333   00219C  C0BC  F022         	movff	logf@w+3,___flmul@a+3
 11334   0021A0  EC80  F022         	call	___flmul	;wreg free
 11335   0021A4  C01B  F08F         	movff	?___flmul,logf@t1
 11336   0021A8  C01C  F090         	movff	?___flmul+1,logf@t1+1
 11337   0021AC  C01D  F091         	movff	?___flmul+2,logf@t1+2
 11338   0021B0  C01E  F092         	movff	?___flmul+3,logf@t1+3
 11339   0021B4  0EAA               	movlw	170
 11340   0021B6  6E38               	movwf	___fladd@a^0,c
 11341   0021B8  0EAA               	movlw	170
 11342   0021BA  6E39               	movwf	(___fladd@a+1)^0,c
 11343   0021BC  0E2A               	movlw	42
 11344   0021BE  6E3A               	movwf	(___fladd@a+2)^0,c
 11345   0021C0  0E3F               	movlw	63
 11346   0021C2  6E3B               	movwf	(___fladd@a+3)^0,c
 11347   0021C4  0EEE               	movlw	238
 11348   0021C6  6E1F               	movwf	___flmul@a^0,c
 11349   0021C8  0EE9               	movlw	233
 11350   0021CA  6E20               	movwf	(___flmul@a+1)^0,c
 11351   0021CC  0E91               	movlw	145
 11352   0021CE  6E21               	movwf	(___flmul@a+2)^0,c
 11353   0021D0  0E3E               	movlw	62
 11354   0021D2  6E22               	movwf	(___flmul@a+3)^0,c
 11355   0021D4  C0B9  F01B         	movff	logf@w,___flmul@b
 11356   0021D8  C0BA  F01C         	movff	logf@w+1,___flmul@b+1
 11357   0021DC  C0BB  F01D         	movff	logf@w+2,___flmul@b+2
 11358   0021E0  C0BC  F01E         	movff	logf@w+3,___flmul@b+3
 11359   0021E4  EC80  F022         	call	___flmul	;wreg free
 11360   0021E8  C01B  F034         	movff	?___flmul,___fladd@b
 11361   0021EC  C01C  F035         	movff	?___flmul+1,___fladd@b+1
 11362   0021F0  C01D  F036         	movff	?___flmul+2,___fladd@b+2
 11363   0021F4  C01E  F037         	movff	?___flmul+3,___fladd@b+3
 11364   0021F8  ECD8  F01D         	call	___fladd	;wreg free
 11365   0021FC  C034  F0BD         	movff	?___fladd,_logf$1805
 11366   002200  C035  F0BE         	movff	?___fladd+1,_logf$1805+1
 11367   002204  C036  F0BF         	movff	?___fladd+2,_logf$1805+2
 11368   002208  C037  F0C0         	movff	?___fladd+3,_logf$1805+3
 11369   00220C  C0BD  F01B         	movff	_logf$1805,___flmul@b
 11370   002210  C0BE  F01C         	movff	_logf$1805+1,___flmul@b+1
 11371   002214  C0BF  F01D         	movff	_logf$1805+2,___flmul@b+2
 11372   002218  C0C0  F01E         	movff	_logf$1805+3,___flmul@b+3
 11373   00221C  C0B5  F01F         	movff	logf@z,___flmul@a
 11374   002220  C0B6  F020         	movff	logf@z+1,___flmul@a+1
 11375   002224  C0B7  F021         	movff	logf@z+2,___flmul@a+2
 11376   002228  C0B8  F022         	movff	logf@z+3,___flmul@a+3
 11377   00222C  EC80  F022         	call	___flmul	;wreg free
 11378   002230  C01B  F093         	movff	?___flmul,logf@t2
 11379   002234  C01C  F094         	movff	?___flmul+1,logf@t2+1
 11380   002238  C01D  F095         	movff	?___flmul+2,logf@t2+2
 11381   00223C  C01E  F096         	movff	?___flmul+3,logf@t2+3
 11382   002240  C093  F034         	movff	logf@t2,___fladd@b
 11383   002244  C094  F035         	movff	logf@t2+1,___fladd@b+1
 11384   002248  C095  F036         	movff	logf@t2+2,___fladd@b+2
 11385   00224C  C096  F037         	movff	logf@t2+3,___fladd@b+3
 11386   002250  C08F  F038         	movff	logf@t1,___fladd@a
 11387   002254  C090  F039         	movff	logf@t1+1,___fladd@a+1
 11388   002258  C091  F03A         	movff	logf@t1+2,___fladd@a+2
 11389   00225C  C092  F03B         	movff	logf@t1+3,___fladd@a+3
 11390   002260  ECD8  F01D         	call	___fladd	;wreg free
 11391   002264  C034  F08B         	movff	?___fladd,logf@R
 11392   002268  C035  F08C         	movff	?___fladd+1,logf@R+1
 11393   00226C  C036  F08D         	movff	?___fladd+2,logf@R+2
 11394   002270  C037  F08E         	movff	?___fladd+3,logf@R+3
 11395   002274  0E00               	movlw	0
 11396   002276  6E1F               	movwf	___flmul@a^0,c
 11397   002278  0E00               	movlw	0
 11398   00227A  6E20               	movwf	(___flmul@a+1)^0,c
 11399   00227C  0E00               	movlw	0
 11400   00227E  6E21               	movwf	(___flmul@a+2)^0,c
 11401   002280  0E3F               	movlw	63
 11402   002282  6E22               	movwf	(___flmul@a+3)^0,c
 11403   002284  C0C5  F01B         	movff	logf@f,___flmul@b
 11404   002288  C0C6  F01C         	movff	logf@f+1,___flmul@b+1
 11405   00228C  C0C7  F01D         	movff	logf@f+2,___flmul@b+2
 11406   002290  C0C8  F01E         	movff	logf@f+3,___flmul@b+3
 11407   002294  EC80  F022         	call	___flmul	;wreg free
 11408   002298  C01B  F0BD         	movff	?___flmul,_logf$1805
 11409   00229C  C01C  F0BE         	movff	?___flmul+1,_logf$1805+1
 11410   0022A0  C01D  F0BF         	movff	?___flmul+2,_logf$1805+2
 11411   0022A4  C01E  F0C0         	movff	?___flmul+3,_logf$1805+3
 11412   0022A8  C0BD  F01B         	movff	_logf$1805,___flmul@b
 11413   0022AC  C0BE  F01C         	movff	_logf$1805+1,___flmul@b+1
 11414   0022B0  C0BF  F01D         	movff	_logf$1805+2,___flmul@b+2
 11415   0022B4  C0C0  F01E         	movff	_logf$1805+3,___flmul@b+3
 11416   0022B8  C0C5  F01F         	movff	logf@f,___flmul@a
 11417   0022BC  C0C6  F020         	movff	logf@f+1,___flmul@a+1
 11418   0022C0  C0C7  F021         	movff	logf@f+2,___flmul@a+2
 11419   0022C4  C0C8  F022         	movff	logf@f+3,___flmul@a+3
 11420   0022C8  EC80  F022         	call	___flmul	;wreg free
 11421   0022CC  C01B  F0A9         	movff	?___flmul,logf@hfsq
 11422   0022D0  C01C  F0AA         	movff	?___flmul+1,logf@hfsq+1
 11423   0022D4  C01D  F0AB         	movff	?___flmul+2,logf@hfsq+2
 11424   0022D8  C01E  F0AC         	movff	?___flmul+3,logf@hfsq+3
 11425   0022DC  C0A7  F00D         	movff	logf@k,___xxtofl@val
 11426   0022E0  C0A8  F00E         	movff	logf@k+1,___xxtofl@val+1
 11427   0022E4  0E00               	movlw	0
 11428   0022E6  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
 11429   0022E8  0EFF               	movlw	-1
 11430   0022EA  6E0F               	movwf	(___xxtofl@val+2)^0,c
 11431   0022EC  6E10               	movwf	(___xxtofl@val+3)^0,c
 11432   0022EE  0E01               	movlw	1
 11433   0022F0  ECC6  F02E         	call	___xxtofl
 11434   0022F4  C00D  F0AD         	movff	?___xxtofl,logf@dk
 11435   0022F8  C00E  F0AE         	movff	?___xxtofl+1,logf@dk+1
 11436   0022FC  C00F  F0AF         	movff	?___xxtofl+2,logf@dk+2
 11437   002300  C010  F0B0         	movff	?___xxtofl+3,logf@dk+3
 11438   002304  C0B1  F01F         	movff	logf@s,___flmul@a
 11439   002308  C0B2  F020         	movff	logf@s+1,___flmul@a+1
 11440   00230C  C0B3  F021         	movff	logf@s+2,___flmul@a+2
 11441   002310  C0B4  F022         	movff	logf@s+3,___flmul@a+3
 11442   002314  C08B  F038         	movff	logf@R,___fladd@a
 11443   002318  C08C  F039         	movff	logf@R+1,___fladd@a+1
 11444   00231C  C08D  F03A         	movff	logf@R+2,___fladd@a+2
 11445   002320  C08E  F03B         	movff	logf@R+3,___fladd@a+3
 11446   002324  C0A9  F034         	movff	logf@hfsq,___fladd@b
 11447   002328  C0AA  F035         	movff	logf@hfsq+1,___fladd@b+1
 11448   00232C  C0AB  F036         	movff	logf@hfsq+2,___fladd@b+2
 11449   002330  C0AC  F037         	movff	logf@hfsq+3,___fladd@b+3
 11450   002334  ECD8  F01D         	call	___fladd	;wreg free
 11451   002338  C034  F01B         	movff	?___fladd,___flmul@b
 11452   00233C  C035  F01C         	movff	?___fladd+1,___flmul@b+1
 11453   002340  C036  F01D         	movff	?___fladd+2,___flmul@b+2
 11454   002344  C037  F01E         	movff	?___fladd+3,___flmul@b+3
 11455   002348  EC80  F022         	call	___flmul	;wreg free
 11456   00234C  C01B  F097         	movff	?___flmul,_logf$1806
 11457   002350  C01C  F098         	movff	?___flmul+1,_logf$1806+1
 11458   002354  C01D  F099         	movff	?___flmul+2,_logf$1806+2
 11459   002358  C01E  F09A         	movff	?___flmul+3,_logf$1806+3
 11460   00235C  0ED1               	movlw	209
 11461   00235E  6E1F               	movwf	___flmul@a^0,c
 11462   002360  0EF7               	movlw	247
 11463   002362  6E20               	movwf	(___flmul@a+1)^0,c
 11464   002364  0E17               	movlw	23
 11465   002366  6E21               	movwf	(___flmul@a+2)^0,c
 11466   002368  0E37               	movlw	55
 11467   00236A  6E22               	movwf	(___flmul@a+3)^0,c
 11468   00236C  C0AD  F01B         	movff	logf@dk,___flmul@b
 11469   002370  C0AE  F01C         	movff	logf@dk+1,___flmul@b+1
 11470   002374  C0AF  F01D         	movff	logf@dk+2,___flmul@b+2
 11471   002378  C0B0  F01E         	movff	logf@dk+3,___flmul@b+3
 11472   00237C  EC80  F022         	call	___flmul	;wreg free
 11473   002380  C01B  F038         	movff	?___flmul,___fladd@a
 11474   002384  C01C  F039         	movff	?___flmul+1,___fladd@a+1
 11475   002388  C01D  F03A         	movff	?___flmul+2,___fladd@a+2
 11476   00238C  C01E  F03B         	movff	?___flmul+3,___fladd@a+3
 11477   002390  C097  F034         	movff	_logf$1806,___fladd@b
 11478   002394  C098  F035         	movff	_logf$1806+1,___fladd@b+1
 11479   002398  C099  F036         	movff	_logf$1806+2,___fladd@b+2
 11480   00239C  C09A  F037         	movff	_logf$1806+3,___fladd@b+3
 11481   0023A0  ECD8  F01D         	call	___fladd	;wreg free
 11482   0023A4  C034  F09B         	movff	?___fladd,_logf$1807
 11483   0023A8  C035  F09C         	movff	?___fladd+1,_logf$1807+1
 11484   0023AC  C036  F09D         	movff	?___fladd+2,_logf$1807+2
 11485   0023B0  C037  F09E         	movff	?___fladd+3,_logf$1807+3
 11486   0023B4  C0A9  F064         	movff	logf@hfsq,___flsub@a
 11487   0023B8  C0AA  F065         	movff	logf@hfsq+1,___flsub@a+1
 11488   0023BC  C0AB  F066         	movff	logf@hfsq+2,___flsub@a+2
 11489   0023C0  C0AC  F067         	movff	logf@hfsq+3,___flsub@a+3
 11490   0023C4  C09B  F060         	movff	_logf$1807,___flsub@b
 11491   0023C8  C09C  F061         	movff	_logf$1807+1,___flsub@b+1
 11492   0023CC  C09D  F062         	movff	_logf$1807+2,___flsub@b+2
 11493   0023D0  C09E  F063         	movff	_logf$1807+3,___flsub@b+3
 11494   0023D4  ECBB  F035         	call	___flsub	;wreg free
 11495   0023D8  C060  F09F         	movff	?___flsub,_logf$1808
 11496   0023DC  C061  F0A0         	movff	?___flsub+1,_logf$1808+1
 11497   0023E0  C062  F0A1         	movff	?___flsub+2,_logf$1808+2
 11498   0023E4  C063  F0A2         	movff	?___flsub+3,_logf$1808+3
 11499   0023E8  C0C5  F038         	movff	logf@f,___fladd@a
 11500   0023EC  C0C6  F039         	movff	logf@f+1,___fladd@a+1
 11501   0023F0  C0C7  F03A         	movff	logf@f+2,___fladd@a+2
 11502   0023F4  C0C8  F03B         	movff	logf@f+3,___fladd@a+3
 11503   0023F8  C09F  F034         	movff	_logf$1808,___fladd@b
 11504   0023FC  C0A0  F035         	movff	_logf$1808+1,___fladd@b+1
 11505   002400  C0A1  F036         	movff	_logf$1808+2,___fladd@b+2
 11506   002404  C0A2  F037         	movff	_logf$1808+3,___fladd@b+3
 11507   002408  ECD8  F01D         	call	___fladd	;wreg free
 11508   00240C  C034  F0A3         	movff	?___fladd,_logf$1809
 11509   002410  C035  F0A4         	movff	?___fladd+1,_logf$1809+1
 11510   002414  C036  F0A5         	movff	?___fladd+2,_logf$1809+2
 11511   002418  C037  F0A6         	movff	?___fladd+3,_logf$1809+3
 11512   00241C  C0A3  F034         	movff	_logf$1809,___fladd@b
 11513   002420  C0A4  F035         	movff	_logf$1809+1,___fladd@b+1
 11514   002424  C0A5  F036         	movff	_logf$1809+2,___fladd@b+2
 11515   002428  C0A6  F037         	movff	_logf$1809+3,___fladd@b+3
 11516   00242C  0E80               	movlw	128
 11517   00242E  6E1F               	movwf	___flmul@a^0,c
 11518   002430  0E71               	movlw	113
 11519   002432  6E20               	movwf	(___flmul@a+1)^0,c
 11520   002434  0E31               	movlw	49
 11521   002436  6E21               	movwf	(___flmul@a+2)^0,c
 11522   002438  0E3F               	movlw	63
 11523   00243A  6E22               	movwf	(___flmul@a+3)^0,c
 11524   00243C  C0AD  F01B         	movff	logf@dk,___flmul@b
 11525   002440  C0AE  F01C         	movff	logf@dk+1,___flmul@b+1
 11526   002444  C0AF  F01D         	movff	logf@dk+2,___flmul@b+2
 11527   002448  C0B0  F01E         	movff	logf@dk+3,___flmul@b+3
 11528   00244C  EC80  F022         	call	___flmul	;wreg free
 11529   002450  C01B  F038         	movff	?___flmul,___fladd@a
 11530   002454  C01C  F039         	movff	?___flmul+1,___fladd@a+1
 11531   002458  C01D  F03A         	movff	?___flmul+2,___fladd@a+2
 11532   00245C  C01E  F03B         	movff	?___flmul+3,___fladd@a+3
 11533   002460  ECD8  F01D         	call	___fladd	;wreg free
 11534   002464  C034  F081         	movff	?___fladd,?_logf
 11535   002468  C035  F082         	movff	?___fladd+1,?_logf+1
 11536   00246C  C036  F083         	movff	?___fladd+2,?_logf+2
 11537   002470  C037  F084         	movff	?___fladd+3,?_logf+3
 11538   002474                     l1077:
 11539   002474  0012               	return		;funcret
 11540   002476                     __end_of_logf:
 11541                           	callstack 0
 11542                           
 11543 ;; *************** function ___fldiv *****************
 11544 ;; Defined at:
 11545 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 11546 ;; Parameters:    Size  Location     Type
 11547 ;;  b               4    8[BANK0 ] float 
 11548 ;;  a               4   12[BANK0 ] float 
 11549 ;; Auto vars:     Size  Location     Type
 11550 ;;  grs             4   27[BANK0 ] unsigned long 
 11551 ;;  rem             4   20[BANK0 ] unsigned long 
 11552 ;;  new_exp         2   25[BANK0 ] short 
 11553 ;;  aexp            1   32[BANK0 ] unsigned char 
 11554 ;;  bexp            1   31[BANK0 ] unsigned char 
 11555 ;;  sign            1   24[BANK0 ] unsigned char 
 11556 ;; Return value:  Size  Location     Type
 11557 ;;                  4    8[BANK0 ] unsigned char 
 11558 ;; Registers used:
 11559 ;;		wreg, status,2, status,0
 11560 ;; Tracked objects:
 11561 ;;		On entry : 0/0
 11562 ;;		On exit  : 0/0
 11563 ;;		Unchanged: 0/0
 11564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11565 ;;      Params:         0       8       0       0       0       0       0       0       0
 11566 ;;      Locals:         0      13       0       0       0       0       0       0       0
 11567 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11568 ;;      Totals:         0      25       0       0       0       0       0       0       0
 11569 ;;Total ram usage:       25 bytes
 11570 ;; Hardware stack levels used: 1
 11571 ;; Hardware stack levels required when called: 2
 11572 ;; This function calls:
 11573 ;;		Nothing
 11574 ;; This function is called by:
 11575 ;;		_main
 11576 ;;		_verifRes
 11577 ;;		_FFT
 11578 ;;		_normalize
 11579 ;;		_logf
 11580 ;;		_efgtoa
 11581 ;; This function uses a non-reentrant model
 11582 ;;
 11583                           
 11584                           	psect	text40
 11585   00492A                     __ptext40:
 11586                           	callstack 0
 11587   00492A                     ___fldiv:
 11588                           	callstack 23
 11589   00492A  0100               	movlb	0	; () banked
 11590   00492C  516B               	movf	(___fldiv@b+3)& (0+255),w,b
 11591   00492E  0B80               	andlw	128
 11592   004930  6F78               	movwf	___fldiv@sign& (0+255),b
 11593   004932  516B               	movf	(___fldiv@b+3)& (0+255),w,b
 11594   004934  256B               	addwf	(___fldiv@b+3)& (0+255),w,b
 11595   004936  6F7F               	movwf	___fldiv@bexp& (0+255),b
 11596   004938                     
 11597                           ; BSR set to: 0
 11598   004938  AF6A               	btfss	(___fldiv@b+2)& (0+255),7,b
 11599   00493A  EFA1  F024         	goto	u5931
 11600   00493E  EFA3  F024         	goto	u5930
 11601   004942                     u5931:
 11602   004942  EFA4  F024         	goto	l6315
 11603   004946                     u5930:
 11604   004946                     
 11605                           ; BSR set to: 0
 11606   004946  817F               	bsf	___fldiv@bexp& (0+255),0,b
 11607   004948                     l6315:
 11608                           
 11609                           ; BSR set to: 0
 11610   004948  517F               	movf	___fldiv@bexp& (0+255),w,b
 11611   00494A  B4D8               	btfsc	status,2,c
 11612   00494C  EFAA  F024         	goto	u5941
 11613   004950  EFAC  F024         	goto	u5940
 11614   004954                     u5941:
 11615   004954  EFC1  F024         	goto	l6325
 11616   004958                     u5940:
 11617   004958                     
 11618                           ; BSR set to: 0
 11619   004958  297F               	incf	___fldiv@bexp& (0+255),w,b
 11620   00495A  A4D8               	btfss	status,2,c
 11621   00495C  EFB2  F024         	goto	u5951
 11622   004960  EFB4  F024         	goto	u5950
 11623   004964                     u5951:
 11624   004964  EFBC  F024         	goto	l6321
 11625   004968                     u5950:
 11626   004968                     
 11627                           ; BSR set to: 0
 11628   004968  0E00               	movlw	0
 11629   00496A  6F68               	movwf	___fldiv@b& (0+255),b
 11630   00496C  0E00               	movlw	0
 11631   00496E  6F69               	movwf	(___fldiv@b+1)& (0+255),b
 11632   004970  0E00               	movlw	0
 11633   004972  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
 11634   004974  0E00               	movlw	0
 11635   004976  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 11636   004978                     l6321:
 11637                           
 11638                           ; BSR set to: 0
 11639   004978  8F6A               	bsf	(___fldiv@b+2)& (0+255),7,b
 11640   00497A                     
 11641                           ; BSR set to: 0
 11642   00497A  0E00               	movlw	0
 11643   00497C  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 11644   00497E  EFC9  F024         	goto	l6327
 11645   004982                     l6325:
 11646                           
 11647                           ; BSR set to: 0
 11648   004982  0E00               	movlw	0
 11649   004984  6F68               	movwf	___fldiv@b& (0+255),b
 11650   004986  0E00               	movlw	0
 11651   004988  6F69               	movwf	(___fldiv@b+1)& (0+255),b
 11652   00498A  0E00               	movlw	0
 11653   00498C  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
 11654   00498E  0E00               	movlw	0
 11655   004990  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 11656   004992                     l6327:
 11657                           
 11658                           ; BSR set to: 0
 11659   004992  516F               	movf	(___fldiv@a+3)& (0+255),w,b
 11660   004994  0B80               	andlw	128
 11661   004996  1B78               	xorwf	___fldiv@sign& (0+255),f,b
 11662   004998                     
 11663                           ; BSR set to: 0
 11664   004998  516F               	movf	(___fldiv@a+3)& (0+255),w,b
 11665   00499A  256F               	addwf	(___fldiv@a+3)& (0+255),w,b
 11666   00499C  6F80               	movwf	___fldiv@aexp& (0+255),b
 11667   00499E                     
 11668                           ; BSR set to: 0
 11669   00499E  AF6E               	btfss	(___fldiv@a+2)& (0+255),7,b
 11670   0049A0  EFD4  F024         	goto	u5961
 11671   0049A4  EFD6  F024         	goto	u5960
 11672   0049A8                     u5961:
 11673   0049A8  EFD7  F024         	goto	l6335
 11674   0049AC                     u5960:
 11675   0049AC                     
 11676                           ; BSR set to: 0
 11677   0049AC  8180               	bsf	___fldiv@aexp& (0+255),0,b
 11678   0049AE                     l6335:
 11679                           
 11680                           ; BSR set to: 0
 11681   0049AE  5180               	movf	___fldiv@aexp& (0+255),w,b
 11682   0049B0  B4D8               	btfsc	status,2,c
 11683   0049B2  EFDD  F024         	goto	u5971
 11684   0049B6  EFDF  F024         	goto	u5970
 11685   0049BA                     u5971:
 11686   0049BA  EFF4  F024         	goto	l6345
 11687   0049BE                     u5970:
 11688   0049BE                     
 11689                           ; BSR set to: 0
 11690   0049BE  2980               	incf	___fldiv@aexp& (0+255),w,b
 11691   0049C0  A4D8               	btfss	status,2,c
 11692   0049C2  EFE5  F024         	goto	u5981
 11693   0049C6  EFE7  F024         	goto	u5980
 11694   0049CA                     u5981:
 11695   0049CA  EFEF  F024         	goto	l6341
 11696   0049CE                     u5980:
 11697   0049CE                     
 11698                           ; BSR set to: 0
 11699   0049CE  0E00               	movlw	0
 11700   0049D0  6F6C               	movwf	___fldiv@a& (0+255),b
 11701   0049D2  0E00               	movlw	0
 11702   0049D4  6F6D               	movwf	(___fldiv@a+1)& (0+255),b
 11703   0049D6  0E00               	movlw	0
 11704   0049D8  6F6E               	movwf	(___fldiv@a+2)& (0+255),b
 11705   0049DA  0E00               	movlw	0
 11706   0049DC  6F6F               	movwf	(___fldiv@a+3)& (0+255),b
 11707   0049DE                     l6341:
 11708                           
 11709                           ; BSR set to: 0
 11710   0049DE  8F6E               	bsf	(___fldiv@a+2)& (0+255),7,b
 11711   0049E0                     
 11712                           ; BSR set to: 0
 11713   0049E0  0E00               	movlw	0
 11714   0049E2  6F6F               	movwf	(___fldiv@a+3)& (0+255),b
 11715   0049E4  EFFC  F024         	goto	l6347
 11716   0049E8                     l6345:
 11717                           
 11718                           ; BSR set to: 0
 11719   0049E8  0E00               	movlw	0
 11720   0049EA  6F6C               	movwf	___fldiv@a& (0+255),b
 11721   0049EC  0E00               	movlw	0
 11722   0049EE  6F6D               	movwf	(___fldiv@a+1)& (0+255),b
 11723   0049F0  0E00               	movlw	0
 11724   0049F2  6F6E               	movwf	(___fldiv@a+2)& (0+255),b
 11725   0049F4  0E00               	movlw	0
 11726   0049F6  6F6F               	movwf	(___fldiv@a+3)& (0+255),b
 11727   0049F8                     l6347:
 11728                           
 11729                           ; BSR set to: 0
 11730   0049F8  516C               	movf	___fldiv@a& (0+255),w,b
 11731   0049FA  116D               	iorwf	(___fldiv@a+1)& (0+255),w,b
 11732   0049FC  116E               	iorwf	(___fldiv@a+2)& (0+255),w,b
 11733   0049FE  116F               	iorwf	(___fldiv@a+3)& (0+255),w,b
 11734   004A00  A4D8               	btfss	status,2,c
 11735   004A02  EF05  F025         	goto	u5991
 11736   004A06  EF07  F025         	goto	u5990
 11737   004A0A                     u5991:
 11738   004A0A  EF1F  F025         	goto	l6359
 11739   004A0E                     u5990:
 11740   004A0E                     
 11741                           ; BSR set to: 0
 11742   004A0E  0E00               	movlw	0
 11743   004A10  6F68               	movwf	___fldiv@b& (0+255),b
 11744   004A12  0E00               	movlw	0
 11745   004A14  6F69               	movwf	(___fldiv@b+1)& (0+255),b
 11746   004A16  0E00               	movlw	0
 11747   004A18  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
 11748   004A1A  0E00               	movlw	0
 11749   004A1C  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 11750   004A1E                     
 11751                           ; BSR set to: 0
 11752   004A1E  0E80               	movlw	128
 11753   004A20  136A               	iorwf	(___fldiv@b+2)& (0+255),f,b
 11754   004A22  0E7F               	movlw	127
 11755   004A24  136B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 11756   004A26                     l6353:
 11757                           
 11758                           ; BSR set to: 0
 11759   004A26  5178               	movf	___fldiv@sign& (0+255),w,b
 11760   004A28  136B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 11761   004A2A                     
 11762                           ; BSR set to: 0
 11763   004A2A  C068  F068         	movff	___fldiv@b,?___fldiv
 11764   004A2E  C069  F069         	movff	___fldiv@b+1,?___fldiv+1
 11765   004A32  C06A  F06A         	movff	___fldiv@b+2,?___fldiv+2
 11766   004A36  C06B  F06B         	movff	___fldiv@b+3,?___fldiv+3
 11767   004A3A  EF62  F026         	goto	l871
 11768   004A3E                     l6359:
 11769                           
 11770                           ; BSR set to: 0
 11771   004A3E  517F               	movf	___fldiv@bexp& (0+255),w,b
 11772   004A40  A4D8               	btfss	status,2,c
 11773   004A42  EF25  F025         	goto	u6001
 11774   004A46  EF27  F025         	goto	u6000
 11775   004A4A                     u6001:
 11776   004A4A  EF31  F025         	goto	l6367
 11777   004A4E                     u6000:
 11778   004A4E                     
 11779                           ; BSR set to: 0
 11780   004A4E  0E00               	movlw	0
 11781   004A50  6F68               	movwf	?___fldiv& (0+255),b
 11782   004A52  0E00               	movlw	0
 11783   004A54  6F69               	movwf	(?___fldiv+1)& (0+255),b
 11784   004A56  0E00               	movlw	0
 11785   004A58  6F6A               	movwf	(?___fldiv+2)& (0+255),b
 11786   004A5A  0E00               	movlw	0
 11787   004A5C  6F6B               	movwf	(?___fldiv+3)& (0+255),b
 11788   004A5E  EF62  F026         	goto	l871
 11789   004A62                     l6367:
 11790                           
 11791                           ; BSR set to: 0
 11792   004A62  5180               	movf	___fldiv@aexp& (0+255),w,b
 11793   004A64  C07F  F070         	movff	___fldiv@bexp,??___fldiv
 11794   004A68  6B71               	clrf	(??___fldiv+1)& (0+255),b
 11795   004A6A  5F70               	subwf	??___fldiv& (0+255),f,b
 11796   004A6C  0E00               	movlw	0
 11797   004A6E  5B71               	subwfb	(??___fldiv+1)& (0+255),f,b
 11798   004A70  0E7F               	movlw	127
 11799   004A72  2570               	addwf	??___fldiv& (0+255),w,b
 11800   004A74  6F79               	movwf	___fldiv@new_exp& (0+255),b
 11801   004A76  0E00               	movlw	0
 11802   004A78  2171               	addwfc	(??___fldiv+1)& (0+255),w,b
 11803   004A7A  6F7A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11804   004A7C                     
 11805                           ; BSR set to: 0
 11806   004A7C  C068  F074         	movff	___fldiv@b,___fldiv@rem
 11807   004A80  C069  F075         	movff	___fldiv@b+1,___fldiv@rem+1
 11808   004A84  C06A  F076         	movff	___fldiv@b+2,___fldiv@rem+2
 11809   004A88  C06B  F077         	movff	___fldiv@b+3,___fldiv@rem+3
 11810   004A8C                     
 11811                           ; BSR set to: 0
 11812   004A8C  0E00               	movlw	0
 11813   004A8E  6F68               	movwf	___fldiv@b& (0+255),b
 11814   004A90  0E00               	movlw	0
 11815   004A92  6F69               	movwf	(___fldiv@b+1)& (0+255),b
 11816   004A94  0E00               	movlw	0
 11817   004A96  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
 11818   004A98  0E00               	movlw	0
 11819   004A9A  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 11820   004A9C                     
 11821                           ; BSR set to: 0
 11822   004A9C  0E00               	movlw	0
 11823   004A9E  6F7B               	movwf	___fldiv@grs& (0+255),b
 11824   004AA0  0E00               	movlw	0
 11825   004AA2  6F7C               	movwf	(___fldiv@grs+1)& (0+255),b
 11826   004AA4  0E00               	movlw	0
 11827   004AA6  6F7D               	movwf	(___fldiv@grs+2)& (0+255),b
 11828   004AA8  0E00               	movlw	0
 11829   004AAA  6F7E               	movwf	(___fldiv@grs+3)& (0+255),b
 11830   004AAC                     
 11831                           ; BSR set to: 0
 11832   004AAC  0E00               	movlw	0
 11833   004AAE  6F80               	movwf	___fldiv@aexp& (0+255),b
 11834   004AB0  EF92  F025         	goto	l873
 11835   004AB4                     l6377:
 11836                           
 11837                           ; BSR set to: 0
 11838   004AB4  5180               	movf	___fldiv@aexp& (0+255),w,b
 11839   004AB6  B4D8               	btfsc	status,2,c
 11840   004AB8  EF60  F025         	goto	u6011
 11841   004ABC  EF62  F025         	goto	u6010
 11842   004AC0                     u6011:
 11843   004AC0  EF79  F025         	goto	l6385
 11844   004AC4                     u6010:
 11845   004AC4                     
 11846                           ; BSR set to: 0
 11847   004AC4  90D8               	bcf	status,0,c
 11848   004AC6  3774               	rlcf	___fldiv@rem& (0+255),f,b
 11849   004AC8  3775               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 11850   004ACA  3776               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 11851   004ACC  3777               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 11852   004ACE  90D8               	bcf	status,0,c
 11853   004AD0  3768               	rlcf	___fldiv@b& (0+255),f,b
 11854   004AD2  3769               	rlcf	(___fldiv@b+1)& (0+255),f,b
 11855   004AD4  376A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 11856   004AD6  376B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 11857   004AD8                     
 11858                           ; BSR set to: 0
 11859   004AD8  AF7E               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11860   004ADA  EF71  F025         	goto	u6021
 11861   004ADE  EF73  F025         	goto	u6020
 11862   004AE2                     u6021:
 11863   004AE2  EF74  F025         	goto	l876
 11864   004AE6                     u6020:
 11865   004AE6                     
 11866                           ; BSR set to: 0
 11867   004AE6  8168               	bsf	___fldiv@b& (0+255),0,b
 11868   004AE8                     l876:
 11869                           
 11870                           ; BSR set to: 0
 11871   004AE8  90D8               	bcf	status,0,c
 11872   004AEA  377B               	rlcf	___fldiv@grs& (0+255),f,b
 11873   004AEC  377C               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11874   004AEE  377D               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11875   004AF0  377E               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11876   004AF2                     l6385:
 11877                           
 11878                           ; BSR set to: 0
 11879   004AF2  516C               	movf	___fldiv@a& (0+255),w,b
 11880   004AF4  5D74               	subwf	___fldiv@rem& (0+255),w,b
 11881   004AF6  516D               	movf	(___fldiv@a+1)& (0+255),w,b
 11882   004AF8  5975               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 11883   004AFA  516E               	movf	(___fldiv@a+2)& (0+255),w,b
 11884   004AFC  5976               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 11885   004AFE  516F               	movf	(___fldiv@a+3)& (0+255),w,b
 11886   004B00  5977               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 11887   004B02  A0D8               	btfss	status,0,c
 11888   004B04  EF86  F025         	goto	u6031
 11889   004B08  EF88  F025         	goto	u6030
 11890   004B0C                     u6031:
 11891   004B0C  EF91  F025         	goto	l6391
 11892   004B10                     u6030:
 11893   004B10                     
 11894                           ; BSR set to: 0
 11895   004B10  8D7E               	bsf	(___fldiv@grs+3)& (0+255),6,b
 11896   004B12                     
 11897                           ; BSR set to: 0
 11898   004B12  516C               	movf	___fldiv@a& (0+255),w,b
 11899   004B14  5F74               	subwf	___fldiv@rem& (0+255),f,b
 11900   004B16  516D               	movf	(___fldiv@a+1)& (0+255),w,b
 11901   004B18  5B75               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 11902   004B1A  516E               	movf	(___fldiv@a+2)& (0+255),w,b
 11903   004B1C  5B76               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 11904   004B1E  516F               	movf	(___fldiv@a+3)& (0+255),w,b
 11905   004B20  5B77               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 11906   004B22                     l6391:
 11907                           
 11908                           ; BSR set to: 0
 11909   004B22  2B80               	incf	___fldiv@aexp& (0+255),f,b
 11910   004B24                     l873:
 11911                           
 11912                           ; BSR set to: 0
 11913   004B24  0E19               	movlw	25
 11914   004B26  6580               	cpfsgt	___fldiv@aexp& (0+255),b
 11915   004B28  EF98  F025         	goto	u6041
 11916   004B2C  EF9A  F025         	goto	u6040
 11917   004B30                     u6041:
 11918   004B30  EF5A  F025         	goto	l6377
 11919   004B34                     u6040:
 11920   004B34                     
 11921                           ; BSR set to: 0
 11922   004B34  5174               	movf	___fldiv@rem& (0+255),w,b
 11923   004B36  1175               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 11924   004B38  1176               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 11925   004B3A  1177               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 11926   004B3C  B4D8               	btfsc	status,2,c
 11927   004B3E  EFA3  F025         	goto	u6051
 11928   004B42  EFA5  F025         	goto	u6050
 11929   004B46                     u6051:
 11930   004B46  EFBD  F025         	goto	l6403
 11931   004B4A                     u6050:
 11932   004B4A                     
 11933                           ; BSR set to: 0
 11934   004B4A  817B               	bsf	___fldiv@grs& (0+255),0,b
 11935   004B4C  EFBD  F025         	goto	l6403
 11936   004B50                     l6397:
 11937                           
 11938                           ; BSR set to: 0
 11939   004B50  90D8               	bcf	status,0,c
 11940   004B52  3768               	rlcf	___fldiv@b& (0+255),f,b
 11941   004B54  3769               	rlcf	(___fldiv@b+1)& (0+255),f,b
 11942   004B56  376A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 11943   004B58  376B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 11944   004B5A                     
 11945                           ; BSR set to: 0
 11946   004B5A  AF7E               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11947   004B5C  EFB2  F025         	goto	u6061
 11948   004B60  EFB4  F025         	goto	u6060
 11949   004B64                     u6061:
 11950   004B64  EFB5  F025         	goto	l882
 11951   004B68                     u6060:
 11952   004B68                     
 11953                           ; BSR set to: 0
 11954   004B68  8168               	bsf	___fldiv@b& (0+255),0,b
 11955   004B6A                     l882:
 11956                           
 11957                           ; BSR set to: 0
 11958   004B6A  90D8               	bcf	status,0,c
 11959   004B6C  377B               	rlcf	___fldiv@grs& (0+255),f,b
 11960   004B6E  377C               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11961   004B70  377D               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11962   004B72  377E               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11963   004B74  0779               	decf	___fldiv@new_exp& (0+255),f,b
 11964   004B76  A0D8               	btfss	status,0,c
 11965   004B78  077A               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 11966   004B7A                     l6403:
 11967                           
 11968                           ; BSR set to: 0
 11969   004B7A  AF6A               	btfss	(___fldiv@b+2)& (0+255),7,b
 11970   004B7C  EFC2  F025         	goto	u6071
 11971   004B80  EFC4  F025         	goto	u6070
 11972   004B84                     u6071:
 11973   004B84  EFA8  F025         	goto	l6397
 11974   004B88                     u6070:
 11975   004B88                     
 11976                           ; BSR set to: 0
 11977   004B88  0E00               	movlw	0
 11978   004B8A  6F80               	movwf	___fldiv@aexp& (0+255),b
 11979   004B8C                     
 11980                           ; BSR set to: 0
 11981   004B8C  AF7E               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11982   004B8E  EFCB  F025         	goto	u6081
 11983   004B92  EFCD  F025         	goto	u6080
 11984   004B96                     u6081:
 11985   004B96  EFF1  F025         	goto	l884
 11986   004B9A                     u6080:
 11987   004B9A                     
 11988                           ; BSR set to: 0
 11989   004B9A  0EFF               	movlw	255
 11990   004B9C  157B               	andwf	___fldiv@grs& (0+255),w,b
 11991   004B9E  6F70               	movwf	??___fldiv& (0+255),b
 11992   004BA0  0EFF               	movlw	255
 11993   004BA2  157C               	andwf	(___fldiv@grs+1)& (0+255),w,b
 11994   004BA4  6F71               	movwf	(??___fldiv+1)& (0+255),b
 11995   004BA6  0EFF               	movlw	255
 11996   004BA8  157D               	andwf	(___fldiv@grs+2)& (0+255),w,b
 11997   004BAA  6F72               	movwf	(??___fldiv+2)& (0+255),b
 11998   004BAC  0E7F               	movlw	127
 11999   004BAE  157E               	andwf	(___fldiv@grs+3)& (0+255),w,b
 12000   004BB0  6F73               	movwf	(??___fldiv+3)& (0+255),b
 12001   004BB2  5170               	movf	??___fldiv& (0+255),w,b
 12002   004BB4  1171               	iorwf	(??___fldiv+1)& (0+255),w,b
 12003   004BB6  1172               	iorwf	(??___fldiv+2)& (0+255),w,b
 12004   004BB8  1173               	iorwf	(??___fldiv+3)& (0+255),w,b
 12005   004BBA  B4D8               	btfsc	status,2,c
 12006   004BBC  EFE2  F025         	goto	u6091
 12007   004BC0  EFE4  F025         	goto	u6090
 12008   004BC4                     u6091:
 12009   004BC4  EFE8  F025         	goto	l885
 12010   004BC8                     u6090:
 12011   004BC8                     l6411:
 12012                           
 12013                           ; BSR set to: 0
 12014   004BC8  0E01               	movlw	1
 12015   004BCA  6F80               	movwf	___fldiv@aexp& (0+255),b
 12016   004BCC  EFF1  F025         	goto	l884
 12017   004BD0                     l885:
 12018                           
 12019                           ; BSR set to: 0
 12020   004BD0  A168               	btfss	___fldiv@b& (0+255),0,b
 12021   004BD2  EFED  F025         	goto	u6101
 12022   004BD6  EFEF  F025         	goto	u6100
 12023   004BDA                     u6101:
 12024   004BDA  EFF1  F025         	goto	l884
 12025   004BDE                     u6100:
 12026   004BDE  EFE4  F025         	goto	l6411
 12027   004BE2                     l884:
 12028                           
 12029                           ; BSR set to: 0
 12030   004BE2  5180               	movf	___fldiv@aexp& (0+255),w,b
 12031   004BE4  B4D8               	btfsc	status,2,c
 12032   004BE6  EFF7  F025         	goto	u6111
 12033   004BEA  EFF9  F025         	goto	u6110
 12034   004BEE                     u6111:
 12035   004BEE  EF1D  F026         	goto	l6423
 12036   004BF2                     u6110:
 12037   004BF2                     
 12038                           ; BSR set to: 0
 12039   004BF2  0E01               	movlw	1
 12040   004BF4  2768               	addwf	___fldiv@b& (0+255),f,b
 12041   004BF6  0E00               	movlw	0
 12042   004BF8  2369               	addwfc	(___fldiv@b+1)& (0+255),f,b
 12043   004BFA  236A               	addwfc	(___fldiv@b+2)& (0+255),f,b
 12044   004BFC  236B               	addwfc	(___fldiv@b+3)& (0+255),f,b
 12045   004BFE                     
 12046                           ; BSR set to: 0
 12047   004BFE  A16B               	btfss	(___fldiv@b+3)& (0+255),0,b
 12048   004C00  EF04  F026         	goto	u6121
 12049   004C04  EF06  F026         	goto	u6120
 12050   004C08                     u6121:
 12051   004C08  EF1D  F026         	goto	l6423
 12052   004C0C                     u6120:
 12053   004C0C                     
 12054                           ; BSR set to: 0
 12055   004C0C  C068  F070         	movff	___fldiv@b,??___fldiv
 12056   004C10  C069  F071         	movff	___fldiv@b+1,??___fldiv+1
 12057   004C14  C06A  F072         	movff	___fldiv@b+2,??___fldiv+2
 12058   004C18  C06B  F073         	movff	___fldiv@b+3,??___fldiv+3
 12059   004C1C  3573               	rlcf	(??___fldiv+3)& (0+255),w,b
 12060   004C1E  3373               	rrcf	(??___fldiv+3)& (0+255),f,b
 12061   004C20  3372               	rrcf	(??___fldiv+2)& (0+255),f,b
 12062   004C22  3371               	rrcf	(??___fldiv+1)& (0+255),f,b
 12063   004C24  3370               	rrcf	??___fldiv& (0+255),f,b
 12064   004C26  C070  F068         	movff	??___fldiv,___fldiv@b
 12065   004C2A  C071  F069         	movff	??___fldiv+1,___fldiv@b+1
 12066   004C2E  C072  F06A         	movff	??___fldiv+2,___fldiv@b+2
 12067   004C32  C073  F06B         	movff	??___fldiv+3,___fldiv@b+3
 12068   004C36                     
 12069                           ; BSR set to: 0
 12070   004C36  4B79               	infsnz	___fldiv@new_exp& (0+255),f,b
 12071   004C38  2B7A               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 12072   004C3A                     l6423:
 12073                           
 12074                           ; BSR set to: 0
 12075   004C3A  BF7A               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12076   004C3C  EF28  F026         	goto	u6131
 12077   004C40  517A               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12078   004C42  E108               	bnz	u6130
 12079   004C44  2979               	incf	___fldiv@new_exp& (0+255),w,b
 12080   004C46  A0D8               	btfss	status,0,c
 12081   004C48  EF28  F026         	goto	u6131
 12082   004C4C  EF2A  F026         	goto	u6130
 12083   004C50                     u6131:
 12084   004C50  EF35  F026         	goto	l6427
 12085   004C54                     u6130:
 12086   004C54                     
 12087                           ; BSR set to: 0
 12088   004C54  0E00               	movlw	0
 12089   004C56  6F7A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12090   004C58  6979               	setf	___fldiv@new_exp& (0+255),b
 12091   004C5A  0E00               	movlw	0
 12092   004C5C  6F68               	movwf	___fldiv@b& (0+255),b
 12093   004C5E  0E00               	movlw	0
 12094   004C60  6F69               	movwf	(___fldiv@b+1)& (0+255),b
 12095   004C62  0E00               	movlw	0
 12096   004C64  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
 12097   004C66  0E00               	movlw	0
 12098   004C68  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 12099   004C6A                     l6427:
 12100                           
 12101                           ; BSR set to: 0
 12102   004C6A  BF7A               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12103   004C6C  EF42  F026         	goto	u6140
 12104   004C70  517A               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12105   004C72  E106               	bnz	u6141
 12106   004C74  0579               	decf	___fldiv@new_exp& (0+255),w,b
 12107   004C76  B0D8               	btfsc	status,0,c
 12108   004C78  EF40  F026         	goto	u6141
 12109   004C7C  EF42  F026         	goto	u6140
 12110   004C80                     u6141:
 12111   004C80  EF50  F026         	goto	l6431
 12112   004C84                     u6140:
 12113   004C84                     
 12114                           ; BSR set to: 0
 12115   004C84  0E00               	movlw	0
 12116   004C86  6F7A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12117   004C88  0E00               	movlw	0
 12118   004C8A  6F79               	movwf	___fldiv@new_exp& (0+255),b
 12119   004C8C  0E00               	movlw	0
 12120   004C8E  6F68               	movwf	___fldiv@b& (0+255),b
 12121   004C90  0E00               	movlw	0
 12122   004C92  6F69               	movwf	(___fldiv@b+1)& (0+255),b
 12123   004C94  0E00               	movlw	0
 12124   004C96  6F6A               	movwf	(___fldiv@b+2)& (0+255),b
 12125   004C98  0E00               	movlw	0
 12126   004C9A  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 12127   004C9C  0E00               	movlw	0
 12128   004C9E  6F78               	movwf	___fldiv@sign& (0+255),b
 12129   004CA0                     l6431:
 12130                           
 12131                           ; BSR set to: 0
 12132   004CA0  C079  F07F         	movff	___fldiv@new_exp,___fldiv@bexp
 12133   004CA4                     
 12134                           ; BSR set to: 0
 12135   004CA4  A17F               	btfss	___fldiv@bexp& (0+255),0,b
 12136   004CA6  EF57  F026         	goto	u6151
 12137   004CAA  EF59  F026         	goto	u6150
 12138   004CAE                     u6151:
 12139   004CAE  EF5C  F026         	goto	l6437
 12140   004CB2                     u6150:
 12141   004CB2                     
 12142                           ; BSR set to: 0
 12143   004CB2  8F6A               	bsf	(___fldiv@b+2)& (0+255),7,b
 12144   004CB4  EF5D  F026         	goto	l6439
 12145   004CB8                     l6437:
 12146                           
 12147                           ; BSR set to: 0
 12148   004CB8  9F6A               	bcf	(___fldiv@b+2)& (0+255),7,b
 12149   004CBA                     l6439:
 12150                           
 12151                           ; BSR set to: 0
 12152   004CBA  90D8               	bcf	status,0,c
 12153   004CBC  317F               	rrcf	___fldiv@bexp& (0+255),w,b
 12154   004CBE  6F6B               	movwf	(___fldiv@b+3)& (0+255),b
 12155   004CC0  EF13  F025         	goto	l6353
 12156   004CC4                     l871:
 12157                           
 12158                           ; BSR set to: 0
 12159   004CC4  0012               	return		;funcret
 12160   004CC6                     __end_of___fldiv:
 12161                           	callstack 0
 12162                           
 12163 ;; *************** function _cosf *****************
 12164 ;; Defined at:
 12165 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\cosf.c"
 12166 ;; Parameters:    Size  Location     Type
 12167 ;;  x               4    0[BANK1 ] float 
 12168 ;; Auto vars:     Size  Location     Type
 12169 ;;  ix              4   34[BANK1 ] unsigned long 
 12170 ;;  y               4   30[BANK1 ] unsigned long 
 12171 ;;  __xc8_float_    4   12[BANK1 ] struct .
 12172 ;;  n               4    8[BANK1 ] long 
 12173 ;;  sign            2   28[BANK1 ] unsigned int 
 12174 ;; Return value:  Size  Location     Type
 12175 ;;                  4    0[BANK1 ] float 
 12176 ;; Registers used:
 12177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12178 ;; Tracked objects:
 12179 ;;		On entry : 0/0
 12180 ;;		On exit  : 0/0
 12181 ;;		Unchanged: 0/0
 12182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12183 ;;      Params:         0       0       4       0       0       0       0       0       0
 12184 ;;      Locals:         0       0      30       0       0       0       0       0       0
 12185 ;;      Temps:          0       0       4       0       0       0       0       0       0
 12186 ;;      Totals:         0       0      38       0       0       0       0       0       0
 12187 ;;Total ram usage:       38 bytes
 12188 ;; Hardware stack levels used: 1
 12189 ;; Hardware stack levels required when called: 5
 12190 ;; This function calls:
 12191 ;;		___cosdf
 12192 ;;		___fladd
 12193 ;;		___flneg
 12194 ;;		___flsub
 12195 ;;		___rem_pio2f
 12196 ;;		___sindf
 12197 ;; This function is called by:
 12198 ;;		_FFT
 12199 ;; This function uses a non-reentrant model
 12200 ;;
 12201                           
 12202                           	psect	text41
 12203   003152                     __ptext41:
 12204                           	callstack 0
 12205   003152                     _cosf:
 12206                           	callstack 24
 12207   003152  C18B  F197         	movff	cosf@x,cosf@__xc8_float_word
 12208   003156  C18C  F198         	movff	cosf@x+1,cosf@__xc8_float_word+1
 12209   00315A  C18D  F199         	movff	cosf@x+2,cosf@__xc8_float_word+2
 12210   00315E  C18E  F19A         	movff	cosf@x+3,cosf@__xc8_float_word+3
 12211   003162  C197  F1AD         	movff	cosf@__xc8_float_word,cosf@ix
 12212   003166  C198  F1AE         	movff	cosf@__xc8_float_word+1,cosf@ix+1
 12213   00316A  C199  F1AF         	movff	cosf@__xc8_float_word+2,cosf@ix+2
 12214   00316E  C19A  F1B0         	movff	cosf@__xc8_float_word+3,cosf@ix+3
 12215   003172  C1AD  F18F         	movff	cosf@ix,??_cosf
 12216   003176  C1AE  F190         	movff	cosf@ix+1,??_cosf+1
 12217   00317A  C1AF  F191         	movff	cosf@ix+2,??_cosf+2
 12218   00317E  C1B0  F192         	movff	cosf@ix+3,??_cosf+3
 12219   003182  0E20               	movlw	32
 12220   003184  EFCA  F018         	goto	u7520
 12221   003188                     u7525:
 12222   003188  0101               	movlb	1	; () banked
 12223   00318A  90D8               	bcf	status,0,c
 12224   00318C  3392               	rrcf	(??_cosf+3)& (0+255),f,b
 12225   00318E  3391               	rrcf	(??_cosf+2)& (0+255),f,b
 12226   003190  3390               	rrcf	(??_cosf+1)& (0+255),f,b
 12227   003192  338F               	rrcf	??_cosf& (0+255),f,b
 12228   003194                     u7520:
 12229   003194  2EE8               	decfsz	wreg,f,c
 12230   003196  EFC4  F018         	goto	u7525
 12231   00319A  C18F  F1A7         	movff	??_cosf,cosf@sign
 12232   00319E  C190  F1A8         	movff	??_cosf+1,cosf@sign+1
 12233   0031A2                     
 12234                           ; BSR set to: 1
 12235   0031A2  9FB0               	bcf	(cosf@ix+3)& (0+255),7,b
 12236   0031A4                     
 12237                           ; BSR set to: 1
 12238   0031A4  0EDB               	movlw	219
 12239   0031A6  5DAD               	subwf	cosf@ix& (0+255),w,b
 12240   0031A8  0E0F               	movlw	15
 12241   0031AA  59AE               	subwfb	(cosf@ix+1)& (0+255),w,b
 12242   0031AC  0E49               	movlw	73
 12243   0031AE  59AF               	subwfb	(cosf@ix+2)& (0+255),w,b
 12244   0031B0  0E3F               	movlw	63
 12245   0031B2  59B0               	subwfb	(cosf@ix+3)& (0+255),w,b
 12246   0031B4  B0D8               	btfsc	status,0,c
 12247   0031B6  EFDF  F018         	goto	u7531
 12248   0031BA  EFE1  F018         	goto	u7530
 12249   0031BE                     u7531:
 12250   0031BE  EF0A  F019         	goto	l7447
 12251   0031C2                     u7530:
 12252   0031C2                     
 12253                           ; BSR set to: 1
 12254   0031C2  0E80               	movlw	128
 12255   0031C4  5DAF               	subwf	(cosf@ix+2)& (0+255),w,b
 12256   0031C6  0E39               	movlw	57
 12257   0031C8  59B0               	subwfb	(cosf@ix+3)& (0+255),w,b
 12258   0031CA  B0D8               	btfsc	status,0,c
 12259   0031CC  EFEA  F018         	goto	u7541
 12260   0031D0  EFEC  F018         	goto	u7540
 12261   0031D4                     u7541:
 12262   0031D4  EFF6  F018         	goto	l7443
 12263   0031D8                     u7540:
 12264   0031D8                     
 12265                           ; BSR set to: 1
 12266   0031D8  0E00               	movlw	0
 12267   0031DA  6F8B               	movwf	?_cosf& (0+255),b
 12268   0031DC  0E00               	movlw	0
 12269   0031DE  6F8C               	movwf	(?_cosf+1)& (0+255),b
 12270   0031E0  0E80               	movlw	128
 12271   0031E2  6F8D               	movwf	(?_cosf+2)& (0+255),b
 12272   0031E4  0E3F               	movlw	63
 12273   0031E6  6F8E               	movwf	(?_cosf+3)& (0+255),b
 12274   0031E8  EF77  F01B         	goto	l981
 12275   0031EC                     l7443:
 12276                           
 12277                           ; BSR set to: 1
 12278   0031EC  C18B  F060         	movff	cosf@x,___cosdf@x
 12279   0031F0  C18C  F061         	movff	cosf@x+1,___cosdf@x+1
 12280   0031F4  C18D  F062         	movff	cosf@x+2,___cosdf@x+2
 12281   0031F8  C18E  F063         	movff	cosf@x+3,___cosdf@x+3
 12282   0031FC  ECD9  F02C         	call	___cosdf	;wreg free
 12283   003200  C060  F18B         	movff	?___cosdf,?_cosf
 12284   003204  C061  F18C         	movff	?___cosdf+1,?_cosf+1
 12285   003208  C062  F18D         	movff	?___cosdf+2,?_cosf+2
 12286   00320C  C063  F18E         	movff	?___cosdf+3,?_cosf+3
 12287   003210  EF77  F01B         	goto	l981
 12288   003214                     l7447:
 12289                           
 12290                           ; BSR set to: 1
 12291   003214  0ED2               	movlw	210
 12292   003216  5DAD               	subwf	cosf@ix& (0+255),w,b
 12293   003218  0E53               	movlw	83
 12294   00321A  59AE               	subwfb	(cosf@ix+1)& (0+255),w,b
 12295   00321C  0E7B               	movlw	123
 12296   00321E  59AF               	subwfb	(cosf@ix+2)& (0+255),w,b
 12297   003220  0E40               	movlw	64
 12298   003222  59B0               	subwfb	(cosf@ix+3)& (0+255),w,b
 12299   003224  B0D8               	btfsc	status,0,c
 12300   003226  EF17  F019         	goto	u7551
 12301   00322A  EF19  F019         	goto	u7550
 12302   00322E                     u7551:
 12303   00322E  EFE3  F019         	goto	l7477
 12304   003232                     u7550:
 12305   003232                     
 12306                           ; BSR set to: 1
 12307   003232  0EE4               	movlw	228
 12308   003234  5DAD               	subwf	cosf@ix& (0+255),w,b
 12309   003236  0ECB               	movlw	203
 12310   003238  59AE               	subwfb	(cosf@ix+1)& (0+255),w,b
 12311   00323A  0E16               	movlw	22
 12312   00323C  59AF               	subwfb	(cosf@ix+2)& (0+255),w,b
 12313   00323E  0E40               	movlw	64
 12314   003240  59B0               	subwfb	(cosf@ix+3)& (0+255),w,b
 12315   003242  A0D8               	btfss	status,0,c
 12316   003244  EF26  F019         	goto	u7561
 12317   003248  EF28  F019         	goto	u7560
 12318   00324C                     u7561:
 12319   00324C  EF85  F019         	goto	l7463
 12320   003250                     u7560:
 12321   003250                     
 12322                           ; BSR set to: 1
 12323   003250  51A7               	movf	cosf@sign& (0+255),w,b
 12324   003252  11A8               	iorwf	(cosf@sign+1)& (0+255),w,b
 12325   003254  A4D8               	btfss	status,2,c
 12326   003256  EF2F  F019         	goto	u7571
 12327   00325A  EF31  F019         	goto	u7570
 12328   00325E                     u7571:
 12329   00325E  EF4D  F019         	goto	l7455
 12330   003262                     u7570:
 12331   003262                     
 12332                           ; BSR set to: 1
 12333   003262  C18B  F034         	movff	cosf@x,___fladd@b
 12334   003266  C18C  F035         	movff	cosf@x+1,___fladd@b+1
 12335   00326A  C18D  F036         	movff	cosf@x+2,___fladd@b+2
 12336   00326E  C18E  F037         	movff	cosf@x+3,___fladd@b+3
 12337   003272  0EDB               	movlw	219
 12338   003274  6E38               	movwf	___fladd@a^0,c
 12339   003276  0E0F               	movlw	15
 12340   003278  6E39               	movwf	(___fladd@a+1)^0,c
 12341   00327A  0E49               	movlw	73
 12342   00327C  6E3A               	movwf	(___fladd@a+2)^0,c
 12343   00327E  0EC0               	movlw	192
 12344   003280  6E3B               	movwf	(___fladd@a+3)^0,c
 12345   003282  ECD8  F01D         	call	___fladd	;wreg free
 12346   003286  C034  F19B         	movff	?___fladd,_cosf$1173
 12347   00328A  C035  F19C         	movff	?___fladd+1,_cosf$1173+1
 12348   00328E  C036  F19D         	movff	?___fladd+2,_cosf$1173+2
 12349   003292  C037  F19E         	movff	?___fladd+3,_cosf$1173+3
 12350   003296  EF67  F019         	goto	l7457
 12351   00329A                     l7455:
 12352                           
 12353                           ; BSR set to: 1
 12354   00329A  C18B  F034         	movff	cosf@x,___fladd@b
 12355   00329E  C18C  F035         	movff	cosf@x+1,___fladd@b+1
 12356   0032A2  C18D  F036         	movff	cosf@x+2,___fladd@b+2
 12357   0032A6  C18E  F037         	movff	cosf@x+3,___fladd@b+3
 12358   0032AA  0EDB               	movlw	219
 12359   0032AC  6E38               	movwf	___fladd@a^0,c
 12360   0032AE  0E0F               	movlw	15
 12361   0032B0  6E39               	movwf	(___fladd@a+1)^0,c
 12362   0032B2  0E49               	movlw	73
 12363   0032B4  6E3A               	movwf	(___fladd@a+2)^0,c
 12364   0032B6  0E40               	movlw	64
 12365   0032B8  6E3B               	movwf	(___fladd@a+3)^0,c
 12366   0032BA  ECD8  F01D         	call	___fladd	;wreg free
 12367   0032BE  C034  F19B         	movff	?___fladd,_cosf$1173
 12368   0032C2  C035  F19C         	movff	?___fladd+1,_cosf$1173+1
 12369   0032C6  C036  F19D         	movff	?___fladd+2,_cosf$1173+2
 12370   0032CA  C037  F19E         	movff	?___fladd+3,_cosf$1173+3
 12371   0032CE                     l7457:
 12372   0032CE  C19B  F060         	movff	_cosf$1173,___cosdf@x
 12373   0032D2  C19C  F061         	movff	_cosf$1173+1,___cosdf@x+1
 12374   0032D6  C19D  F062         	movff	_cosf$1173+2,___cosdf@x+2
 12375   0032DA  C19E  F063         	movff	_cosf$1173+3,___cosdf@x+3
 12376   0032DE  ECD9  F02C         	call	___cosdf	;wreg free
 12377   0032E2  C060  F081         	movff	?___cosdf,___flneg@f1
 12378   0032E6  C061  F082         	movff	?___cosdf+1,___flneg@f1+1
 12379   0032EA  C062  F083         	movff	?___cosdf+2,___flneg@f1+2
 12380   0032EE  C063  F084         	movff	?___cosdf+3,___flneg@f1+3
 12381   0032F2  EC61  F036         	call	___flneg	;wreg free
 12382   0032F6  C081  F18B         	movff	?___flneg,?_cosf
 12383   0032FA  C082  F18C         	movff	?___flneg+1,?_cosf+1
 12384   0032FE  C083  F18D         	movff	?___flneg+2,?_cosf+2
 12385   003302  C084  F18E         	movff	?___flneg+3,?_cosf+3
 12386   003306  EF77  F01B         	goto	l981
 12387   00330A                     l7463:
 12388                           
 12389                           ; BSR set to: 1
 12390   00330A  51A7               	movf	cosf@sign& (0+255),w,b
 12391   00330C  11A8               	iorwf	(cosf@sign+1)& (0+255),w,b
 12392   00330E  B4D8               	btfsc	status,2,c
 12393   003310  EF8C  F019         	goto	u7581
 12394   003314  EF8E  F019         	goto	u7580
 12395   003318                     u7581:
 12396   003318  EFBC  F019         	goto	l7473
 12397   00331C                     u7580:
 12398   00331C                     
 12399                           ; BSR set to: 1
 12400   00331C  C18B  F034         	movff	cosf@x,___fladd@b
 12401   003320  C18C  F035         	movff	cosf@x+1,___fladd@b+1
 12402   003324  C18D  F036         	movff	cosf@x+2,___fladd@b+2
 12403   003328  C18E  F037         	movff	cosf@x+3,___fladd@b+3
 12404   00332C  0EDB               	movlw	219
 12405   00332E  6E38               	movwf	___fladd@a^0,c
 12406   003330  0E0F               	movlw	15
 12407   003332  6E39               	movwf	(___fladd@a+1)^0,c
 12408   003334  0EC9               	movlw	201
 12409   003336  6E3A               	movwf	(___fladd@a+2)^0,c
 12410   003338  0E3F               	movlw	63
 12411   00333A  6E3B               	movwf	(___fladd@a+3)^0,c
 12412   00333C  ECD8  F01D         	call	___fladd	;wreg free
 12413   003340  C034  F1A3         	movff	?___fladd,_cosf$1797
 12414   003344  C035  F1A4         	movff	?___fladd+1,_cosf$1797+1
 12415   003348  C036  F1A5         	movff	?___fladd+2,_cosf$1797+2
 12416   00334C  C037  F1A6         	movff	?___fladd+3,_cosf$1797+3
 12417   003350                     l7467:
 12418   003350  C1A3  F085         	movff	_cosf$1797,___sindf@x
 12419   003354  C1A4  F086         	movff	_cosf$1797+1,___sindf@x+1
 12420   003358  C1A5  F087         	movff	_cosf$1797+2,___sindf@x+2
 12421   00335C  C1A6  F088         	movff	_cosf$1797+3,___sindf@x+3
 12422   003360  ECB1  F029         	call	___sindf	;wreg free
 12423   003364  C085  F18B         	movff	?___sindf,?_cosf
 12424   003368  C086  F18C         	movff	?___sindf+1,?_cosf+1
 12425   00336C  C087  F18D         	movff	?___sindf+2,?_cosf+2
 12426   003370  C088  F18E         	movff	?___sindf+3,?_cosf+3
 12427   003374  EF77  F01B         	goto	l981
 12428   003378                     l7473:
 12429                           
 12430                           ; BSR set to: 1
 12431   003378  0EDB               	movlw	219
 12432   00337A  0100               	movlb	0	; () banked
 12433   00337C  6F60               	movwf	___flsub@b& (0+255),b
 12434   00337E  0E0F               	movlw	15
 12435   003380  6F61               	movwf	(___flsub@b+1)& (0+255),b
 12436   003382  0EC9               	movlw	201
 12437   003384  6F62               	movwf	(___flsub@b+2)& (0+255),b
 12438   003386  0E3F               	movlw	63
 12439   003388  6F63               	movwf	(___flsub@b+3)& (0+255),b
 12440   00338A  C18B  F064         	movff	cosf@x,___flsub@a
 12441   00338E  C18C  F065         	movff	cosf@x+1,___flsub@a+1
 12442   003392  C18D  F066         	movff	cosf@x+2,___flsub@a+2
 12443   003396  C18E  F067         	movff	cosf@x+3,___flsub@a+3
 12444   00339A  ECBB  F035         	call	___flsub	;wreg free
 12445   00339E  C060  F085         	movff	?___flsub,___sindf@x
 12446   0033A2  C061  F086         	movff	?___flsub+1,___sindf@x+1
 12447   0033A6  C062  F087         	movff	?___flsub+2,___sindf@x+2
 12448   0033AA  C063  F088         	movff	?___flsub+3,___sindf@x+3
 12449   0033AE  ECB1  F029         	call	___sindf	;wreg free
 12450   0033B2  C085  F18B         	movff	?___sindf,?_cosf
 12451   0033B6  C086  F18C         	movff	?___sindf+1,?_cosf+1
 12452   0033BA  C087  F18D         	movff	?___sindf+2,?_cosf+2
 12453   0033BE  C088  F18E         	movff	?___sindf+3,?_cosf+3
 12454   0033C2  EF77  F01B         	goto	l981
 12455   0033C6                     l7477:
 12456                           
 12457                           ; BSR set to: 1
 12458   0033C6  0ED6               	movlw	214
 12459   0033C8  5DAD               	subwf	cosf@ix& (0+255),w,b
 12460   0033CA  0E31               	movlw	49
 12461   0033CC  59AE               	subwfb	(cosf@ix+1)& (0+255),w,b
 12462   0033CE  0EE2               	movlw	226
 12463   0033D0  59AF               	subwfb	(cosf@ix+2)& (0+255),w,b
 12464   0033D2  0E40               	movlw	64
 12465   0033D4  59B0               	subwfb	(cosf@ix+3)& (0+255),w,b
 12466   0033D6  B0D8               	btfsc	status,0,c
 12467   0033D8  EFF0  F019         	goto	u7591
 12468   0033DC  EFF2  F019         	goto	u7590
 12469   0033E0                     u7591:
 12470   0033E0  EFA0  F01A         	goto	l7507
 12471   0033E4                     u7590:
 12472   0033E4                     
 12473                           ; BSR set to: 1
 12474   0033E4  0EE0               	movlw	224
 12475   0033E6  5DAD               	subwf	cosf@ix& (0+255),w,b
 12476   0033E8  0EED               	movlw	237
 12477   0033EA  59AE               	subwfb	(cosf@ix+1)& (0+255),w,b
 12478   0033EC  0EAF               	movlw	175
 12479   0033EE  59AF               	subwfb	(cosf@ix+2)& (0+255),w,b
 12480   0033F0  0E40               	movlw	64
 12481   0033F2  59B0               	subwfb	(cosf@ix+3)& (0+255),w,b
 12482   0033F4  A0D8               	btfss	status,0,c
 12483   0033F6  EFFF  F019         	goto	u7601
 12484   0033FA  EF01  F01A         	goto	u7600
 12485   0033FE                     u7601:
 12486   0033FE  EF54  F01A         	goto	l7493
 12487   003402                     u7600:
 12488   003402                     
 12489                           ; BSR set to: 1
 12490   003402  51A7               	movf	cosf@sign& (0+255),w,b
 12491   003404  11A8               	iorwf	(cosf@sign+1)& (0+255),w,b
 12492   003406  A4D8               	btfss	status,2,c
 12493   003408  EF08  F01A         	goto	u7611
 12494   00340C  EF0A  F01A         	goto	u7610
 12495   003410                     u7611:
 12496   003410  EF26  F01A         	goto	l7485
 12497   003414                     u7610:
 12498   003414                     
 12499                           ; BSR set to: 1
 12500   003414  C18B  F034         	movff	cosf@x,___fladd@b
 12501   003418  C18C  F035         	movff	cosf@x+1,___fladd@b+1
 12502   00341C  C18D  F036         	movff	cosf@x+2,___fladd@b+2
 12503   003420  C18E  F037         	movff	cosf@x+3,___fladd@b+3
 12504   003424  0EDB               	movlw	219
 12505   003426  6E38               	movwf	___fladd@a^0,c
 12506   003428  0E0F               	movlw	15
 12507   00342A  6E39               	movwf	(___fladd@a+1)^0,c
 12508   00342C  0EC9               	movlw	201
 12509   00342E  6E3A               	movwf	(___fladd@a+2)^0,c
 12510   003430  0EC0               	movlw	192
 12511   003432  6E3B               	movwf	(___fladd@a+3)^0,c
 12512   003434  ECD8  F01D         	call	___fladd	;wreg free
 12513   003438  C034  F19F         	movff	?___fladd,_cosf$1174
 12514   00343C  C035  F1A0         	movff	?___fladd+1,_cosf$1174+1
 12515   003440  C036  F1A1         	movff	?___fladd+2,_cosf$1174+2
 12516   003444  C037  F1A2         	movff	?___fladd+3,_cosf$1174+3
 12517   003448  EF40  F01A         	goto	l7487
 12518   00344C                     l7485:
 12519                           
 12520                           ; BSR set to: 1
 12521   00344C  C18B  F034         	movff	cosf@x,___fladd@b
 12522   003450  C18C  F035         	movff	cosf@x+1,___fladd@b+1
 12523   003454  C18D  F036         	movff	cosf@x+2,___fladd@b+2
 12524   003458  C18E  F037         	movff	cosf@x+3,___fladd@b+3
 12525   00345C  0EDB               	movlw	219
 12526   00345E  6E38               	movwf	___fladd@a^0,c
 12527   003460  0E0F               	movlw	15
 12528   003462  6E39               	movwf	(___fladd@a+1)^0,c
 12529   003464  0EC9               	movlw	201
 12530   003466  6E3A               	movwf	(___fladd@a+2)^0,c
 12531   003468  0E40               	movlw	64
 12532   00346A  6E3B               	movwf	(___fladd@a+3)^0,c
 12533   00346C  ECD8  F01D         	call	___fladd	;wreg free
 12534   003470  C034  F19F         	movff	?___fladd,_cosf$1174
 12535   003474  C035  F1A0         	movff	?___fladd+1,_cosf$1174+1
 12536   003478  C036  F1A1         	movff	?___fladd+2,_cosf$1174+2
 12537   00347C  C037  F1A2         	movff	?___fladd+3,_cosf$1174+3
 12538   003480                     l7487:
 12539   003480  C19F  F060         	movff	_cosf$1174,___cosdf@x
 12540   003484  C1A0  F061         	movff	_cosf$1174+1,___cosdf@x+1
 12541   003488  C1A1  F062         	movff	_cosf$1174+2,___cosdf@x+2
 12542   00348C  C1A2  F063         	movff	_cosf$1174+3,___cosdf@x+3
 12543   003490  ECD9  F02C         	call	___cosdf	;wreg free
 12544   003494  C060  F18B         	movff	?___cosdf,?_cosf
 12545   003498  C061  F18C         	movff	?___cosdf+1,?_cosf+1
 12546   00349C  C062  F18D         	movff	?___cosdf+2,?_cosf+2
 12547   0034A0  C063  F18E         	movff	?___cosdf+3,?_cosf+3
 12548   0034A4  EF77  F01B         	goto	l981
 12549   0034A8                     l7493:
 12550                           
 12551                           ; BSR set to: 1
 12552   0034A8  51A7               	movf	cosf@sign& (0+255),w,b
 12553   0034AA  11A8               	iorwf	(cosf@sign+1)& (0+255),w,b
 12554   0034AC  B4D8               	btfsc	status,2,c
 12555   0034AE  EF5B  F01A         	goto	u7621
 12556   0034B2  EF5D  F01A         	goto	u7620
 12557   0034B6                     u7621:
 12558   0034B6  EF84  F01A         	goto	l7501
 12559   0034BA                     u7620:
 12560   0034BA                     
 12561                           ; BSR set to: 1
 12562   0034BA  0EE4               	movlw	228
 12563   0034BC  0100               	movlb	0	; () banked
 12564   0034BE  6F60               	movwf	___flsub@b& (0+255),b
 12565   0034C0  0ECB               	movlw	203
 12566   0034C2  6F61               	movwf	(___flsub@b+1)& (0+255),b
 12567   0034C4  0E96               	movlw	150
 12568   0034C6  6F62               	movwf	(___flsub@b+2)& (0+255),b
 12569   0034C8  0EC0               	movlw	192
 12570   0034CA  6F63               	movwf	(___flsub@b+3)& (0+255),b
 12571   0034CC  C18B  F064         	movff	cosf@x,___flsub@a
 12572   0034D0  C18C  F065         	movff	cosf@x+1,___flsub@a+1
 12573   0034D4  C18D  F066         	movff	cosf@x+2,___flsub@a+2
 12574   0034D8  C18E  F067         	movff	cosf@x+3,___flsub@a+3
 12575   0034DC  ECBB  F035         	call	___flsub	;wreg free
 12576   0034E0  C060  F085         	movff	?___flsub,___sindf@x
 12577   0034E4  C061  F086         	movff	?___flsub+1,___sindf@x+1
 12578   0034E8  C062  F087         	movff	?___flsub+2,___sindf@x+2
 12579   0034EC  C063  F088         	movff	?___flsub+3,___sindf@x+3
 12580   0034F0  ECB1  F029         	call	___sindf	;wreg free
 12581   0034F4  C085  F18B         	movff	?___sindf,?_cosf
 12582   0034F8  C086  F18C         	movff	?___sindf+1,?_cosf+1
 12583   0034FC  C087  F18D         	movff	?___sindf+2,?_cosf+2
 12584   003500  C088  F18E         	movff	?___sindf+3,?_cosf+3
 12585   003504  EF77  F01B         	goto	l981
 12586   003508                     l7501:
 12587                           
 12588                           ; BSR set to: 1
 12589   003508  C18B  F034         	movff	cosf@x,___fladd@b
 12590   00350C  C18C  F035         	movff	cosf@x+1,___fladd@b+1
 12591   003510  C18D  F036         	movff	cosf@x+2,___fladd@b+2
 12592   003514  C18E  F037         	movff	cosf@x+3,___fladd@b+3
 12593   003518  0EE4               	movlw	228
 12594   00351A  6E38               	movwf	___fladd@a^0,c
 12595   00351C  0ECB               	movlw	203
 12596   00351E  6E39               	movwf	(___fladd@a+1)^0,c
 12597   003520  0E96               	movlw	150
 12598   003522  6E3A               	movwf	(___fladd@a+2)^0,c
 12599   003524  0EC0               	movlw	192
 12600   003526  6E3B               	movwf	(___fladd@a+3)^0,c
 12601   003528  ECD8  F01D         	call	___fladd	;wreg free
 12602   00352C  C034  F1A3         	movff	?___fladd,_cosf$1797
 12603   003530  C035  F1A4         	movff	?___fladd+1,_cosf$1797+1
 12604   003534  C036  F1A5         	movff	?___fladd+2,_cosf$1797+2
 12605   003538  C037  F1A6         	movff	?___fladd+3,_cosf$1797+3
 12606   00353C  EFA8  F019         	goto	l7467
 12607   003540                     l7507:
 12608                           
 12609                           ; BSR set to: 1
 12610   003540  0E80               	movlw	128
 12611   003542  5DAF               	subwf	(cosf@ix+2)& (0+255),w,b
 12612   003544  0E7F               	movlw	127
 12613   003546  59B0               	subwfb	(cosf@ix+3)& (0+255),w,b
 12614   003548  A0D8               	btfss	status,0,c
 12615   00354A  EFA9  F01A         	goto	u7631
 12616   00354E  EFAB  F01A         	goto	u7630
 12617   003552                     u7631:
 12618   003552  EFC7  F01A         	goto	l7513
 12619   003556                     u7630:
 12620   003556                     
 12621                           ; BSR set to: 1
 12622   003556  C18B  F060         	movff	cosf@x,___flsub@b
 12623   00355A  C18C  F061         	movff	cosf@x+1,___flsub@b+1
 12624   00355E  C18D  F062         	movff	cosf@x+2,___flsub@b+2
 12625   003562  C18E  F063         	movff	cosf@x+3,___flsub@b+3
 12626   003566  C18B  F064         	movff	cosf@x,___flsub@a
 12627   00356A  C18C  F065         	movff	cosf@x+1,___flsub@a+1
 12628   00356E  C18D  F066         	movff	cosf@x+2,___flsub@a+2
 12629   003572  C18E  F067         	movff	cosf@x+3,___flsub@a+3
 12630   003576  ECBB  F035         	call	___flsub	;wreg free
 12631   00357A  C060  F18B         	movff	?___flsub,?_cosf
 12632   00357E  C061  F18C         	movff	?___flsub+1,?_cosf+1
 12633   003582  C062  F18D         	movff	?___flsub+2,?_cosf+2
 12634   003586  C063  F18E         	movff	?___flsub+3,?_cosf+3
 12635   00358A  EF77  F01B         	goto	l981
 12636   00358E                     l7513:
 12637                           
 12638                           ; BSR set to: 1
 12639   00358E  C18B  F0D5         	movff	cosf@x,___rem_pio2f@x
 12640   003592  C18C  F0D6         	movff	cosf@x+1,___rem_pio2f@x+1
 12641   003596  C18D  F0D7         	movff	cosf@x+2,___rem_pio2f@x+2
 12642   00359A  C18E  F0D8         	movff	cosf@x+3,___rem_pio2f@x+3
 12643   00359E  0EA9               	movlw	low cosf@y
 12644   0035A0  0100               	movlb	0	; () banked
 12645   0035A2  6FD9               	movwf	___rem_pio2f@y& (0+255),b
 12646   0035A4  0E01               	movlw	high cosf@y
 12647   0035A6  6FDA               	movwf	(___rem_pio2f@y+1)& (0+255),b
 12648   0035A8  EC38  F020         	call	___rem_pio2f	;wreg free
 12649   0035AC  0100               	movlb	0	; () banked
 12650   0035AE  C0D5  F193         	movff	?___rem_pio2f,cosf@n
 12651   0035B2  C0D6  F194         	movff	?___rem_pio2f+1,cosf@n+1
 12652   0035B6  0101               	movlb	1	; () banked
 12653   0035B8  0E00               	movlw	0
 12654   0035BA  BF94               	btfsc	(cosf@n+1)& (0+255),7,b
 12655   0035BC  0EFF               	movlw	-1
 12656   0035BE  6F95               	movwf	(cosf@n+2)& (0+255),b
 12657   0035C0  6F96               	movwf	(cosf@n+3)& (0+255),b
 12658   0035C2  EF47  F01B         	goto	l7533
 12659   0035C6                     l7515:
 12660                           
 12661                           ; BSR set to: 1
 12662   0035C6  C1A9  F060         	movff	cosf@y,___cosdf@x
 12663   0035CA  C1AA  F061         	movff	cosf@y+1,___cosdf@x+1
 12664   0035CE  C1AB  F062         	movff	cosf@y+2,___cosdf@x+2
 12665   0035D2  C1AC  F063         	movff	cosf@y+3,___cosdf@x+3
 12666   0035D6  ECD9  F02C         	call	___cosdf	;wreg free
 12667   0035DA  C060  F18B         	movff	?___cosdf,?_cosf
 12668   0035DE  C061  F18C         	movff	?___cosdf+1,?_cosf+1
 12669   0035E2  C062  F18D         	movff	?___cosdf+2,?_cosf+2
 12670   0035E6  C063  F18E         	movff	?___cosdf+3,?_cosf+3
 12671   0035EA  EF77  F01B         	goto	l981
 12672   0035EE                     l7519:
 12673                           
 12674                           ; BSR set to: 1
 12675   0035EE  C1A9  F081         	movff	cosf@y,___flneg@f1
 12676   0035F2  C1AA  F082         	movff	cosf@y+1,___flneg@f1+1
 12677   0035F6  C1AB  F083         	movff	cosf@y+2,___flneg@f1+2
 12678   0035FA  C1AC  F084         	movff	cosf@y+3,___flneg@f1+3
 12679   0035FE  EC61  F036         	call	___flneg	;wreg free
 12680   003602  C081  F085         	movff	?___flneg,___sindf@x
 12681   003606  C082  F086         	movff	?___flneg+1,___sindf@x+1
 12682   00360A  C083  F087         	movff	?___flneg+2,___sindf@x+2
 12683   00360E  C084  F088         	movff	?___flneg+3,___sindf@x+3
 12684   003612  ECB1  F029         	call	___sindf	;wreg free
 12685   003616  C085  F18B         	movff	?___sindf,?_cosf
 12686   00361A  C086  F18C         	movff	?___sindf+1,?_cosf+1
 12687   00361E  C087  F18D         	movff	?___sindf+2,?_cosf+2
 12688   003622  C088  F18E         	movff	?___sindf+3,?_cosf+3
 12689   003626  EF77  F01B         	goto	l981
 12690   00362A                     l7523:
 12691                           
 12692                           ; BSR set to: 1
 12693   00362A  C1A9  F060         	movff	cosf@y,___cosdf@x
 12694   00362E  C1AA  F061         	movff	cosf@y+1,___cosdf@x+1
 12695   003632  C1AB  F062         	movff	cosf@y+2,___cosdf@x+2
 12696   003636  C1AC  F063         	movff	cosf@y+3,___cosdf@x+3
 12697   00363A  ECD9  F02C         	call	___cosdf	;wreg free
 12698   00363E  C060  F081         	movff	?___cosdf,___flneg@f1
 12699   003642  C061  F082         	movff	?___cosdf+1,___flneg@f1+1
 12700   003646  C062  F083         	movff	?___cosdf+2,___flneg@f1+2
 12701   00364A  C063  F084         	movff	?___cosdf+3,___flneg@f1+3
 12702   00364E  EC61  F036         	call	___flneg	;wreg free
 12703   003652  C081  F18B         	movff	?___flneg,?_cosf
 12704   003656  C082  F18C         	movff	?___flneg+1,?_cosf+1
 12705   00365A  C083  F18D         	movff	?___flneg+2,?_cosf+2
 12706   00365E  C084  F18E         	movff	?___flneg+3,?_cosf+3
 12707   003662  EF77  F01B         	goto	l981
 12708   003666                     l7527:
 12709                           
 12710                           ; BSR set to: 1
 12711   003666  C1A9  F085         	movff	cosf@y,___sindf@x
 12712   00366A  C1AA  F086         	movff	cosf@y+1,___sindf@x+1
 12713   00366E  C1AB  F087         	movff	cosf@y+2,___sindf@x+2
 12714   003672  C1AC  F088         	movff	cosf@y+3,___sindf@x+3
 12715   003676  ECB1  F029         	call	___sindf	;wreg free
 12716   00367A  C085  F18B         	movff	?___sindf,?_cosf
 12717   00367E  C086  F18C         	movff	?___sindf+1,?_cosf+1
 12718   003682  C087  F18D         	movff	?___sindf+2,?_cosf+2
 12719   003686  C088  F18E         	movff	?___sindf+3,?_cosf+3
 12720   00368A  EF77  F01B         	goto	l981
 12721   00368E                     l7533:
 12722                           
 12723                           ; BSR set to: 1
 12724   00368E  0E03               	movlw	3
 12725   003690  1593               	andwf	cosf@n& (0+255),w,b
 12726   003692  6F8F               	movwf	??_cosf& (0+255),b
 12727   003694  0E00               	movlw	0
 12728   003696  1594               	andwf	(cosf@n+1)& (0+255),w,b
 12729   003698  6F90               	movwf	(??_cosf+1)& (0+255),b
 12730   00369A  0E00               	movlw	0
 12731   00369C  1595               	andwf	(cosf@n+2)& (0+255),w,b
 12732   00369E  6F91               	movwf	(??_cosf+2)& (0+255),b
 12733   0036A0  0E00               	movlw	0
 12734   0036A2  1596               	andwf	(cosf@n+3)& (0+255),w,b
 12735   0036A4  6F92               	movwf	(??_cosf+3)& (0+255),b
 12736                           
 12737                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 12738                           ; Switch size 1, requested type "simple"
 12739                           ; Number of cases is 1, Range of values is 0 to 0
 12740                           ; switch strategies available:
 12741                           ; Name         Instructions Cycles
 12742                           ; simple_byte            4     3 (average)
 12743                           ;	Chosen strategy is simple_byte
 12744   0036A6  5192               	movf	(??_cosf+3)& (0+255),w,b
 12745   0036A8  0A00               	xorlw	0	; case 0
 12746   0036AA  B4D8               	btfsc	status,2,c
 12747   0036AC  EF70  F01B         	goto	l8481
 12748   0036B0  EF33  F01B         	goto	l7527
 12749   0036B4                     l8479:
 12750                           
 12751                           ; BSR set to: 1
 12752                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12753                           ; Switch size 1, requested type "simple"
 12754                           ; Number of cases is 1, Range of values is 0 to 0
 12755                           ; switch strategies available:
 12756                           ; Name         Instructions Cycles
 12757                           ; simple_byte            4     3 (average)
 12758                           ;	Chosen strategy is simple_byte
 12759   0036B4  5190               	movf	(??_cosf+1)& (0+255),w,b
 12760   0036B6  0A00               	xorlw	0	; case 0
 12761   0036B8  B4D8               	btfsc	status,2,c
 12762   0036BA  EF61  F01B         	goto	l8483
 12763   0036BE  EF33  F01B         	goto	l7527
 12764   0036C2                     l8483:
 12765                           
 12766                           ; BSR set to: 1
 12767                           ; Switch size 1, requested type "simple"
 12768                           ; Number of cases is 3, Range of values is 0 to 2
 12769                           ; switch strategies available:
 12770                           ; Name         Instructions Cycles
 12771                           ; simple_byte           10     6 (average)
 12772                           ;	Chosen strategy is simple_byte
 12773   0036C2  518F               	movf	??_cosf& (0+255),w,b
 12774   0036C4  0A00               	xorlw	0	; case 0
 12775   0036C6  B4D8               	btfsc	status,2,c
 12776   0036C8  EFE3  F01A         	goto	l7515
 12777   0036CC  0A01               	xorlw	1	; case 1
 12778   0036CE  B4D8               	btfsc	status,2,c
 12779   0036D0  EFF7  F01A         	goto	l7519
 12780   0036D4  0A03               	xorlw	3	; case 2
 12781   0036D6  B4D8               	btfsc	status,2,c
 12782   0036D8  EF15  F01B         	goto	l7523
 12783   0036DC  EF33  F01B         	goto	l7527
 12784   0036E0                     l8481:
 12785                           
 12786                           ; BSR set to: 1
 12787                           ; Switch size 1, requested type "simple"
 12788                           ; Number of cases is 1, Range of values is 0 to 0
 12789                           ; switch strategies available:
 12790                           ; Name         Instructions Cycles
 12791                           ; simple_byte            4     3 (average)
 12792                           ;	Chosen strategy is simple_byte
 12793   0036E0  5191               	movf	(??_cosf+2)& (0+255),w,b
 12794   0036E2  0A00               	xorlw	0	; case 0
 12795   0036E4  B4D8               	btfsc	status,2,c
 12796   0036E6  EF5A  F01B         	goto	l8479
 12797   0036EA  EF33  F01B         	goto	l7527
 12798   0036EE                     l981:
 12799   0036EE  0012               	return		;funcret
 12800   0036F0                     __end_of_cosf:
 12801                           	callstack 0
 12802                           
 12803 ;; *************** function ___sindf *****************
 12804 ;; Defined at:
 12805 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__sindf.c"
 12806 ;; Parameters:    Size  Location     Type
 12807 ;;  x               4   37[BANK0 ] float 
 12808 ;; Auto vars:     Size  Location     Type
 12809 ;;  z               4   65[BANK0 ] float 
 12810 ;;  s               4   61[BANK0 ] float 
 12811 ;;  w               4   45[BANK0 ] float 
 12812 ;;  r               4   41[BANK0 ] float 
 12813 ;; Return value:  Size  Location     Type
 12814 ;;                  4   37[BANK0 ] float 
 12815 ;; Registers used:
 12816 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12817 ;; Tracked objects:
 12818 ;;		On entry : 0/0
 12819 ;;		On exit  : 0/0
 12820 ;;		Unchanged: 0/0
 12821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12822 ;;      Params:         0       4       0       0       0       0       0       0       0
 12823 ;;      Locals:         0      28       0       0       0       0       0       0       0
 12824 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12825 ;;      Totals:         0      32       0       0       0       0       0       0       0
 12826 ;;Total ram usage:       32 bytes
 12827 ;; Hardware stack levels used: 1
 12828 ;; Hardware stack levels required when called: 3
 12829 ;; This function calls:
 12830 ;;		___fladd
 12831 ;;		___flmul
 12832 ;; This function is called by:
 12833 ;;		_cosf
 12834 ;;		_sinf
 12835 ;; This function uses a non-reentrant model
 12836 ;;
 12837                           
 12838                           	psect	text42
 12839   005362                     __ptext42:
 12840                           	callstack 0
 12841   005362                     ___sindf:
 12842                           	callstack 25
 12843   005362  C085  F01B         	movff	___sindf@x,___flmul@b
 12844   005366  C086  F01C         	movff	___sindf@x+1,___flmul@b+1
 12845   00536A  C087  F01D         	movff	___sindf@x+2,___flmul@b+2
 12846   00536E  C088  F01E         	movff	___sindf@x+3,___flmul@b+3
 12847   005372  C085  F01F         	movff	___sindf@x,___flmul@a
 12848   005376  C086  F020         	movff	___sindf@x+1,___flmul@a+1
 12849   00537A  C087  F021         	movff	___sindf@x+2,___flmul@a+2
 12850   00537E  C088  F022         	movff	___sindf@x+3,___flmul@a+3
 12851   005382  EC80  F022         	call	___flmul	;wreg free
 12852   005386  C01B  F0A1         	movff	?___flmul,___sindf@z
 12853   00538A  C01C  F0A2         	movff	?___flmul+1,___sindf@z+1
 12854   00538E  C01D  F0A3         	movff	?___flmul+2,___sindf@z+2
 12855   005392  C01E  F0A4         	movff	?___flmul+3,___sindf@z+3
 12856   005396  C0A1  F01B         	movff	___sindf@z,___flmul@b
 12857   00539A  C0A2  F01C         	movff	___sindf@z+1,___flmul@b+1
 12858   00539E  C0A3  F01D         	movff	___sindf@z+2,___flmul@b+2
 12859   0053A2  C0A4  F01E         	movff	___sindf@z+3,___flmul@b+3
 12860   0053A6  C0A1  F01F         	movff	___sindf@z,___flmul@a
 12861   0053AA  C0A2  F020         	movff	___sindf@z+1,___flmul@a+1
 12862   0053AE  C0A3  F021         	movff	___sindf@z+2,___flmul@a+2
 12863   0053B2  C0A4  F022         	movff	___sindf@z+3,___flmul@a+3
 12864   0053B6  EC80  F022         	call	___flmul	;wreg free
 12865   0053BA  C01B  F08D         	movff	?___flmul,___sindf@w
 12866   0053BE  C01C  F08E         	movff	?___flmul+1,___sindf@w+1
 12867   0053C2  C01D  F08F         	movff	?___flmul+2,___sindf@w+2
 12868   0053C6  C01E  F090         	movff	?___flmul+3,___sindf@w+3
 12869   0053CA  0E3C               	movlw	60
 12870   0053CC  6E1F               	movwf	___flmul@a^0,c
 12871   0053CE  0E6C               	movlw	108
 12872   0053D0  6E20               	movwf	(___flmul@a+1)^0,c
 12873   0053D2  0E36               	movlw	54
 12874   0053D4  6E21               	movwf	(___flmul@a+2)^0,c
 12875   0053D6  0E36               	movlw	54
 12876   0053D8  6E22               	movwf	(___flmul@a+3)^0,c
 12877   0053DA  C0A1  F01B         	movff	___sindf@z,___flmul@b
 12878   0053DE  C0A2  F01C         	movff	___sindf@z+1,___flmul@b+1
 12879   0053E2  C0A3  F01D         	movff	___sindf@z+2,___flmul@b+2
 12880   0053E6  C0A4  F01E         	movff	___sindf@z+3,___flmul@b+3
 12881   0053EA  EC80  F022         	call	___flmul	;wreg free
 12882   0053EE  C01B  F034         	movff	?___flmul,___fladd@b
 12883   0053F2  C01C  F035         	movff	?___flmul+1,___fladd@b+1
 12884   0053F6  C01D  F036         	movff	?___flmul+2,___fladd@b+2
 12885   0053FA  C01E  F037         	movff	?___flmul+3,___fladd@b+3
 12886   0053FE  0ECF               	movlw	207
 12887   005400  6E38               	movwf	___fladd@a^0,c
 12888   005402  0E07               	movlw	7
 12889   005404  6E39               	movwf	(___fladd@a+1)^0,c
 12890   005406  0E50               	movlw	80
 12891   005408  6E3A               	movwf	(___fladd@a+2)^0,c
 12892   00540A  0EB9               	movlw	185
 12893   00540C  6E3B               	movwf	(___fladd@a+3)^0,c
 12894   00540E  ECD8  F01D         	call	___fladd	;wreg free
 12895   005412  C034  F089         	movff	?___fladd,___sindf@r
 12896   005416  C035  F08A         	movff	?___fladd+1,___sindf@r+1
 12897   00541A  C036  F08B         	movff	?___fladd+2,___sindf@r+2
 12898   00541E  C037  F08C         	movff	?___fladd+3,___sindf@r+3
 12899   005422  C0A1  F01B         	movff	___sindf@z,___flmul@b
 12900   005426  C0A2  F01C         	movff	___sindf@z+1,___flmul@b+1
 12901   00542A  C0A3  F01D         	movff	___sindf@z+2,___flmul@b+2
 12902   00542E  C0A4  F01E         	movff	___sindf@z+3,___flmul@b+3
 12903   005432  C085  F01F         	movff	___sindf@x,___flmul@a
 12904   005436  C086  F020         	movff	___sindf@x+1,___flmul@a+1
 12905   00543A  C087  F021         	movff	___sindf@x+2,___flmul@a+2
 12906   00543E  C088  F022         	movff	___sindf@x+3,___flmul@a+3
 12907   005442  EC80  F022         	call	___flmul	;wreg free
 12908   005446  C01B  F09D         	movff	?___flmul,___sindf@s
 12909   00544A  C01C  F09E         	movff	?___flmul+1,___sindf@s+1
 12910   00544E  C01D  F09F         	movff	?___flmul+2,___sindf@s+2
 12911   005452  C01E  F0A0         	movff	?___flmul+3,___sindf@s+3
 12912   005456  0EAB               	movlw	171
 12913   005458  6E38               	movwf	___fladd@a^0,c
 12914   00545A  0EAA               	movlw	170
 12915   00545C  6E39               	movwf	(___fladd@a+1)^0,c
 12916   00545E  0E2A               	movlw	42
 12917   005460  6E3A               	movwf	(___fladd@a+2)^0,c
 12918   005462  0EBE               	movlw	190
 12919   005464  6E3B               	movwf	(___fladd@a+3)^0,c
 12920   005466  0E84               	movlw	132
 12921   005468  6E1F               	movwf	___flmul@a^0,c
 12922   00546A  0E88               	movlw	136
 12923   00546C  6E20               	movwf	(___flmul@a+1)^0,c
 12924   00546E  0E08               	movlw	8
 12925   005470  6E21               	movwf	(___flmul@a+2)^0,c
 12926   005472  0E3C               	movlw	60
 12927   005474  6E22               	movwf	(___flmul@a+3)^0,c
 12928   005476  C0A1  F01B         	movff	___sindf@z,___flmul@b
 12929   00547A  C0A2  F01C         	movff	___sindf@z+1,___flmul@b+1
 12930   00547E  C0A3  F01D         	movff	___sindf@z+2,___flmul@b+2
 12931   005482  C0A4  F01E         	movff	___sindf@z+3,___flmul@b+3
 12932   005486  EC80  F022         	call	___flmul	;wreg free
 12933   00548A  C01B  F034         	movff	?___flmul,___fladd@b
 12934   00548E  C01C  F035         	movff	?___flmul+1,___fladd@b+1
 12935   005492  C01D  F036         	movff	?___flmul+2,___fladd@b+2
 12936   005496  C01E  F037         	movff	?___flmul+3,___fladd@b+3
 12937   00549A  ECD8  F01D         	call	___fladd	;wreg free
 12938   00549E  C034  F091         	movff	?___fladd,___sindf$1802
 12939   0054A2  C035  F092         	movff	?___fladd+1,___sindf$1802+1
 12940   0054A6  C036  F093         	movff	?___fladd+2,___sindf$1802+2
 12941   0054AA  C037  F094         	movff	?___fladd+3,___sindf$1802+3
 12942   0054AE  C08D  F01F         	movff	___sindf@w,___flmul@a
 12943   0054B2  C08E  F020         	movff	___sindf@w+1,___flmul@a+1
 12944   0054B6  C08F  F021         	movff	___sindf@w+2,___flmul@a+2
 12945   0054BA  C090  F022         	movff	___sindf@w+3,___flmul@a+3
 12946   0054BE  C09D  F01B         	movff	___sindf@s,___flmul@b
 12947   0054C2  C09E  F01C         	movff	___sindf@s+1,___flmul@b+1
 12948   0054C6  C09F  F01D         	movff	___sindf@s+2,___flmul@b+2
 12949   0054CA  C0A0  F01E         	movff	___sindf@s+3,___flmul@b+3
 12950   0054CE  EC80  F022         	call	___flmul	;wreg free
 12951   0054D2  C01B  F095         	movff	?___flmul,___sindf$1803
 12952   0054D6  C01C  F096         	movff	?___flmul+1,___sindf$1803+1
 12953   0054DA  C01D  F097         	movff	?___flmul+2,___sindf$1803+2
 12954   0054DE  C01E  F098         	movff	?___flmul+3,___sindf$1803+3
 12955   0054E2  C085  F038         	movff	___sindf@x,___fladd@a
 12956   0054E6  C086  F039         	movff	___sindf@x+1,___fladd@a+1
 12957   0054EA  C087  F03A         	movff	___sindf@x+2,___fladd@a+2
 12958   0054EE  C088  F03B         	movff	___sindf@x+3,___fladd@a+3
 12959   0054F2  C09D  F01F         	movff	___sindf@s,___flmul@a
 12960   0054F6  C09E  F020         	movff	___sindf@s+1,___flmul@a+1
 12961   0054FA  C09F  F021         	movff	___sindf@s+2,___flmul@a+2
 12962   0054FE  C0A0  F022         	movff	___sindf@s+3,___flmul@a+3
 12963   005502  C091  F01B         	movff	___sindf$1802,___flmul@b
 12964   005506  C092  F01C         	movff	___sindf$1802+1,___flmul@b+1
 12965   00550A  C093  F01D         	movff	___sindf$1802+2,___flmul@b+2
 12966   00550E  C094  F01E         	movff	___sindf$1802+3,___flmul@b+3
 12967   005512  EC80  F022         	call	___flmul	;wreg free
 12968   005516  C01B  F034         	movff	?___flmul,___fladd@b
 12969   00551A  C01C  F035         	movff	?___flmul+1,___fladd@b+1
 12970   00551E  C01D  F036         	movff	?___flmul+2,___fladd@b+2
 12971   005522  C01E  F037         	movff	?___flmul+3,___fladd@b+3
 12972   005526  ECD8  F01D         	call	___fladd	;wreg free
 12973   00552A  C034  F099         	movff	?___fladd,___sindf$1804
 12974   00552E  C035  F09A         	movff	?___fladd+1,___sindf$1804+1
 12975   005532  C036  F09B         	movff	?___fladd+2,___sindf$1804+2
 12976   005536  C037  F09C         	movff	?___fladd+3,___sindf$1804+3
 12977   00553A  C099  F034         	movff	___sindf$1804,___fladd@b
 12978   00553E  C09A  F035         	movff	___sindf$1804+1,___fladd@b+1
 12979   005542  C09B  F036         	movff	___sindf$1804+2,___fladd@b+2
 12980   005546  C09C  F037         	movff	___sindf$1804+3,___fladd@b+3
 12981   00554A  C089  F01F         	movff	___sindf@r,___flmul@a
 12982   00554E  C08A  F020         	movff	___sindf@r+1,___flmul@a+1
 12983   005552  C08B  F021         	movff	___sindf@r+2,___flmul@a+2
 12984   005556  C08C  F022         	movff	___sindf@r+3,___flmul@a+3
 12985   00555A  C095  F01B         	movff	___sindf$1803,___flmul@b
 12986   00555E  C096  F01C         	movff	___sindf$1803+1,___flmul@b+1
 12987   005562  C097  F01D         	movff	___sindf$1803+2,___flmul@b+2
 12988   005566  C098  F01E         	movff	___sindf$1803+3,___flmul@b+3
 12989   00556A  EC80  F022         	call	___flmul	;wreg free
 12990   00556E  C01B  F038         	movff	?___flmul,___fladd@a
 12991   005572  C01C  F039         	movff	?___flmul+1,___fladd@a+1
 12992   005576  C01D  F03A         	movff	?___flmul+2,___fladd@a+2
 12993   00557A  C01E  F03B         	movff	?___flmul+3,___fladd@a+3
 12994   00557E  ECD8  F01D         	call	___fladd	;wreg free
 12995   005582  C034  F085         	movff	?___fladd,?___sindf
 12996   005586  C035  F086         	movff	?___fladd+1,?___sindf+1
 12997   00558A  C036  F087         	movff	?___fladd+2,?___sindf+2
 12998   00558E  C037  F088         	movff	?___fladd+3,?___sindf+3
 12999   005592  0012               	return		;funcret
 13000   005594                     __end_of___sindf:
 13001                           	callstack 0
 13002                           
 13003 ;; *************** function ___rem_pio2f *****************
 13004 ;; Defined at:
 13005 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__rem_pio2f.c"
 13006 ;; Parameters:    Size  Location     Type
 13007 ;;  x               4  117[BANK0 ] float 
 13008 ;;  y               2  121[BANK0 ] PTR 
 13009 ;;		 -> sinf@y(4), cosf@y(4), 
 13010 ;; Auto vars:     Size  Location     Type
 13011 ;;  n               4  153[BANK0 ] long 
 13012 ;;  t               4  149[BANK0 ] float 
 13013 ;;  fn              4  145[BANK0 ] float 
 13014 ;;  u               4  137[BANK0 ] struct .
 13015 ;;  ix              4  131[BANK0 ] unsigned long 
 13016 ;;  ty              4  127[BANK0 ] [1]
 13017 ;;  tx              4    0        [1]
 13018 ;;  sign            2  135[BANK0 ] int 
 13019 ;; Return value:  Size  Location     Type
 13020 ;;                  2  117[BANK0 ] int 
 13021 ;; Registers used:
 13022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13023 ;; Tracked objects:
 13024 ;;		On entry : 0/0
 13025 ;;		On exit  : 0/0
 13026 ;;		Unchanged: 0/0
 13027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13028 ;;      Params:         0       6       0       0       0       0       0       0       0
 13029 ;;      Locals:         0      30       0       0       0       0       0       0       0
 13030 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13031 ;;      Totals:         0      40       0       0       0       0       0       0       0
 13032 ;;Total ram usage:       40 bytes
 13033 ;; Hardware stack levels used: 1
 13034 ;; Hardware stack levels required when called: 4
 13035 ;; This function calls:
 13036 ;;		___fladd
 13037 ;;		___flmul
 13038 ;;		___flneg
 13039 ;;		___flsub
 13040 ;;		___fltol
 13041 ;;		___xxtofl
 13042 ;;		_fabsf
 13043 ;; This function is called by:
 13044 ;;		_cosf
 13045 ;;		_sinf
 13046 ;; This function uses a non-reentrant model
 13047 ;;
 13048                           
 13049                           	psect	text43
 13050   004070                     __ptext43:
 13051                           	callstack 0
 13052   004070                     ___rem_pio2f:
 13053                           	callstack 24
 13054   004070  C046  F0E9         	movff	___rem_pio2f@F532,___rem_pio2f@u
 13055   004074  C047  F0EA         	movff	___rem_pio2f@F532+1,___rem_pio2f@u+1
 13056   004078  C048  F0EB         	movff	___rem_pio2f@F532+2,___rem_pio2f@u+2
 13057   00407C  C049  F0EC         	movff	___rem_pio2f@F532+3,___rem_pio2f@u+3
 13058   004080  C0D5  F0E9         	movff	___rem_pio2f@x,___rem_pio2f@u
 13059   004084  C0D6  F0EA         	movff	___rem_pio2f@x+1,___rem_pio2f@u+1
 13060   004088  C0D7  F0EB         	movff	___rem_pio2f@x+2,___rem_pio2f@u+2
 13061   00408C  C0D8  F0EC         	movff	___rem_pio2f@x+3,___rem_pio2f@u+3
 13062   004090  C0E9  F0DB         	movff	___rem_pio2f@u,??___rem_pio2f
 13063   004094  C0EA  F0DC         	movff	___rem_pio2f@u+1,??___rem_pio2f+1
 13064   004098  C0EB  F0DD         	movff	___rem_pio2f@u+2,??___rem_pio2f+2
 13065   00409C  C0EC  F0DE         	movff	___rem_pio2f@u+3,??___rem_pio2f+3
 13066   0040A0  0E20               	movlw	32
 13067   0040A2  EF59  F020         	goto	u7300
 13068   0040A6                     u7305:
 13069   0040A6  0100               	movlb	0	; () banked
 13070   0040A8  90D8               	bcf	status,0,c
 13071   0040AA  33DE               	rrcf	(??___rem_pio2f+3)& (0+255),f,b
 13072   0040AC  33DD               	rrcf	(??___rem_pio2f+2)& (0+255),f,b
 13073   0040AE  33DC               	rrcf	(??___rem_pio2f+1)& (0+255),f,b
 13074   0040B0  33DB               	rrcf	??___rem_pio2f& (0+255),f,b
 13075   0040B2                     u7300:
 13076   0040B2  2EE8               	decfsz	wreg,f,c
 13077   0040B4  EF53  F020         	goto	u7305
 13078   0040B8  C0DB  F0E7         	movff	??___rem_pio2f,___rem_pio2f@sign
 13079   0040BC  C0DC  F0E8         	movff	??___rem_pio2f+1,___rem_pio2f@sign+1
 13080   0040C0  0EFF               	movlw	255
 13081   0040C2  15E9               	andwf	___rem_pio2f@u& (0+255),w,b
 13082   0040C4  6FE3               	movwf	___rem_pio2f@ix& (0+255),b
 13083   0040C6  0EFF               	movlw	255
 13084   0040C8  15EA               	andwf	(___rem_pio2f@u+1)& (0+255),w,b
 13085   0040CA  6FE4               	movwf	(___rem_pio2f@ix+1)& (0+255),b
 13086   0040CC  0EFF               	movlw	255
 13087   0040CE  15EB               	andwf	(___rem_pio2f@u+2)& (0+255),w,b
 13088   0040D0  6FE5               	movwf	(___rem_pio2f@ix+2)& (0+255),b
 13089   0040D2  0E7F               	movlw	127
 13090   0040D4  15EC               	andwf	(___rem_pio2f@u+3)& (0+255),w,b
 13091   0040D6  6FE6               	movwf	(___rem_pio2f@ix+3)& (0+255),b
 13092   0040D8  0E80               	movlw	128
 13093   0040DA  5DE5               	subwf	(___rem_pio2f@ix+2)& (0+255),w,b
 13094   0040DC  0E7F               	movlw	127
 13095   0040DE  59E6               	subwfb	(___rem_pio2f@ix+3)& (0+255),w,b
 13096   0040E0  A0D8               	btfss	status,0,c
 13097   0040E2  EF75  F020         	goto	u7311
 13098   0040E6  EF77  F020         	goto	u7310
 13099   0040EA                     u7311:
 13100   0040EA  EF9C  F020         	goto	l7219
 13101   0040EE                     u7310:
 13102   0040EE                     
 13103                           ; BSR set to: 0
 13104   0040EE  C0D5  F060         	movff	___rem_pio2f@x,___flsub@b
 13105   0040F2  C0D6  F061         	movff	___rem_pio2f@x+1,___flsub@b+1
 13106   0040F6  C0D7  F062         	movff	___rem_pio2f@x+2,___flsub@b+2
 13107   0040FA  C0D8  F063         	movff	___rem_pio2f@x+3,___flsub@b+3
 13108   0040FE  C0D5  F064         	movff	___rem_pio2f@x,___flsub@a
 13109   004102  C0D6  F065         	movff	___rem_pio2f@x+1,___flsub@a+1
 13110   004106  C0D7  F066         	movff	___rem_pio2f@x+2,___flsub@a+2
 13111   00410A  C0D8  F067         	movff	___rem_pio2f@x+3,___flsub@a+3
 13112   00410E  ECBB  F035         	call	___flsub	;wreg free
 13113   004112  C0D9  FFD9         	movff	___rem_pio2f@y,fsr2l
 13114   004116  C0DA  FFDA         	movff	___rem_pio2f@y+1,fsr2h
 13115   00411A  0100               	movlb	0	; () banked
 13116   00411C  C060  FFDE         	movff	?___flsub,postinc2
 13117   004120  C061  FFDE         	movff	?___flsub+1,postinc2
 13118   004124  C062  FFDE         	movff	?___flsub+2,postinc2
 13119   004128  C063  FFDE         	movff	?___flsub+3,postinc2
 13120   00412C                     
 13121                           ; BSR set to: 0
 13122   00412C  0E00               	movlw	0
 13123   00412E  6FD6               	movwf	(?___rem_pio2f+1)& (0+255),b
 13124   004130  0E00               	movlw	0
 13125   004132  6FD5               	movwf	?___rem_pio2f& (0+255),b
 13126   004134  EF7F  F022         	goto	l1035
 13127   004138                     l7219:
 13128                           
 13129                           ; BSR set to: 0
 13130   004138  0EDB               	movlw	219
 13131   00413A  5DE3               	subwf	___rem_pio2f@ix& (0+255),w,b
 13132   00413C  0E0F               	movlw	15
 13133   00413E  59E4               	subwfb	(___rem_pio2f@ix+1)& (0+255),w,b
 13134   004140  0EC9               	movlw	201
 13135   004142  59E5               	subwfb	(___rem_pio2f@ix+2)& (0+255),w,b
 13136   004144  0E4D               	movlw	77
 13137   004146  59E6               	subwfb	(___rem_pio2f@ix+3)& (0+255),w,b
 13138   004148  B0D8               	btfsc	status,0,c
 13139   00414A  EFA9  F020         	goto	u7321
 13140   00414E  EFAB  F020         	goto	u7320
 13141   004152                     u7321:
 13142   004152  EF9B  F021         	goto	l7239
 13143   004156                     u7320:
 13144   004156                     
 13145                           ; BSR set to: 0
 13146   004156  C0D5  F00D         	movff	___rem_pio2f@x,fabsf@x
 13147   00415A  C0D6  F00E         	movff	___rem_pio2f@x+1,fabsf@x+1
 13148   00415E  C0D7  F00F         	movff	___rem_pio2f@x+2,fabsf@x+2
 13149   004162  C0D8  F010         	movff	___rem_pio2f@x+3,fabsf@x+3
 13150   004166  EC7E  F036         	call	_fabsf	;wreg free
 13151   00416A  C00D  F0F5         	movff	?_fabsf,___rem_pio2f@t
 13152   00416E  C00E  F0F6         	movff	?_fabsf+1,___rem_pio2f@t+1
 13153   004172  C00F  F0F7         	movff	?_fabsf+2,___rem_pio2f@t+2
 13154   004176  C010  F0F8         	movff	?_fabsf+3,___rem_pio2f@t+3
 13155   00417A  0E00               	movlw	0
 13156   00417C  6E38               	movwf	___fladd@a^0,c
 13157   00417E  0E00               	movlw	0
 13158   004180  6E39               	movwf	(___fladd@a+1)^0,c
 13159   004182  0E00               	movlw	0
 13160   004184  6E3A               	movwf	(___fladd@a+2)^0,c
 13161   004186  0E3F               	movlw	63
 13162   004188  6E3B               	movwf	(___fladd@a+3)^0,c
 13163   00418A  0E83               	movlw	131
 13164   00418C  6E1F               	movwf	___flmul@a^0,c
 13165   00418E  0EF9               	movlw	249
 13166   004190  6E20               	movwf	(___flmul@a+1)^0,c
 13167   004192  0E22               	movlw	34
 13168   004194  6E21               	movwf	(___flmul@a+2)^0,c
 13169   004196  0E3F               	movlw	63
 13170   004198  6E22               	movwf	(___flmul@a+3)^0,c
 13171   00419A  C0F5  F01B         	movff	___rem_pio2f@t,___flmul@b
 13172   00419E  C0F6  F01C         	movff	___rem_pio2f@t+1,___flmul@b+1
 13173   0041A2  C0F7  F01D         	movff	___rem_pio2f@t+2,___flmul@b+2
 13174   0041A6  C0F8  F01E         	movff	___rem_pio2f@t+3,___flmul@b+3
 13175   0041AA  EC80  F022         	call	___flmul	;wreg free
 13176   0041AE  C01B  F034         	movff	?___flmul,___fladd@b
 13177   0041B2  C01C  F035         	movff	?___flmul+1,___fladd@b+1
 13178   0041B6  C01D  F036         	movff	?___flmul+2,___fladd@b+2
 13179   0041BA  C01E  F037         	movff	?___flmul+3,___fladd@b+3
 13180   0041BE  ECD8  F01D         	call	___fladd	;wreg free
 13181   0041C2  C034  F0CD         	movff	?___fladd,___fltol@f1
 13182   0041C6  C035  F0CE         	movff	?___fladd+1,___fltol@f1+1
 13183   0041CA  C036  F0CF         	movff	?___fladd+2,___fltol@f1+2
 13184   0041CE  C037  F0D0         	movff	?___fladd+3,___fltol@f1+3
 13185   0041D2  EC45  F030         	call	___fltol	;wreg free
 13186   0041D6  C0CD  F0F9         	movff	?___fltol,___rem_pio2f@n
 13187   0041DA  C0CE  F0FA         	movff	?___fltol+1,___rem_pio2f@n+1
 13188   0041DE  C0CF  F0FB         	movff	?___fltol+2,___rem_pio2f@n+2
 13189   0041E2  C0D0  F0FC         	movff	?___fltol+3,___rem_pio2f@n+3
 13190   0041E6  C0F9  F00D         	movff	___rem_pio2f@n,___xxtofl@val
 13191   0041EA  C0FA  F00E         	movff	___rem_pio2f@n+1,___xxtofl@val+1
 13192   0041EE  C0FB  F00F         	movff	___rem_pio2f@n+2,___xxtofl@val+2
 13193   0041F2  C0FC  F010         	movff	___rem_pio2f@n+3,___xxtofl@val+3
 13194   0041F6  0E01               	movlw	1
 13195   0041F8  ECC6  F02E         	call	___xxtofl
 13196   0041FC  C00D  F0F1         	movff	?___xxtofl,___rem_pio2f@fn
 13197   004200  C00E  F0F2         	movff	?___xxtofl+1,___rem_pio2f@fn+1
 13198   004204  C00F  F0F3         	movff	?___xxtofl+2,___rem_pio2f@fn+2
 13199   004208  C010  F0F4         	movff	?___xxtofl+3,___rem_pio2f@fn+3
 13200   00420C  0EDA               	movlw	218
 13201   00420E  6E1F               	movwf	___flmul@a^0,c
 13202   004210  0E0F               	movlw	15
 13203   004212  6E20               	movwf	(___flmul@a+1)^0,c
 13204   004214  0EC9               	movlw	201
 13205   004216  6E21               	movwf	(___flmul@a+2)^0,c
 13206   004218  0E3F               	movlw	63
 13207   00421A  6E22               	movwf	(___flmul@a+3)^0,c
 13208   00421C  C0F1  F01B         	movff	___rem_pio2f@fn,___flmul@b
 13209   004220  C0F2  F01C         	movff	___rem_pio2f@fn+1,___flmul@b+1
 13210   004224  C0F3  F01D         	movff	___rem_pio2f@fn+2,___flmul@b+2
 13211   004228  C0F4  F01E         	movff	___rem_pio2f@fn+3,___flmul@b+3
 13212   00422C  EC80  F022         	call	___flmul	;wreg free
 13213   004230  C01B  F064         	movff	?___flmul,___flsub@a
 13214   004234  C01C  F065         	movff	?___flmul+1,___flsub@a+1
 13215   004238  C01D  F066         	movff	?___flmul+2,___flsub@a+2
 13216   00423C  C01E  F067         	movff	?___flmul+3,___flsub@a+3
 13217   004240  C0F5  F060         	movff	___rem_pio2f@t,___flsub@b
 13218   004244  C0F6  F061         	movff	___rem_pio2f@t+1,___flsub@b+1
 13219   004248  C0F7  F062         	movff	___rem_pio2f@t+2,___flsub@b+2
 13220   00424C  C0F8  F063         	movff	___rem_pio2f@t+3,___flsub@b+3
 13221   004250  ECBB  F035         	call	___flsub	;wreg free
 13222   004254  C060  F0ED         	movff	?___flsub,___rem_pio2f$1801
 13223   004258  C061  F0EE         	movff	?___flsub+1,___rem_pio2f$1801+1
 13224   00425C  C062  F0EF         	movff	?___flsub+2,___rem_pio2f$1801+2
 13225   004260  C063  F0F0         	movff	?___flsub+3,___rem_pio2f$1801+3
 13226   004264  C0ED  F060         	movff	___rem_pio2f$1801,___flsub@b
 13227   004268  C0EE  F061         	movff	___rem_pio2f$1801+1,___flsub@b+1
 13228   00426C  C0EF  F062         	movff	___rem_pio2f$1801+2,___flsub@b+2
 13229   004270  C0F0  F063         	movff	___rem_pio2f$1801+3,___flsub@b+3
 13230   004274  0EA3               	movlw	163
 13231   004276  6E1F               	movwf	___flmul@a^0,c
 13232   004278  0E85               	movlw	133
 13233   00427A  6E20               	movwf	(___flmul@a+1)^0,c
 13234   00427C  0E88               	movlw	136
 13235   00427E  6E21               	movwf	(___flmul@a+2)^0,c
 13236   004280  0E32               	movlw	50
 13237   004282  6E22               	movwf	(___flmul@a+3)^0,c
 13238   004284  C0F1  F01B         	movff	___rem_pio2f@fn,___flmul@b
 13239   004288  C0F2  F01C         	movff	___rem_pio2f@fn+1,___flmul@b+1
 13240   00428C  C0F3  F01D         	movff	___rem_pio2f@fn+2,___flmul@b+2
 13241   004290  C0F4  F01E         	movff	___rem_pio2f@fn+3,___flmul@b+3
 13242   004294  EC80  F022         	call	___flmul	;wreg free
 13243   004298  C01B  F064         	movff	?___flmul,___flsub@a
 13244   00429C  C01C  F065         	movff	?___flmul+1,___flsub@a+1
 13245   0042A0  C01D  F066         	movff	?___flmul+2,___flsub@a+2
 13246   0042A4  C01E  F067         	movff	?___flmul+3,___flsub@a+3
 13247   0042A8  ECBB  F035         	call	___flsub	;wreg free
 13248   0042AC  C0D9  FFD9         	movff	___rem_pio2f@y,fsr2l
 13249   0042B0  C0DA  FFDA         	movff	___rem_pio2f@y+1,fsr2h
 13250   0042B4  0100               	movlb	0	; () banked
 13251   0042B6  C060  FFDE         	movff	?___flsub,postinc2
 13252   0042BA  C061  FFDE         	movff	?___flsub+1,postinc2
 13253   0042BE  C062  FFDE         	movff	?___flsub+2,postinc2
 13254   0042C2  C063  FFDE         	movff	?___flsub+3,postinc2
 13255   0042C6                     
 13256                           ; BSR set to: 0
 13257   0042C6  51E7               	movf	___rem_pio2f@sign& (0+255),w,b
 13258   0042C8  11E8               	iorwf	(___rem_pio2f@sign+1)& (0+255),w,b
 13259   0042CA  B4D8               	btfsc	status,2,c
 13260   0042CC  EF6A  F021         	goto	u7331
 13261   0042D0  EF6C  F021         	goto	u7330
 13262   0042D4                     u7331:
 13263   0042D4  EF95  F021         	goto	l1037
 13264   0042D8                     u7330:
 13265   0042D8                     
 13266                           ; BSR set to: 0
 13267   0042D8  C0D9  FFD9         	movff	___rem_pio2f@y,fsr2l
 13268   0042DC  C0DA  FFDA         	movff	___rem_pio2f@y+1,fsr2h
 13269   0042E0  CFDE F081          	movff	postinc2,___flneg@f1
 13270   0042E4  CFDE F082          	movff	postinc2,___flneg@f1+1
 13271   0042E8  CFDE F083          	movff	postinc2,___flneg@f1+2
 13272   0042EC  CFDE F084          	movff	postinc2,___flneg@f1+3
 13273   0042F0  EC61  F036         	call	___flneg	;wreg free
 13274   0042F4  C0D9  FFD9         	movff	___rem_pio2f@y,fsr2l
 13275   0042F8  C0DA  FFDA         	movff	___rem_pio2f@y+1,fsr2h
 13276   0042FC  0100               	movlb	0	; () banked
 13277   0042FE  C081  FFDE         	movff	?___flneg,postinc2
 13278   004302  C082  FFDE         	movff	?___flneg+1,postinc2
 13279   004306  C083  FFDE         	movff	?___flneg+2,postinc2
 13280   00430A  C084  FFDE         	movff	?___flneg+3,postinc2
 13281   00430E                     l7235:
 13282                           
 13283                           ; BSR set to: 0
 13284   00430E  C0F9  F0DB         	movff	___rem_pio2f@n,??___rem_pio2f
 13285   004312  C0FA  F0DC         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
 13286   004316  1FDB               	comf	??___rem_pio2f& (0+255),f,b
 13287   004318  1FDC               	comf	(??___rem_pio2f+1)& (0+255),f,b
 13288   00431A  4BDB               	infsnz	??___rem_pio2f& (0+255),f,b
 13289   00431C  2BDC               	incf	(??___rem_pio2f+1)& (0+255),f,b
 13290   00431E  C0DB  F0D5         	movff	??___rem_pio2f,?___rem_pio2f
 13291   004322  C0DC  F0D6         	movff	??___rem_pio2f+1,?___rem_pio2f+1
 13292   004326  EF7F  F022         	goto	l1035
 13293   00432A                     l1037:
 13294                           
 13295                           ; BSR set to: 0
 13296   00432A  C0F9  F0D5         	movff	___rem_pio2f@n,?___rem_pio2f
 13297   00432E  C0FA  F0D6         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
 13298   004332  EF7F  F022         	goto	l1035
 13299   004336                     l7239:
 13300                           
 13301                           ; BSR set to: 0
 13302   004336  C0D5  F00D         	movff	___rem_pio2f@x,fabsf@x
 13303   00433A  C0D6  F00E         	movff	___rem_pio2f@x+1,fabsf@x+1
 13304   00433E  C0D7  F00F         	movff	___rem_pio2f@x+2,fabsf@x+2
 13305   004342  C0D8  F010         	movff	___rem_pio2f@x+3,fabsf@x+3
 13306   004346  EC7E  F036         	call	_fabsf	;wreg free
 13307   00434A  C00D  F0F5         	movff	?_fabsf,___rem_pio2f@t
 13308   00434E  C00E  F0F6         	movff	?_fabsf+1,___rem_pio2f@t+1
 13309   004352  C00F  F0F7         	movff	?_fabsf+2,___rem_pio2f@t+2
 13310   004356  C010  F0F8         	movff	?_fabsf+3,___rem_pio2f@t+3
 13311   00435A  0E00               	movlw	0
 13312   00435C  6E38               	movwf	___fladd@a^0,c
 13313   00435E  0E00               	movlw	0
 13314   004360  6E39               	movwf	(___fladd@a+1)^0,c
 13315   004362  0E00               	movlw	0
 13316   004364  6E3A               	movwf	(___fladd@a+2)^0,c
 13317   004366  0E3F               	movlw	63
 13318   004368  6E3B               	movwf	(___fladd@a+3)^0,c
 13319   00436A  0E83               	movlw	131
 13320   00436C  6E1F               	movwf	___flmul@a^0,c
 13321   00436E  0EF9               	movlw	249
 13322   004370  6E20               	movwf	(___flmul@a+1)^0,c
 13323   004372  0E22               	movlw	34
 13324   004374  6E21               	movwf	(___flmul@a+2)^0,c
 13325   004376  0E3F               	movlw	63
 13326   004378  6E22               	movwf	(___flmul@a+3)^0,c
 13327   00437A  C0F5  F01B         	movff	___rem_pio2f@t,___flmul@b
 13328   00437E  C0F6  F01C         	movff	___rem_pio2f@t+1,___flmul@b+1
 13329   004382  C0F7  F01D         	movff	___rem_pio2f@t+2,___flmul@b+2
 13330   004386  C0F8  F01E         	movff	___rem_pio2f@t+3,___flmul@b+3
 13331   00438A  EC80  F022         	call	___flmul	;wreg free
 13332   00438E  C01B  F034         	movff	?___flmul,___fladd@b
 13333   004392  C01C  F035         	movff	?___flmul+1,___fladd@b+1
 13334   004396  C01D  F036         	movff	?___flmul+2,___fladd@b+2
 13335   00439A  C01E  F037         	movff	?___flmul+3,___fladd@b+3
 13336   00439E  ECD8  F01D         	call	___fladd	;wreg free
 13337   0043A2  C034  F0CD         	movff	?___fladd,___fltol@f1
 13338   0043A6  C035  F0CE         	movff	?___fladd+1,___fltol@f1+1
 13339   0043AA  C036  F0CF         	movff	?___fladd+2,___fltol@f1+2
 13340   0043AE  C037  F0D0         	movff	?___fladd+3,___fltol@f1+3
 13341   0043B2  EC45  F030         	call	___fltol	;wreg free
 13342   0043B6  C0CD  F0F9         	movff	?___fltol,___rem_pio2f@n
 13343   0043BA  C0CE  F0FA         	movff	?___fltol+1,___rem_pio2f@n+1
 13344   0043BE  C0CF  F0FB         	movff	?___fltol+2,___rem_pio2f@n+2
 13345   0043C2  C0D0  F0FC         	movff	?___fltol+3,___rem_pio2f@n+3
 13346   0043C6  C0F9  F00D         	movff	___rem_pio2f@n,___xxtofl@val
 13347   0043CA  C0FA  F00E         	movff	___rem_pio2f@n+1,___xxtofl@val+1
 13348   0043CE  C0FB  F00F         	movff	___rem_pio2f@n+2,___xxtofl@val+2
 13349   0043D2  C0FC  F010         	movff	___rem_pio2f@n+3,___xxtofl@val+3
 13350   0043D6  0E01               	movlw	1
 13351   0043D8  ECC6  F02E         	call	___xxtofl
 13352   0043DC  C00D  F0F1         	movff	?___xxtofl,___rem_pio2f@fn
 13353   0043E0  C00E  F0F2         	movff	?___xxtofl+1,___rem_pio2f@fn+1
 13354   0043E4  C00F  F0F3         	movff	?___xxtofl+2,___rem_pio2f@fn+2
 13355   0043E8  C010  F0F4         	movff	?___xxtofl+3,___rem_pio2f@fn+3
 13356   0043EC  0EDA               	movlw	218
 13357   0043EE  6E1F               	movwf	___flmul@a^0,c
 13358   0043F0  0E0F               	movlw	15
 13359   0043F2  6E20               	movwf	(___flmul@a+1)^0,c
 13360   0043F4  0EC9               	movlw	201
 13361   0043F6  6E21               	movwf	(___flmul@a+2)^0,c
 13362   0043F8  0E3F               	movlw	63
 13363   0043FA  6E22               	movwf	(___flmul@a+3)^0,c
 13364   0043FC  C0F1  F01B         	movff	___rem_pio2f@fn,___flmul@b
 13365   004400  C0F2  F01C         	movff	___rem_pio2f@fn+1,___flmul@b+1
 13366   004404  C0F3  F01D         	movff	___rem_pio2f@fn+2,___flmul@b+2
 13367   004408  C0F4  F01E         	movff	___rem_pio2f@fn+3,___flmul@b+3
 13368   00440C  EC80  F022         	call	___flmul	;wreg free
 13369   004410  C01B  F064         	movff	?___flmul,___flsub@a
 13370   004414  C01C  F065         	movff	?___flmul+1,___flsub@a+1
 13371   004418  C01D  F066         	movff	?___flmul+2,___flsub@a+2
 13372   00441C  C01E  F067         	movff	?___flmul+3,___flsub@a+3
 13373   004420  C0F5  F060         	movff	___rem_pio2f@t,___flsub@b
 13374   004424  C0F6  F061         	movff	___rem_pio2f@t+1,___flsub@b+1
 13375   004428  C0F7  F062         	movff	___rem_pio2f@t+2,___flsub@b+2
 13376   00442C  C0F8  F063         	movff	___rem_pio2f@t+3,___flsub@b+3
 13377   004430  ECBB  F035         	call	___flsub	;wreg free
 13378   004434  C060  F0ED         	movff	?___flsub,___rem_pio2f$1801
 13379   004438  C061  F0EE         	movff	?___flsub+1,___rem_pio2f$1801+1
 13380   00443C  C062  F0EF         	movff	?___flsub+2,___rem_pio2f$1801+2
 13381   004440  C063  F0F0         	movff	?___flsub+3,___rem_pio2f$1801+3
 13382   004444  C0ED  F060         	movff	___rem_pio2f$1801,___flsub@b
 13383   004448  C0EE  F061         	movff	___rem_pio2f$1801+1,___flsub@b+1
 13384   00444C  C0EF  F062         	movff	___rem_pio2f$1801+2,___flsub@b+2
 13385   004450  C0F0  F063         	movff	___rem_pio2f$1801+3,___flsub@b+3
 13386   004454  0EA3               	movlw	163
 13387   004456  6E1F               	movwf	___flmul@a^0,c
 13388   004458  0E85               	movlw	133
 13389   00445A  6E20               	movwf	(___flmul@a+1)^0,c
 13390   00445C  0E88               	movlw	136
 13391   00445E  6E21               	movwf	(___flmul@a+2)^0,c
 13392   004460  0E32               	movlw	50
 13393   004462  6E22               	movwf	(___flmul@a+3)^0,c
 13394   004464  C0F1  F01B         	movff	___rem_pio2f@fn,___flmul@b
 13395   004468  C0F2  F01C         	movff	___rem_pio2f@fn+1,___flmul@b+1
 13396   00446C  C0F3  F01D         	movff	___rem_pio2f@fn+2,___flmul@b+2
 13397   004470  C0F4  F01E         	movff	___rem_pio2f@fn+3,___flmul@b+3
 13398   004474  EC80  F022         	call	___flmul	;wreg free
 13399   004478  C01B  F064         	movff	?___flmul,___flsub@a
 13400   00447C  C01C  F065         	movff	?___flmul+1,___flsub@a+1
 13401   004480  C01D  F066         	movff	?___flmul+2,___flsub@a+2
 13402   004484  C01E  F067         	movff	?___flmul+3,___flsub@a+3
 13403   004488  ECBB  F035         	call	___flsub	;wreg free
 13404   00448C  C060  F0DF         	movff	?___flsub,___rem_pio2f@ty
 13405   004490  C061  F0E0         	movff	?___flsub+1,___rem_pio2f@ty+1
 13406   004494  C062  F0E1         	movff	?___flsub+2,___rem_pio2f@ty+2
 13407   004498  C063  F0E2         	movff	?___flsub+3,___rem_pio2f@ty+3
 13408   00449C  0100               	movlb	0	; () banked
 13409   00449E  51E7               	movf	___rem_pio2f@sign& (0+255),w,b
 13410   0044A0  11E8               	iorwf	(___rem_pio2f@sign+1)& (0+255),w,b
 13411   0044A2  B4D8               	btfsc	status,2,c
 13412   0044A4  EF56  F022         	goto	u7341
 13413   0044A8  EF58  F022         	goto	u7340
 13414   0044AC                     u7341:
 13415   0044AC  EF71  F022         	goto	l7257
 13416   0044B0                     u7340:
 13417   0044B0                     
 13418                           ; BSR set to: 0
 13419   0044B0  C0DF  F081         	movff	___rem_pio2f@ty,___flneg@f1
 13420   0044B4  C0E0  F082         	movff	___rem_pio2f@ty+1,___flneg@f1+1
 13421   0044B8  C0E1  F083         	movff	___rem_pio2f@ty+2,___flneg@f1+2
 13422   0044BC  C0E2  F084         	movff	___rem_pio2f@ty+3,___flneg@f1+3
 13423   0044C0  EC61  F036         	call	___flneg	;wreg free
 13424   0044C4  C0D9  FFD9         	movff	___rem_pio2f@y,fsr2l
 13425   0044C8  C0DA  FFDA         	movff	___rem_pio2f@y+1,fsr2h
 13426   0044CC  0100               	movlb	0	; () banked
 13427   0044CE  C081  FFDE         	movff	?___flneg,postinc2
 13428   0044D2  C082  FFDE         	movff	?___flneg+1,postinc2
 13429   0044D6  C083  FFDE         	movff	?___flneg+2,postinc2
 13430   0044DA  C084  FFDE         	movff	?___flneg+3,postinc2
 13431   0044DE  EF87  F021         	goto	l7235
 13432   0044E2                     l7257:
 13433                           
 13434                           ; BSR set to: 0
 13435   0044E2  C0D9  FFD9         	movff	___rem_pio2f@y,fsr2l
 13436   0044E6  C0DA  FFDA         	movff	___rem_pio2f@y+1,fsr2h
 13437   0044EA  C0DF  FFDE         	movff	___rem_pio2f@ty,postinc2
 13438   0044EE  C0E0  FFDE         	movff	___rem_pio2f@ty+1,postinc2
 13439   0044F2  C0E1  FFDE         	movff	___rem_pio2f@ty+2,postinc2
 13440   0044F6  C0E2  FFDE         	movff	___rem_pio2f@ty+3,postinc2
 13441   0044FA  EF95  F021         	goto	l1037
 13442   0044FE                     l1035:
 13443                           
 13444                           ; BSR set to: 0
 13445   0044FE  0012               	return		;funcret
 13446   004500                     __end_of___rem_pio2f:
 13447                           	callstack 0
 13448                           
 13449 ;; *************** function _fabsf *****************
 13450 ;; Defined at:
 13451 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fabsf.c"
 13452 ;; Parameters:    Size  Location     Type
 13453 ;;  x               4   12[COMRAM] float 
 13454 ;; Auto vars:     Size  Location     Type
 13455 ;;  u               4   16[COMRAM] struct .
 13456 ;; Return value:  Size  Location     Type
 13457 ;;                  4   12[COMRAM] float 
 13458 ;; Registers used:
 13459 ;;		status,2, status,0
 13460 ;; Tracked objects:
 13461 ;;		On entry : 0/0
 13462 ;;		On exit  : 0/0
 13463 ;;		Unchanged: 0/0
 13464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13465 ;;      Params:         4       0       0       0       0       0       0       0       0
 13466 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13467 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13468 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13469 ;;Total ram usage:        8 bytes
 13470 ;; Hardware stack levels used: 1
 13471 ;; Hardware stack levels required when called: 2
 13472 ;; This function calls:
 13473 ;;		Nothing
 13474 ;; This function is called by:
 13475 ;;		___rem_pio2f
 13476 ;; This function uses a non-reentrant model
 13477 ;;
 13478                           
 13479                           	psect	text44
 13480   006CFC                     __ptext44:
 13481                           	callstack 0
 13482   006CFC                     _fabsf:
 13483                           	callstack 25
 13484   006CFC  C15C  F011         	movff	fabsf@F465,fabsf@u
 13485   006D00  C15D  F012         	movff	fabsf@F465+1,fabsf@u+1
 13486   006D04  C15E  F013         	movff	fabsf@F465+2,fabsf@u+2
 13487   006D08  C15F  F014         	movff	fabsf@F465+3,fabsf@u+3
 13488   006D0C  C00D  F011         	movff	fabsf@x,fabsf@u
 13489   006D10  C00E  F012         	movff	fabsf@x+1,fabsf@u+1
 13490   006D14  C00F  F013         	movff	fabsf@x+2,fabsf@u+2
 13491   006D18  C010  F014         	movff	fabsf@x+3,fabsf@u+3
 13492   006D1C  9E14               	bcf	(fabsf@u+3)^0,7,c
 13493   006D1E  C011  F00D         	movff	fabsf@u,?_fabsf
 13494   006D22  C012  F00E         	movff	fabsf@u+1,?_fabsf+1
 13495   006D26  C013  F00F         	movff	fabsf@u+2,?_fabsf+2
 13496   006D2A  C014  F010         	movff	fabsf@u+3,?_fabsf+3
 13497   006D2E  0012               	return		;funcret
 13498   006D30                     __end_of_fabsf:
 13499                           	callstack 0
 13500                           
 13501 ;; *************** function ___xxtofl *****************
 13502 ;; Defined at:
 13503 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 13504 ;; Parameters:    Size  Location     Type
 13505 ;;  sign            1    wreg     unsigned char 
 13506 ;;  val             4   12[COMRAM] long 
 13507 ;; Auto vars:     Size  Location     Type
 13508 ;;  sign            1   20[COMRAM] unsigned char 
 13509 ;;  arg             4   22[COMRAM] unsigned long 
 13510 ;;  exp             1   21[COMRAM] unsigned char 
 13511 ;; Return value:  Size  Location     Type
 13512 ;;                  4   12[COMRAM] unsigned char 
 13513 ;; Registers used:
 13514 ;;		wreg, status,2, status,0
 13515 ;; Tracked objects:
 13516 ;;		On entry : 0/0
 13517 ;;		On exit  : 0/0
 13518 ;;		Unchanged: 0/0
 13519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13520 ;;      Params:         4       0       0       0       0       0       0       0       0
 13521 ;;      Locals:         6       0       0       0       0       0       0       0       0
 13522 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13523 ;;      Totals:        14       0       0       0       0       0       0       0       0
 13524 ;;Total ram usage:       14 bytes
 13525 ;; Hardware stack levels used: 1
 13526 ;; Hardware stack levels required when called: 2
 13527 ;; This function calls:
 13528 ;;		Nothing
 13529 ;; This function is called by:
 13530 ;;		_main
 13531 ;;		_verifRes
 13532 ;;		_FFT
 13533 ;;		_normalize
 13534 ;;		___rem_pio2f
 13535 ;;		_logf
 13536 ;; This function uses a non-reentrant model
 13537 ;;
 13538                           
 13539                           	psect	text45
 13540   005D8C                     __ptext45:
 13541                           	callstack 0
 13542   005D8C                     ___xxtofl:
 13543                           	callstack 27
 13544                           
 13545                           ;incstack = 0
 13546                           ;___xxtofl@sign stored from wreg
 13547   005D8C  6E15               	movwf	___xxtofl@sign^0,c
 13548   005D8E  5015               	movf	___xxtofl@sign^0,w,c
 13549   005D90  B4D8               	btfsc	status,2,c
 13550   005D92  EFCD  F02E         	goto	u7141
 13551   005D96  EFCF  F02E         	goto	u7140
 13552   005D9A                     u7141:
 13553   005D9A  EFF1  F02E         	goto	l944
 13554   005D9E                     u7140:
 13555   005D9E  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 13556   005DA0  EFD6  F02E         	goto	u7150
 13557   005DA4  EFD4  F02E         	goto	u7151
 13558   005DA8                     u7151:
 13559   005DA8  EFF1  F02E         	goto	l944
 13560   005DAC                     u7150:
 13561   005DAC  C00D  F011         	movff	___xxtofl@val,??___xxtofl
 13562   005DB0  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
 13563   005DB4  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
 13564   005DB8  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
 13565   005DBC  1E11               	comf	??___xxtofl^0,f,c
 13566   005DBE  1E12               	comf	(??___xxtofl+1)^0,f,c
 13567   005DC0  1E13               	comf	(??___xxtofl+2)^0,f,c
 13568   005DC2  1E14               	comf	(??___xxtofl+3)^0,f,c
 13569   005DC4  2A11               	incf	??___xxtofl^0,f,c
 13570   005DC6  0E00               	movlw	0
 13571   005DC8  2212               	addwfc	(??___xxtofl+1)^0,f,c
 13572   005DCA  2213               	addwfc	(??___xxtofl+2)^0,f,c
 13573   005DCC  2214               	addwfc	(??___xxtofl+3)^0,f,c
 13574   005DCE  C011  F017         	movff	??___xxtofl,___xxtofl@arg
 13575   005DD2  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
 13576   005DD6  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
 13577   005DDA  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
 13578   005DDE  EFF9  F02E         	goto	l7043
 13579   005DE2                     l944:
 13580   005DE2  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
 13581   005DE6  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13582   005DEA  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13583   005DEE  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13584   005DF2                     l7043:
 13585   005DF2  500D               	movf	___xxtofl@val^0,w,c
 13586   005DF4  100E               	iorwf	(___xxtofl@val+1)^0,w,c
 13587   005DF6  100F               	iorwf	(___xxtofl@val+2)^0,w,c
 13588   005DF8  1010               	iorwf	(___xxtofl@val+3)^0,w,c
 13589   005DFA  A4D8               	btfss	status,2,c
 13590   005DFC  EF02  F02F         	goto	u7161
 13591   005E00  EF04  F02F         	goto	u7160
 13592   005E04                     u7161:
 13593   005E04  EF0E  F02F         	goto	l7049
 13594   005E08                     u7160:
 13595   005E08  0E00               	movlw	0
 13596   005E0A  6E0D               	movwf	?___xxtofl^0,c
 13597   005E0C  0E00               	movlw	0
 13598   005E0E  6E0E               	movwf	(?___xxtofl+1)^0,c
 13599   005E10  0E00               	movlw	0
 13600   005E12  6E0F               	movwf	(?___xxtofl+2)^0,c
 13601   005E14  0E00               	movlw	0
 13602   005E16  6E10               	movwf	(?___xxtofl+3)^0,c
 13603   005E18  EF9F  F02F         	goto	l947
 13604   005E1C                     l7049:
 13605   005E1C  0E96               	movlw	150
 13606   005E1E  6E16               	movwf	___xxtofl@exp^0,c
 13607   005E20  EF18  F02F         	goto	l7053
 13608   005E24                     l7051:
 13609   005E24  2A16               	incf	___xxtofl@exp^0,f,c
 13610   005E26  90D8               	bcf	status,0,c
 13611   005E28  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 13612   005E2A  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 13613   005E2C  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 13614   005E2E  3217               	rrcf	___xxtofl@arg^0,f,c
 13615   005E30                     l7053:
 13616   005E30  0E00               	movlw	0
 13617   005E32  1417               	andwf	___xxtofl@arg^0,w,c
 13618   005E34  6E11               	movwf	??___xxtofl^0,c
 13619   005E36  0E00               	movlw	0
 13620   005E38  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 13621   005E3A  6E12               	movwf	(??___xxtofl+1)^0,c
 13622   005E3C  0E00               	movlw	0
 13623   005E3E  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 13624   005E40  6E13               	movwf	(??___xxtofl+2)^0,c
 13625   005E42  0EFE               	movlw	254
 13626   005E44  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 13627   005E46  6E14               	movwf	(??___xxtofl+3)^0,c
 13628   005E48  5011               	movf	??___xxtofl^0,w,c
 13629   005E4A  1012               	iorwf	(??___xxtofl+1)^0,w,c
 13630   005E4C  1013               	iorwf	(??___xxtofl+2)^0,w,c
 13631   005E4E  1014               	iorwf	(??___xxtofl+3)^0,w,c
 13632   005E50  A4D8               	btfss	status,2,c
 13633   005E52  EF2D  F02F         	goto	u7171
 13634   005E56  EF2F  F02F         	goto	u7170
 13635   005E5A                     u7171:
 13636   005E5A  EF12  F02F         	goto	l7051
 13637   005E5E                     u7170:
 13638   005E5E  EF3D  F02F         	goto	l951
 13639   005E62                     l7055:
 13640   005E62  2A16               	incf	___xxtofl@exp^0,f,c
 13641   005E64  0E01               	movlw	1
 13642   005E66  2617               	addwf	___xxtofl@arg^0,f,c
 13643   005E68  0E00               	movlw	0
 13644   005E6A  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
 13645   005E6C  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
 13646   005E6E  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
 13647   005E70  90D8               	bcf	status,0,c
 13648   005E72  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 13649   005E74  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 13650   005E76  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 13651   005E78  3217               	rrcf	___xxtofl@arg^0,f,c
 13652   005E7A                     l951:
 13653   005E7A  0E00               	movlw	0
 13654   005E7C  1417               	andwf	___xxtofl@arg^0,w,c
 13655   005E7E  6E11               	movwf	??___xxtofl^0,c
 13656   005E80  0E00               	movlw	0
 13657   005E82  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 13658   005E84  6E12               	movwf	(??___xxtofl+1)^0,c
 13659   005E86  0E00               	movlw	0
 13660   005E88  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 13661   005E8A  6E13               	movwf	(??___xxtofl+2)^0,c
 13662   005E8C  0EFF               	movlw	255
 13663   005E8E  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 13664   005E90  6E14               	movwf	(??___xxtofl+3)^0,c
 13665   005E92  5011               	movf	??___xxtofl^0,w,c
 13666   005E94  1012               	iorwf	(??___xxtofl+1)^0,w,c
 13667   005E96  1013               	iorwf	(??___xxtofl+2)^0,w,c
 13668   005E98  1014               	iorwf	(??___xxtofl+3)^0,w,c
 13669   005E9A  A4D8               	btfss	status,2,c
 13670   005E9C  EF52  F02F         	goto	u7181
 13671   005EA0  EF54  F02F         	goto	u7180
 13672   005EA4                     u7181:
 13673   005EA4  EF31  F02F         	goto	l7055
 13674   005EA8                     u7180:
 13675   005EA8  EF5C  F02F         	goto	l7063
 13676   005EAC                     l7061:
 13677   005EAC  0616               	decf	___xxtofl@exp^0,f,c
 13678   005EAE  90D8               	bcf	status,0,c
 13679   005EB0  3617               	rlcf	___xxtofl@arg^0,f,c
 13680   005EB2  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
 13681   005EB4  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
 13682   005EB6  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
 13683   005EB8                     l7063:
 13684   005EB8  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
 13685   005EBA  EF61  F02F         	goto	u7191
 13686   005EBE  EF63  F02F         	goto	u7190
 13687   005EC2                     u7191:
 13688   005EC2  EF6B  F02F         	goto	l958
 13689   005EC6                     u7190:
 13690   005EC6  0E02               	movlw	2
 13691   005EC8  6016               	cpfslt	___xxtofl@exp^0,c
 13692   005ECA  EF69  F02F         	goto	u7201
 13693   005ECE  EF6B  F02F         	goto	u7200
 13694   005ED2                     u7201:
 13695   005ED2  EF56  F02F         	goto	l7061
 13696   005ED6                     u7200:
 13697   005ED6                     l958:
 13698   005ED6  B016               	btfsc	___xxtofl@exp^0,0,c
 13699   005ED8  EF70  F02F         	goto	u7211
 13700   005EDC  EF72  F02F         	goto	u7210
 13701   005EE0                     u7211:
 13702   005EE0  EF73  F02F         	goto	l7069
 13703   005EE4                     u7210:
 13704   005EE4  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
 13705   005EE6                     l7069:
 13706   005EE6  90D8               	bcf	status,0,c
 13707   005EE8  3216               	rrcf	___xxtofl@exp^0,f,c
 13708   005EEA  C016  F011         	movff	___xxtofl@exp,??___xxtofl
 13709   005EEE  6A12               	clrf	(??___xxtofl+1)^0,c
 13710   005EF0  6A13               	clrf	(??___xxtofl+2)^0,c
 13711   005EF2  6A14               	clrf	(??___xxtofl+3)^0,c
 13712   005EF4  C011  F014         	movff	??___xxtofl,??___xxtofl+3
 13713   005EF8  6A13               	clrf	(??___xxtofl+2)^0,c
 13714   005EFA  6A12               	clrf	(??___xxtofl+1)^0,c
 13715   005EFC  6A11               	clrf	??___xxtofl^0,c
 13716   005EFE  5011               	movf	??___xxtofl^0,w,c
 13717   005F00  1217               	iorwf	___xxtofl@arg^0,f,c
 13718   005F02  5012               	movf	(??___xxtofl+1)^0,w,c
 13719   005F04  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
 13720   005F06  5013               	movf	(??___xxtofl+2)^0,w,c
 13721   005F08  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
 13722   005F0A  5014               	movf	(??___xxtofl+3)^0,w,c
 13723   005F0C  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
 13724   005F0E  5015               	movf	___xxtofl@sign^0,w,c
 13725   005F10  B4D8               	btfsc	status,2,c
 13726   005F12  EF8D  F02F         	goto	u7221
 13727   005F16  EF8F  F02F         	goto	u7220
 13728   005F1A                     u7221:
 13729   005F1A  EF97  F02F         	goto	l7079
 13730   005F1E                     u7220:
 13731   005F1E  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 13732   005F20  EF96  F02F         	goto	u7230
 13733   005F24  EF94  F02F         	goto	u7231
 13734   005F28                     u7231:
 13735   005F28  EF97  F02F         	goto	l7079
 13736   005F2C                     u7230:
 13737   005F2C  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
 13738   005F2E                     l7079:
 13739   005F2E  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
 13740   005F32  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
 13741   005F36  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
 13742   005F3A  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
 13743   005F3E                     l947:
 13744   005F3E  0012               	return		;funcret
 13745   005F40                     __end_of___xxtofl:
 13746                           	callstack 0
 13747                           
 13748 ;; *************** function ___fltol *****************
 13749 ;; Defined at:
 13750 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
 13751 ;; Parameters:    Size  Location     Type
 13752 ;;  f1              4  109[BANK0 ] unsigned char 
 13753 ;; Auto vars:     Size  Location     Type
 13754 ;;  exp1            1   68[COMRAM] unsigned char 
 13755 ;;  sign1           1   67[COMRAM] unsigned char 
 13756 ;; Return value:  Size  Location     Type
 13757 ;;                  4  109[BANK0 ] long 
 13758 ;; Registers used:
 13759 ;;		wreg, status,2, status,0
 13760 ;; Tracked objects:
 13761 ;;		On entry : 0/0
 13762 ;;		On exit  : 0/0
 13763 ;;		Unchanged: 0/0
 13764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13765 ;;      Params:         0       4       0       0       0       0       0       0       0
 13766 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13767 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13768 ;;      Totals:         2       8       0       0       0       0       0       0       0
 13769 ;;Total ram usage:       10 bytes
 13770 ;; Hardware stack levels used: 1
 13771 ;; Hardware stack levels required when called: 2
 13772 ;; This function calls:
 13773 ;;		Nothing
 13774 ;; This function is called by:
 13775 ;;		_main
 13776 ;;		_FFT
 13777 ;;		_normalize
 13778 ;;		___rem_pio2f
 13779 ;;		_efgtoa
 13780 ;; This function uses a non-reentrant model
 13781 ;;
 13782                           
 13783                           	psect	text46
 13784   00608A                     __ptext46:
 13785                           	callstack 0
 13786   00608A                     ___fltol:
 13787                           	callstack 23
 13788   00608A  0100               	movlb	0	; () banked
 13789   00608C  35CF               	rlcf	(___fltol@f1+2)& (0+255),w,b
 13790   00608E  35D0               	rlcf	(___fltol@f1+3)& (0+255),w,b
 13791   006090  6E45               	movwf	___fltol@exp1^0,c
 13792   006092  5045               	movf	___fltol@exp1^0,w,c
 13793   006094  A4D8               	btfss	status,2,c
 13794   006096  EF4F  F030         	goto	u6441
 13795   00609A  EF51  F030         	goto	u6440
 13796   00609E                     u6441:
 13797   00609E  EF5B  F030         	goto	l6635
 13798   0060A2                     u6440:
 13799   0060A2                     l6631:
 13800                           
 13801                           ; BSR set to: 0
 13802   0060A2  0E00               	movlw	0
 13803   0060A4  6FCD               	movwf	?___fltol& (0+255),b
 13804   0060A6  0E00               	movlw	0
 13805   0060A8  6FCE               	movwf	(?___fltol+1)& (0+255),b
 13806   0060AA  0E00               	movlw	0
 13807   0060AC  6FCF               	movwf	(?___fltol+2)& (0+255),b
 13808   0060AE  0E00               	movlw	0
 13809   0060B0  6FD0               	movwf	(?___fltol+3)& (0+255),b
 13810   0060B2  EFC8  F030         	goto	l586
 13811   0060B6                     l6635:
 13812                           
 13813                           ; BSR set to: 0
 13814   0060B6  C0CD  F0D1         	movff	___fltol@f1,??___fltol
 13815   0060BA  C0CE  F0D2         	movff	___fltol@f1+1,??___fltol+1
 13816   0060BE  C0CF  F0D3         	movff	___fltol@f1+2,??___fltol+2
 13817   0060C2  C0D0  F0D4         	movff	___fltol@f1+3,??___fltol+3
 13818   0060C6  0E20               	movlw	32
 13819   0060C8  EF6B  F030         	goto	u6450
 13820   0060CC                     u6455:
 13821   0060CC  90D8               	bcf	status,0,c
 13822   0060CE  33D4               	rrcf	(??___fltol+3)& (0+255),f,b
 13823   0060D0  33D3               	rrcf	(??___fltol+2)& (0+255),f,b
 13824   0060D2  33D2               	rrcf	(??___fltol+1)& (0+255),f,b
 13825   0060D4  33D1               	rrcf	??___fltol& (0+255),f,b
 13826   0060D6                     u6450:
 13827   0060D6  2EE8               	decfsz	wreg,f,c
 13828   0060D8  EF66  F030         	goto	u6455
 13829   0060DC  51D1               	movf	??___fltol& (0+255),w,b
 13830   0060DE  6E44               	movwf	___fltol@sign1^0,c
 13831   0060E0                     
 13832                           ; BSR set to: 0
 13833   0060E0  8FCF               	bsf	(___fltol@f1+2)& (0+255),7,b
 13834   0060E2                     
 13835                           ; BSR set to: 0
 13836   0060E2  0EFF               	movlw	255
 13837   0060E4  17CD               	andwf	___fltol@f1& (0+255),f,b
 13838   0060E6  0EFF               	movlw	255
 13839   0060E8  17CE               	andwf	(___fltol@f1+1)& (0+255),f,b
 13840   0060EA  0EFF               	movlw	255
 13841   0060EC  17CF               	andwf	(___fltol@f1+2)& (0+255),f,b
 13842   0060EE  0E00               	movlw	0
 13843   0060F0  17D0               	andwf	(___fltol@f1+3)& (0+255),f,b
 13844   0060F2                     
 13845                           ; BSR set to: 0
 13846   0060F2  0E96               	movlw	150
 13847   0060F4  5E45               	subwf	___fltol@exp1^0,f,c
 13848   0060F6                     
 13849                           ; BSR set to: 0
 13850   0060F6  BE45               	btfsc	___fltol@exp1^0,7,c
 13851   0060F8  EF82  F030         	goto	u6460
 13852   0060FC  EF80  F030         	goto	u6461
 13853   006100                     u6461:
 13854   006100  EF98  F030         	goto	l6655
 13855   006104                     u6460:
 13856   006104                     
 13857                           ; BSR set to: 0
 13858   006104  5045               	movf	___fltol@exp1^0,w,c
 13859   006106  0A80               	xorlw	128
 13860   006108  0F97               	addlw	151
 13861   00610A  B0D8               	btfsc	status,0,c
 13862   00610C  EF8A  F030         	goto	u6471
 13863   006110  EF8C  F030         	goto	u6470
 13864   006114                     u6471:
 13865   006114  EF8E  F030         	goto	l6651
 13866   006118                     u6470:
 13867   006118  EF51  F030         	goto	l6631
 13868   00611C                     l6651:
 13869                           
 13870                           ; BSR set to: 0
 13871   00611C  90D8               	bcf	status,0,c
 13872   00611E  33D0               	rrcf	(___fltol@f1+3)& (0+255),f,b
 13873   006120  33CF               	rrcf	(___fltol@f1+2)& (0+255),f,b
 13874   006122  33CE               	rrcf	(___fltol@f1+1)& (0+255),f,b
 13875   006124  33CD               	rrcf	___fltol@f1& (0+255),f,b
 13876   006126                     
 13877                           ; BSR set to: 0
 13878   006126  3E45               	incfsz	___fltol@exp1^0,f,c
 13879   006128  EF8E  F030         	goto	l6651
 13880   00612C  EFB0  F030         	goto	l6665
 13881   006130                     l6655:
 13882                           
 13883                           ; BSR set to: 0
 13884   006130  0E1F               	movlw	31
 13885   006132  6445               	cpfsgt	___fltol@exp1^0,c
 13886   006134  EF9E  F030         	goto	u6481
 13887   006138  EFA0  F030         	goto	u6480
 13888   00613C                     u6481:
 13889   00613C  EFA8  F030         	goto	l6663
 13890   006140                     u6480:
 13891   006140  EF51  F030         	goto	l6631
 13892   006144                     l6661:
 13893                           
 13894                           ; BSR set to: 0
 13895   006144  90D8               	bcf	status,0,c
 13896   006146  37CD               	rlcf	___fltol@f1& (0+255),f,b
 13897   006148  37CE               	rlcf	(___fltol@f1+1)& (0+255),f,b
 13898   00614A  37CF               	rlcf	(___fltol@f1+2)& (0+255),f,b
 13899   00614C  37D0               	rlcf	(___fltol@f1+3)& (0+255),f,b
 13900   00614E  0645               	decf	___fltol@exp1^0,f,c
 13901   006150                     l6663:
 13902                           
 13903                           ; BSR set to: 0
 13904   006150  5045               	movf	___fltol@exp1^0,w,c
 13905   006152  A4D8               	btfss	status,2,c
 13906   006154  EFAE  F030         	goto	u6491
 13907   006158  EFB0  F030         	goto	u6490
 13908   00615C                     u6491:
 13909   00615C  EFA2  F030         	goto	l6661
 13910   006160                     u6490:
 13911   006160                     l6665:
 13912                           
 13913                           ; BSR set to: 0
 13914   006160  5044               	movf	___fltol@sign1^0,w,c
 13915   006162  B4D8               	btfsc	status,2,c
 13916   006164  EFB6  F030         	goto	u6501
 13917   006168  EFB8  F030         	goto	u6500
 13918   00616C                     u6501:
 13919   00616C  EFC0  F030         	goto	l6669
 13920   006170                     u6500:
 13921   006170                     
 13922                           ; BSR set to: 0
 13923   006170  1FD0               	comf	(___fltol@f1+3)& (0+255),f,b
 13924   006172  1FCF               	comf	(___fltol@f1+2)& (0+255),f,b
 13925   006174  1FCE               	comf	(___fltol@f1+1)& (0+255),f,b
 13926   006176  6DCD               	negf	___fltol@f1& (0+255),b
 13927   006178  0E00               	movlw	0
 13928   00617A  23CE               	addwfc	(___fltol@f1+1)& (0+255),f,b
 13929   00617C  23CF               	addwfc	(___fltol@f1+2)& (0+255),f,b
 13930   00617E  23D0               	addwfc	(___fltol@f1+3)& (0+255),f,b
 13931   006180                     l6669:
 13932                           
 13933                           ; BSR set to: 0
 13934   006180  C0CD  F0CD         	movff	___fltol@f1,?___fltol
 13935   006184  C0CE  F0CE         	movff	___fltol@f1+1,?___fltol+1
 13936   006188  C0CF  F0CF         	movff	___fltol@f1+2,?___fltol+2
 13937   00618C  C0D0  F0D0         	movff	___fltol@f1+3,?___fltol+3
 13938   006190                     l586:
 13939                           
 13940                           ; BSR set to: 0
 13941   006190  0012               	return		;funcret
 13942   006192                     __end_of___fltol:
 13943                           	callstack 0
 13944                           
 13945 ;; *************** function ___flsub *****************
 13946 ;; Defined at:
 13947 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13948 ;; Parameters:    Size  Location     Type
 13949 ;;  b               4    0[BANK0 ] long 
 13950 ;;  a               4    4[BANK0 ] long 
 13951 ;; Auto vars:     Size  Location     Type
 13952 ;;		None
 13953 ;; Return value:  Size  Location     Type
 13954 ;;                  4    0[BANK0 ] long 
 13955 ;; Registers used:
 13956 ;;		wreg, status,2, status,0, cstack
 13957 ;; Tracked objects:
 13958 ;;		On entry : 0/0
 13959 ;;		On exit  : 0/0
 13960 ;;		Unchanged: 0/0
 13961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13962 ;;      Params:         0       8       0       0       0       0       0       0       0
 13963 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13964 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13965 ;;      Totals:         0       8       0       0       0       0       0       0       0
 13966 ;;Total ram usage:        8 bytes
 13967 ;; Hardware stack levels used: 1
 13968 ;; Hardware stack levels required when called: 3
 13969 ;; This function calls:
 13970 ;;		___fladd
 13971 ;; This function is called by:
 13972 ;;		_main
 13973 ;;		_FFT
 13974 ;;		_normalize
 13975 ;;		_cosf
 13976 ;;		___rem_pio2f
 13977 ;;		_logf
 13978 ;;		_efgtoa
 13979 ;;		_sinf
 13980 ;; This function uses a non-reentrant model
 13981 ;;
 13982                           
 13983                           	psect	text47
 13984   006B76                     __ptext47:
 13985                           	callstack 0
 13986   006B76                     ___flsub:
 13987                           	callstack 22
 13988   006B76  0E00               	movlw	0
 13989   006B78  0100               	movlb	0	; () banked
 13990   006B7A  1B64               	xorwf	___flsub@a& (0+255),f,b
 13991   006B7C  0E00               	movlw	0
 13992   006B7E  1B65               	xorwf	(___flsub@a+1)& (0+255),f,b
 13993   006B80  0E00               	movlw	0
 13994   006B82  1B66               	xorwf	(___flsub@a+2)& (0+255),f,b
 13995   006B84  0E80               	movlw	128
 13996   006B86  1B67               	xorwf	(___flsub@a+3)& (0+255),f,b
 13997   006B88                     
 13998                           ; BSR set to: 0
 13999   006B88  C060  F034         	movff	___flsub@b,___fladd@b
 14000   006B8C  C061  F035         	movff	___flsub@b+1,___fladd@b+1
 14001   006B90  C062  F036         	movff	___flsub@b+2,___fladd@b+2
 14002   006B94  C063  F037         	movff	___flsub@b+3,___fladd@b+3
 14003   006B98  C064  F038         	movff	___flsub@a,___fladd@a
 14004   006B9C  C065  F039         	movff	___flsub@a+1,___fladd@a+1
 14005   006BA0  C066  F03A         	movff	___flsub@a+2,___fladd@a+2
 14006   006BA4  C067  F03B         	movff	___flsub@a+3,___fladd@a+3
 14007   006BA8  ECD8  F01D         	call	___fladd	;wreg free
 14008   006BAC  C034  F060         	movff	?___fladd,?___flsub
 14009   006BB0  C035  F061         	movff	?___fladd+1,?___flsub+1
 14010   006BB4  C036  F062         	movff	?___fladd+2,?___flsub+2
 14011   006BB8  C037  F063         	movff	?___fladd+3,?___flsub+3
 14012   006BBC  0012               	return		;funcret
 14013   006BBE                     __end_of___flsub:
 14014                           	callstack 0
 14015                           
 14016 ;; *************** function ___flneg *****************
 14017 ;; Defined at:
 14018 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
 14019 ;; Parameters:    Size  Location     Type
 14020 ;;  f1              4   33[BANK0 ] long 
 14021 ;; Auto vars:     Size  Location     Type
 14022 ;;		None
 14023 ;; Return value:  Size  Location     Type
 14024 ;;                  4   33[BANK0 ] long 
 14025 ;; Registers used:
 14026 ;;		wreg, status,2, status,0
 14027 ;; Tracked objects:
 14028 ;;		On entry : 0/0
 14029 ;;		On exit  : 0/0
 14030 ;;		Unchanged: 0/0
 14031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14032 ;;      Params:         0       4       0       0       0       0       0       0       0
 14033 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14034 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14035 ;;      Totals:         0       4       0       0       0       0       0       0       0
 14036 ;;Total ram usage:        4 bytes
 14037 ;; Hardware stack levels used: 1
 14038 ;; Hardware stack levels required when called: 2
 14039 ;; This function calls:
 14040 ;;		Nothing
 14041 ;; This function is called by:
 14042 ;;		_FFT
 14043 ;;		_cosf
 14044 ;;		___rem_pio2f
 14045 ;;		_efgtoa
 14046 ;;		_sinf
 14047 ;; This function uses a non-reentrant model
 14048 ;;
 14049                           
 14050                           	psect	text48
 14051   006CC2                     __ptext48:
 14052                           	callstack 0
 14053   006CC2                     ___flneg:
 14054                           	callstack 23
 14055   006CC2  0100               	movlb	0	; () banked
 14056   006CC4  5181               	movf	___flneg@f1& (0+255),w,b
 14057   006CC6  1182               	iorwf	(___flneg@f1+1)& (0+255),w,b
 14058   006CC8  1183               	iorwf	(___flneg@f1+2)& (0+255),w,b
 14059   006CCA  1184               	iorwf	(___flneg@f1+3)& (0+255),w,b
 14060   006CCC  B4D8               	btfsc	status,2,c
 14061   006CCE  EF6B  F036         	goto	u6431
 14062   006CD2  EF6D  F036         	goto	u6430
 14063   006CD6                     u6431:
 14064   006CD6  EF75  F036         	goto	l6625
 14065   006CDA                     u6430:
 14066   006CDA                     
 14067                           ; BSR set to: 0
 14068   006CDA  0E00               	movlw	0
 14069   006CDC  1B81               	xorwf	___flneg@f1& (0+255),f,b
 14070   006CDE  0E00               	movlw	0
 14071   006CE0  1B82               	xorwf	(___flneg@f1+1)& (0+255),f,b
 14072   006CE2  0E00               	movlw	0
 14073   006CE4  1B83               	xorwf	(___flneg@f1+2)& (0+255),f,b
 14074   006CE6  0E80               	movlw	128
 14075   006CE8  1B84               	xorwf	(___flneg@f1+3)& (0+255),f,b
 14076   006CEA                     l6625:
 14077                           
 14078                           ; BSR set to: 0
 14079   006CEA  C081  F081         	movff	___flneg@f1,?___flneg
 14080   006CEE  C082  F082         	movff	___flneg@f1+1,?___flneg+1
 14081   006CF2  C083  F083         	movff	___flneg@f1+2,?___flneg+2
 14082   006CF6  C084  F084         	movff	___flneg@f1+3,?___flneg+3
 14083   006CFA                     
 14084                           ; BSR set to: 0
 14085   006CFA  0012               	return		;funcret
 14086   006CFC                     __end_of___flneg:
 14087                           	callstack 0
 14088                           
 14089 ;; *************** function ___cosdf *****************
 14090 ;; Defined at:
 14091 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__cosdf.c"
 14092 ;; Parameters:    Size  Location     Type
 14093 ;;  x               4    0[BANK0 ] long 
 14094 ;; Auto vars:     Size  Location     Type
 14095 ;;  z               4   24[BANK0 ] long 
 14096 ;;  w               4   20[BANK0 ] long 
 14097 ;;  r               4    4[BANK0 ] long 
 14098 ;; Return value:  Size  Location     Type
 14099 ;;                  4    0[BANK0 ] float 
 14100 ;; Registers used:
 14101 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14102 ;; Tracked objects:
 14103 ;;		On entry : 0/0
 14104 ;;		On exit  : 0/0
 14105 ;;		Unchanged: 0/0
 14106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14107 ;;      Params:         0       4       0       0       0       0       0       0       0
 14108 ;;      Locals:         0      24       0       0       0       0       0       0       0
 14109 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14110 ;;      Totals:         0      28       0       0       0       0       0       0       0
 14111 ;;Total ram usage:       28 bytes
 14112 ;; Hardware stack levels used: 1
 14113 ;; Hardware stack levels required when called: 3
 14114 ;; This function calls:
 14115 ;;		___fladd
 14116 ;;		___flmul
 14117 ;; This function is called by:
 14118 ;;		_cosf
 14119 ;;		_sinf
 14120 ;; This function uses a non-reentrant model
 14121 ;;
 14122                           
 14123                           	psect	text49
 14124   0059B2                     __ptext49:
 14125                           	callstack 0
 14126   0059B2                     ___cosdf:
 14127                           	callstack 25
 14128   0059B2  C060  F01B         	movff	___cosdf@x,___flmul@b
 14129   0059B6  C061  F01C         	movff	___cosdf@x+1,___flmul@b+1
 14130   0059BA  C062  F01D         	movff	___cosdf@x+2,___flmul@b+2
 14131   0059BE  C063  F01E         	movff	___cosdf@x+3,___flmul@b+3
 14132   0059C2  C060  F01F         	movff	___cosdf@x,___flmul@a
 14133   0059C6  C061  F020         	movff	___cosdf@x+1,___flmul@a+1
 14134   0059CA  C062  F021         	movff	___cosdf@x+2,___flmul@a+2
 14135   0059CE  C063  F022         	movff	___cosdf@x+3,___flmul@a+3
 14136   0059D2  EC80  F022         	call	___flmul	;wreg free
 14137   0059D6  C01B  F078         	movff	?___flmul,___cosdf@z
 14138   0059DA  C01C  F079         	movff	?___flmul+1,___cosdf@z+1
 14139   0059DE  C01D  F07A         	movff	?___flmul+2,___cosdf@z+2
 14140   0059E2  C01E  F07B         	movff	?___flmul+3,___cosdf@z+3
 14141   0059E6  C078  F01B         	movff	___cosdf@z,___flmul@b
 14142   0059EA  C079  F01C         	movff	___cosdf@z+1,___flmul@b+1
 14143   0059EE  C07A  F01D         	movff	___cosdf@z+2,___flmul@b+2
 14144   0059F2  C07B  F01E         	movff	___cosdf@z+3,___flmul@b+3
 14145   0059F6  C078  F01F         	movff	___cosdf@z,___flmul@a
 14146   0059FA  C079  F020         	movff	___cosdf@z+1,___flmul@a+1
 14147   0059FE  C07A  F021         	movff	___cosdf@z+2,___flmul@a+2
 14148   005A02  C07B  F022         	movff	___cosdf@z+3,___flmul@a+3
 14149   005A06  EC80  F022         	call	___flmul	;wreg free
 14150   005A0A  C01B  F074         	movff	?___flmul,___cosdf@w
 14151   005A0E  C01C  F075         	movff	?___flmul+1,___cosdf@w+1
 14152   005A12  C01D  F076         	movff	?___flmul+2,___cosdf@w+2
 14153   005A16  C01E  F077         	movff	?___flmul+3,___cosdf@w+3
 14154   005A1A  0E17               	movlw	23
 14155   005A1C  6E1F               	movwf	___flmul@a^0,c
 14156   005A1E  0E9A               	movlw	154
 14157   005A20  6E20               	movwf	(___flmul@a+1)^0,c
 14158   005A22  0ECC               	movlw	204
 14159   005A24  6E21               	movwf	(___flmul@a+2)^0,c
 14160   005A26  0E37               	movlw	55
 14161   005A28  6E22               	movwf	(___flmul@a+3)^0,c
 14162   005A2A  C078  F01B         	movff	___cosdf@z,___flmul@b
 14163   005A2E  C079  F01C         	movff	___cosdf@z+1,___flmul@b+1
 14164   005A32  C07A  F01D         	movff	___cosdf@z+2,___flmul@b+2
 14165   005A36  C07B  F01E         	movff	___cosdf@z+3,___flmul@b+3
 14166   005A3A  EC80  F022         	call	___flmul	;wreg free
 14167   005A3E  C01B  F034         	movff	?___flmul,___fladd@b
 14168   005A42  C01C  F035         	movff	?___flmul+1,___fladd@b+1
 14169   005A46  C01D  F036         	movff	?___flmul+2,___fladd@b+2
 14170   005A4A  C01E  F037         	movff	?___flmul+3,___fladd@b+3
 14171   005A4E  0E3F               	movlw	63
 14172   005A50  6E38               	movwf	___fladd@a^0,c
 14173   005A52  0E04               	movlw	4
 14174   005A54  6E39               	movwf	(___fladd@a+1)^0,c
 14175   005A56  0EB6               	movlw	182
 14176   005A58  6E3A               	movwf	(___fladd@a+2)^0,c
 14177   005A5A  0EBA               	movlw	186
 14178   005A5C  6E3B               	movwf	(___fladd@a+3)^0,c
 14179   005A5E  ECD8  F01D         	call	___fladd	;wreg free
 14180   005A62  C034  F064         	movff	?___fladd,___cosdf@r
 14181   005A66  C035  F065         	movff	?___fladd+1,___cosdf@r+1
 14182   005A6A  C036  F066         	movff	?___fladd+2,___cosdf@r+2
 14183   005A6E  C037  F067         	movff	?___fladd+3,___cosdf@r+3
 14184   005A72  0E00               	movlw	0
 14185   005A74  6E38               	movwf	___fladd@a^0,c
 14186   005A76  0E00               	movlw	0
 14187   005A78  6E39               	movwf	(___fladd@a+1)^0,c
 14188   005A7A  0E80               	movlw	128
 14189   005A7C  6E3A               	movwf	(___fladd@a+2)^0,c
 14190   005A7E  0E3F               	movlw	63
 14191   005A80  6E3B               	movwf	(___fladd@a+3)^0,c
 14192   005A82  0E00               	movlw	0
 14193   005A84  6E1F               	movwf	___flmul@a^0,c
 14194   005A86  0E00               	movlw	0
 14195   005A88  6E20               	movwf	(___flmul@a+1)^0,c
 14196   005A8A  0E00               	movlw	0
 14197   005A8C  6E21               	movwf	(___flmul@a+2)^0,c
 14198   005A8E  0EBF               	movlw	191
 14199   005A90  6E22               	movwf	(___flmul@a+3)^0,c
 14200   005A92  C078  F01B         	movff	___cosdf@z,___flmul@b
 14201   005A96  C079  F01C         	movff	___cosdf@z+1,___flmul@b+1
 14202   005A9A  C07A  F01D         	movff	___cosdf@z+2,___flmul@b+2
 14203   005A9E  C07B  F01E         	movff	___cosdf@z+3,___flmul@b+3
 14204   005AA2  EC80  F022         	call	___flmul	;wreg free
 14205   005AA6  C01B  F034         	movff	?___flmul,___fladd@b
 14206   005AAA  C01C  F035         	movff	?___flmul+1,___fladd@b+1
 14207   005AAE  C01D  F036         	movff	?___flmul+2,___fladd@b+2
 14208   005AB2  C01E  F037         	movff	?___flmul+3,___fladd@b+3
 14209   005AB6  ECD8  F01D         	call	___fladd	;wreg free
 14210   005ABA  C034  F068         	movff	?___fladd,___cosdf$1798
 14211   005ABE  C035  F069         	movff	?___fladd+1,___cosdf$1798+1
 14212   005AC2  C036  F06A         	movff	?___fladd+2,___cosdf$1798+2
 14213   005AC6  C037  F06B         	movff	?___fladd+3,___cosdf$1798+3
 14214   005ACA  C078  F01F         	movff	___cosdf@z,___flmul@a
 14215   005ACE  C079  F020         	movff	___cosdf@z+1,___flmul@a+1
 14216   005AD2  C07A  F021         	movff	___cosdf@z+2,___flmul@a+2
 14217   005AD6  C07B  F022         	movff	___cosdf@z+3,___flmul@a+3
 14218   005ADA  C074  F01B         	movff	___cosdf@w,___flmul@b
 14219   005ADE  C075  F01C         	movff	___cosdf@w+1,___flmul@b+1
 14220   005AE2  C076  F01D         	movff	___cosdf@w+2,___flmul@b+2
 14221   005AE6  C077  F01E         	movff	___cosdf@w+3,___flmul@b+3
 14222   005AEA  EC80  F022         	call	___flmul	;wreg free
 14223   005AEE  C01B  F06C         	movff	?___flmul,___cosdf$1799
 14224   005AF2  C01C  F06D         	movff	?___flmul+1,___cosdf$1799+1
 14225   005AF6  C01D  F06E         	movff	?___flmul+2,___cosdf$1799+2
 14226   005AFA  C01E  F06F         	movff	?___flmul+3,___cosdf$1799+3
 14227   005AFE  0E9F               	movlw	159
 14228   005B00  6E1F               	movwf	___flmul@a^0,c
 14229   005B02  0EAA               	movlw	170
 14230   005B04  6E20               	movwf	(___flmul@a+1)^0,c
 14231   005B06  0E2A               	movlw	42
 14232   005B08  6E21               	movwf	(___flmul@a+2)^0,c
 14233   005B0A  0E3D               	movlw	61
 14234   005B0C  6E22               	movwf	(___flmul@a+3)^0,c
 14235   005B0E  C074  F01B         	movff	___cosdf@w,___flmul@b
 14236   005B12  C075  F01C         	movff	___cosdf@w+1,___flmul@b+1
 14237   005B16  C076  F01D         	movff	___cosdf@w+2,___flmul@b+2
 14238   005B1A  C077  F01E         	movff	___cosdf@w+3,___flmul@b+3
 14239   005B1E  EC80  F022         	call	___flmul	;wreg free
 14240   005B22  C01B  F038         	movff	?___flmul,___fladd@a
 14241   005B26  C01C  F039         	movff	?___flmul+1,___fladd@a+1
 14242   005B2A  C01D  F03A         	movff	?___flmul+2,___fladd@a+2
 14243   005B2E  C01E  F03B         	movff	?___flmul+3,___fladd@a+3
 14244   005B32  C068  F034         	movff	___cosdf$1798,___fladd@b
 14245   005B36  C069  F035         	movff	___cosdf$1798+1,___fladd@b+1
 14246   005B3A  C06A  F036         	movff	___cosdf$1798+2,___fladd@b+2
 14247   005B3E  C06B  F037         	movff	___cosdf$1798+3,___fladd@b+3
 14248   005B42  ECD8  F01D         	call	___fladd	;wreg free
 14249   005B46  C034  F070         	movff	?___fladd,___cosdf$1800
 14250   005B4A  C035  F071         	movff	?___fladd+1,___cosdf$1800+1
 14251   005B4E  C036  F072         	movff	?___fladd+2,___cosdf$1800+2
 14252   005B52  C037  F073         	movff	?___fladd+3,___cosdf$1800+3
 14253   005B56  C070  F034         	movff	___cosdf$1800,___fladd@b
 14254   005B5A  C071  F035         	movff	___cosdf$1800+1,___fladd@b+1
 14255   005B5E  C072  F036         	movff	___cosdf$1800+2,___fladd@b+2
 14256   005B62  C073  F037         	movff	___cosdf$1800+3,___fladd@b+3
 14257   005B66  C064  F01F         	movff	___cosdf@r,___flmul@a
 14258   005B6A  C065  F020         	movff	___cosdf@r+1,___flmul@a+1
 14259   005B6E  C066  F021         	movff	___cosdf@r+2,___flmul@a+2
 14260   005B72  C067  F022         	movff	___cosdf@r+3,___flmul@a+3
 14261   005B76  C06C  F01B         	movff	___cosdf$1799,___flmul@b
 14262   005B7A  C06D  F01C         	movff	___cosdf$1799+1,___flmul@b+1
 14263   005B7E  C06E  F01D         	movff	___cosdf$1799+2,___flmul@b+2
 14264   005B82  C06F  F01E         	movff	___cosdf$1799+3,___flmul@b+3
 14265   005B86  EC80  F022         	call	___flmul	;wreg free
 14266   005B8A  C01B  F038         	movff	?___flmul,___fladd@a
 14267   005B8E  C01C  F039         	movff	?___flmul+1,___fladd@a+1
 14268   005B92  C01D  F03A         	movff	?___flmul+2,___fladd@a+2
 14269   005B96  C01E  F03B         	movff	?___flmul+3,___fladd@a+3
 14270   005B9A  ECD8  F01D         	call	___fladd	;wreg free
 14271   005B9E  C034  F060         	movff	?___fladd,?___cosdf
 14272   005BA2  C035  F061         	movff	?___fladd+1,?___cosdf+1
 14273   005BA6  C036  F062         	movff	?___fladd+2,?___cosdf+2
 14274   005BAA  C037  F063         	movff	?___fladd+3,?___cosdf+3
 14275   005BAE  0012               	return		;funcret
 14276   005BB0                     __end_of___cosdf:
 14277                           	callstack 0
 14278                           
 14279 ;; *************** function ___flmul *****************
 14280 ;; Defined at:
 14281 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 14282 ;; Parameters:    Size  Location     Type
 14283 ;;  b               4   26[COMRAM] float 
 14284 ;;  a               4   30[COMRAM] float 
 14285 ;; Auto vars:     Size  Location     Type
 14286 ;;  prod            4   45[COMRAM] struct .
 14287 ;;  grs             4   40[COMRAM] unsigned long 
 14288 ;;  temp            2   49[COMRAM] struct .
 14289 ;;  bexp            1   44[COMRAM] unsigned char 
 14290 ;;  aexp            1   39[COMRAM] unsigned char 
 14291 ;;  sign            1   38[COMRAM] unsigned char 
 14292 ;; Return value:  Size  Location     Type
 14293 ;;                  4   26[COMRAM] unsigned char 
 14294 ;; Registers used:
 14295 ;;		wreg, status,2, status,0, prodl, prodh
 14296 ;; Tracked objects:
 14297 ;;		On entry : 0/0
 14298 ;;		On exit  : 0/0
 14299 ;;		Unchanged: 0/0
 14300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14301 ;;      Params:         8       0       0       0       0       0       0       0       0
 14302 ;;      Locals:        13       0       0       0       0       0       0       0       0
 14303 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14304 ;;      Totals:        25       0       0       0       0       0       0       0       0
 14305 ;;Total ram usage:       25 bytes
 14306 ;; Hardware stack levels used: 1
 14307 ;; Hardware stack levels required when called: 2
 14308 ;; This function calls:
 14309 ;;		Nothing
 14310 ;; This function is called by:
 14311 ;;		_main
 14312 ;;		_verifRes
 14313 ;;		_FFT
 14314 ;;		___cosdf
 14315 ;;		___rem_pio2f
 14316 ;;		___sindf
 14317 ;;		_logf
 14318 ;;		_efgtoa
 14319 ;;		_sqrtf
 14320 ;; This function uses a non-reentrant model
 14321 ;;
 14322                           
 14323                           	psect	text50
 14324   004500                     __ptext50:
 14325                           	callstack 0
 14326   004500                     ___flmul:
 14327                           	callstack 23
 14328   004500  501E               	movf	(___flmul@b+3)^0,w,c
 14329   004502  0B80               	andlw	128
 14330   004504  6E27               	movwf	___flmul@sign^0,c
 14331   004506  501E               	movf	(___flmul@b+3)^0,w,c
 14332   004508  241E               	addwf	(___flmul@b+3)^0,w,c
 14333   00450A  6E2D               	movwf	___flmul@bexp^0,c
 14334   00450C  AE1D               	btfss	(___flmul@b+2)^0,7,c
 14335   00450E  EF8B  F022         	goto	u6161
 14336   004512  EF8D  F022         	goto	u6160
 14337   004516                     u6161:
 14338   004516  EF8E  F022         	goto	l6453
 14339   00451A                     u6160:
 14340   00451A  802D               	bsf	___flmul@bexp^0,0,c
 14341   00451C                     l6453:
 14342   00451C  502D               	movf	___flmul@bexp^0,w,c
 14343   00451E  B4D8               	btfsc	status,2,c
 14344   004520  EF94  F022         	goto	u6171
 14345   004524  EF96  F022         	goto	u6170
 14346   004528                     u6171:
 14347   004528  EFA9  F022         	goto	l6461
 14348   00452C                     u6170:
 14349   00452C  282D               	incf	___flmul@bexp^0,w,c
 14350   00452E  A4D8               	btfss	status,2,c
 14351   004530  EF9C  F022         	goto	u6181
 14352   004534  EF9E  F022         	goto	u6180
 14353   004538                     u6181:
 14354   004538  EFA6  F022         	goto	l6459
 14355   00453C                     u6180:
 14356   00453C  0E00               	movlw	0
 14357   00453E  6E1B               	movwf	___flmul@b^0,c
 14358   004540  0E00               	movlw	0
 14359   004542  6E1C               	movwf	(___flmul@b+1)^0,c
 14360   004544  0E00               	movlw	0
 14361   004546  6E1D               	movwf	(___flmul@b+2)^0,c
 14362   004548  0E00               	movlw	0
 14363   00454A  6E1E               	movwf	(___flmul@b+3)^0,c
 14364   00454C                     l6459:
 14365   00454C  8E1D               	bsf	(___flmul@b+2)^0,7,c
 14366   00454E  EFB1  F022         	goto	l6463
 14367   004552                     l6461:
 14368   004552  0E00               	movlw	0
 14369   004554  6E1B               	movwf	___flmul@b^0,c
 14370   004556  0E00               	movlw	0
 14371   004558  6E1C               	movwf	(___flmul@b+1)^0,c
 14372   00455A  0E00               	movlw	0
 14373   00455C  6E1D               	movwf	(___flmul@b+2)^0,c
 14374   00455E  0E00               	movlw	0
 14375   004560  6E1E               	movwf	(___flmul@b+3)^0,c
 14376   004562                     l6463:
 14377   004562  5022               	movf	(___flmul@a+3)^0,w,c
 14378   004564  0B80               	andlw	128
 14379   004566  1A27               	xorwf	___flmul@sign^0,f,c
 14380   004568  5022               	movf	(___flmul@a+3)^0,w,c
 14381   00456A  2422               	addwf	(___flmul@a+3)^0,w,c
 14382   00456C  6E28               	movwf	___flmul@aexp^0,c
 14383   00456E  AE21               	btfss	(___flmul@a+2)^0,7,c
 14384   004570  EFBC  F022         	goto	u6191
 14385   004574  EFBE  F022         	goto	u6190
 14386   004578                     u6191:
 14387   004578  EFBF  F022         	goto	l6471
 14388   00457C                     u6190:
 14389   00457C  8028               	bsf	___flmul@aexp^0,0,c
 14390   00457E                     l6471:
 14391   00457E  5028               	movf	___flmul@aexp^0,w,c
 14392   004580  B4D8               	btfsc	status,2,c
 14393   004582  EFC5  F022         	goto	u6201
 14394   004586  EFC7  F022         	goto	u6200
 14395   00458A                     u6201:
 14396   00458A  EFDA  F022         	goto	l6479
 14397   00458E                     u6200:
 14398   00458E  2828               	incf	___flmul@aexp^0,w,c
 14399   004590  A4D8               	btfss	status,2,c
 14400   004592  EFCD  F022         	goto	u6211
 14401   004596  EFCF  F022         	goto	u6210
 14402   00459A                     u6211:
 14403   00459A  EFD7  F022         	goto	l6477
 14404   00459E                     u6210:
 14405   00459E  0E00               	movlw	0
 14406   0045A0  6E1F               	movwf	___flmul@a^0,c
 14407   0045A2  0E00               	movlw	0
 14408   0045A4  6E20               	movwf	(___flmul@a+1)^0,c
 14409   0045A6  0E00               	movlw	0
 14410   0045A8  6E21               	movwf	(___flmul@a+2)^0,c
 14411   0045AA  0E00               	movlw	0
 14412   0045AC  6E22               	movwf	(___flmul@a+3)^0,c
 14413   0045AE                     l6477:
 14414   0045AE  8E21               	bsf	(___flmul@a+2)^0,7,c
 14415   0045B0  EFE2  F022         	goto	l903
 14416   0045B4                     l6479:
 14417   0045B4  0E00               	movlw	0
 14418   0045B6  6E1F               	movwf	___flmul@a^0,c
 14419   0045B8  0E00               	movlw	0
 14420   0045BA  6E20               	movwf	(___flmul@a+1)^0,c
 14421   0045BC  0E00               	movlw	0
 14422   0045BE  6E21               	movwf	(___flmul@a+2)^0,c
 14423   0045C0  0E00               	movlw	0
 14424   0045C2  6E22               	movwf	(___flmul@a+3)^0,c
 14425   0045C4                     l903:
 14426   0045C4  5028               	movf	___flmul@aexp^0,w,c
 14427   0045C6  B4D8               	btfsc	status,2,c
 14428   0045C8  EFE8  F022         	goto	u6221
 14429   0045CC  EFEA  F022         	goto	u6220
 14430   0045D0                     u6221:
 14431   0045D0  EFF2  F022         	goto	l6483
 14432   0045D4                     u6220:
 14433   0045D4  502D               	movf	___flmul@bexp^0,w,c
 14434   0045D6  A4D8               	btfss	status,2,c
 14435   0045D8  EFF0  F022         	goto	u6231
 14436   0045DC  EFF2  F022         	goto	u6230
 14437   0045E0                     u6231:
 14438   0045E0  EFFC  F022         	goto	l6487
 14439   0045E4                     u6230:
 14440   0045E4                     l6483:
 14441   0045E4  0E00               	movlw	0
 14442   0045E6  6E1B               	movwf	?___flmul^0,c
 14443   0045E8  0E00               	movlw	0
 14444   0045EA  6E1C               	movwf	(?___flmul+1)^0,c
 14445   0045EC  0E00               	movlw	0
 14446   0045EE  6E1D               	movwf	(?___flmul+2)^0,c
 14447   0045F0  0E00               	movlw	0
 14448   0045F2  6E1E               	movwf	(?___flmul+3)^0,c
 14449   0045F4  EF94  F024         	goto	l907
 14450   0045F8                     l6487:
 14451   0045F8  5021               	movf	(___flmul@a+2)^0,w,c
 14452   0045FA  021B               	mulwf	___flmul@b^0,c
 14453   0045FC  CFF3 F032          	movff	prodl,___flmul@temp
 14454   004600  CFF4 F033          	movff	prodh,___flmul@temp+1
 14455   004604  5032               	movf	___flmul@temp^0,w,c
 14456   004606  6E29               	movwf	___flmul@grs^0,c
 14457   004608  6A2A               	clrf	(___flmul@grs+1)^0,c
 14458   00460A  6A2B               	clrf	(___flmul@grs+2)^0,c
 14459   00460C  6A2C               	clrf	(___flmul@grs+3)^0,c
 14460   00460E  5033               	movf	(___flmul@temp+1)^0,w,c
 14461   004610  6E2E               	movwf	___flmul@prod^0,c
 14462   004612  6A2F               	clrf	(___flmul@prod+1)^0,c
 14463   004614  6A30               	clrf	(___flmul@prod+2)^0,c
 14464   004616  6A31               	clrf	(___flmul@prod+3)^0,c
 14465   004618  5020               	movf	(___flmul@a+1)^0,w,c
 14466   00461A  021C               	mulwf	(___flmul@b+1)^0,c
 14467   00461C  CFF3 F032          	movff	prodl,___flmul@temp
 14468   004620  CFF4 F033          	movff	prodh,___flmul@temp+1
 14469   004624  5032               	movf	___flmul@temp^0,w,c
 14470   004626  2629               	addwf	___flmul@grs^0,f,c
 14471   004628  0E00               	movlw	0
 14472   00462A  222A               	addwfc	(___flmul@grs+1)^0,f,c
 14473   00462C  222B               	addwfc	(___flmul@grs+2)^0,f,c
 14474   00462E  222C               	addwfc	(___flmul@grs+3)^0,f,c
 14475   004630  5033               	movf	(___flmul@temp+1)^0,w,c
 14476   004632  262E               	addwf	___flmul@prod^0,f,c
 14477   004634  0E00               	movlw	0
 14478   004636  222F               	addwfc	(___flmul@prod+1)^0,f,c
 14479   004638  2230               	addwfc	(___flmul@prod+2)^0,f,c
 14480   00463A  2231               	addwfc	(___flmul@prod+3)^0,f,c
 14481   00463C  501F               	movf	___flmul@a^0,w,c
 14482   00463E  021D               	mulwf	(___flmul@b+2)^0,c
 14483   004640  CFF3 F032          	movff	prodl,___flmul@temp
 14484   004644  CFF4 F033          	movff	prodh,___flmul@temp+1
 14485   004648  5032               	movf	___flmul@temp^0,w,c
 14486   00464A  2629               	addwf	___flmul@grs^0,f,c
 14487   00464C  0E00               	movlw	0
 14488   00464E  222A               	addwfc	(___flmul@grs+1)^0,f,c
 14489   004650  222B               	addwfc	(___flmul@grs+2)^0,f,c
 14490   004652  222C               	addwfc	(___flmul@grs+3)^0,f,c
 14491   004654  5033               	movf	(___flmul@temp+1)^0,w,c
 14492   004656  262E               	addwf	___flmul@prod^0,f,c
 14493   004658  0E00               	movlw	0
 14494   00465A  222F               	addwfc	(___flmul@prod+1)^0,f,c
 14495   00465C  2230               	addwfc	(___flmul@prod+2)^0,f,c
 14496   00465E  2231               	addwfc	(___flmul@prod+3)^0,f,c
 14497   004660  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 14498   004664  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 14499   004668  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 14500   00466C  6A29               	clrf	___flmul@grs^0,c
 14501   00466E  501F               	movf	___flmul@a^0,w,c
 14502   004670  021C               	mulwf	(___flmul@b+1)^0,c
 14503   004672  CFF3 F032          	movff	prodl,___flmul@temp
 14504   004676  CFF4 F033          	movff	prodh,___flmul@temp+1
 14505   00467A  5032               	movf	___flmul@temp^0,w,c
 14506   00467C  2629               	addwf	___flmul@grs^0,f,c
 14507   00467E  5033               	movf	(___flmul@temp+1)^0,w,c
 14508   004680  222A               	addwfc	(___flmul@grs+1)^0,f,c
 14509   004682  0E00               	movlw	0
 14510   004684  222B               	addwfc	(___flmul@grs+2)^0,f,c
 14511   004686  0E00               	movlw	0
 14512   004688  222C               	addwfc	(___flmul@grs+3)^0,f,c
 14513   00468A  5020               	movf	(___flmul@a+1)^0,w,c
 14514   00468C  021B               	mulwf	___flmul@b^0,c
 14515   00468E  CFF3 F032          	movff	prodl,___flmul@temp
 14516   004692  CFF4 F033          	movff	prodh,___flmul@temp+1
 14517   004696  5032               	movf	___flmul@temp^0,w,c
 14518   004698  2629               	addwf	___flmul@grs^0,f,c
 14519   00469A  5033               	movf	(___flmul@temp+1)^0,w,c
 14520   00469C  222A               	addwfc	(___flmul@grs+1)^0,f,c
 14521   00469E  0E00               	movlw	0
 14522   0046A0  222B               	addwfc	(___flmul@grs+2)^0,f,c
 14523   0046A2  0E00               	movlw	0
 14524   0046A4  222C               	addwfc	(___flmul@grs+3)^0,f,c
 14525   0046A6  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 14526   0046AA  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 14527   0046AE  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 14528   0046B2  6A29               	clrf	___flmul@grs^0,c
 14529   0046B4  501F               	movf	___flmul@a^0,w,c
 14530   0046B6  021B               	mulwf	___flmul@b^0,c
 14531   0046B8  CFF3 F032          	movff	prodl,___flmul@temp
 14532   0046BC  CFF4 F033          	movff	prodh,___flmul@temp+1
 14533   0046C0  5032               	movf	___flmul@temp^0,w,c
 14534   0046C2  2629               	addwf	___flmul@grs^0,f,c
 14535   0046C4  5033               	movf	(___flmul@temp+1)^0,w,c
 14536   0046C6  222A               	addwfc	(___flmul@grs+1)^0,f,c
 14537   0046C8  0E00               	movlw	0
 14538   0046CA  222B               	addwfc	(___flmul@grs+2)^0,f,c
 14539   0046CC  0E00               	movlw	0
 14540   0046CE  222C               	addwfc	(___flmul@grs+3)^0,f,c
 14541   0046D0  5021               	movf	(___flmul@a+2)^0,w,c
 14542   0046D2  021C               	mulwf	(___flmul@b+1)^0,c
 14543   0046D4  CFF3 F032          	movff	prodl,___flmul@temp
 14544   0046D8  CFF4 F033          	movff	prodh,___flmul@temp+1
 14545   0046DC  5032               	movf	___flmul@temp^0,w,c
 14546   0046DE  262E               	addwf	___flmul@prod^0,f,c
 14547   0046E0  5033               	movf	(___flmul@temp+1)^0,w,c
 14548   0046E2  222F               	addwfc	(___flmul@prod+1)^0,f,c
 14549   0046E4  0E00               	movlw	0
 14550   0046E6  2230               	addwfc	(___flmul@prod+2)^0,f,c
 14551   0046E8  0E00               	movlw	0
 14552   0046EA  2231               	addwfc	(___flmul@prod+3)^0,f,c
 14553   0046EC  5020               	movf	(___flmul@a+1)^0,w,c
 14554   0046EE  021D               	mulwf	(___flmul@b+2)^0,c
 14555   0046F0  CFF3 F032          	movff	prodl,___flmul@temp
 14556   0046F4  CFF4 F033          	movff	prodh,___flmul@temp+1
 14557   0046F8  5032               	movf	___flmul@temp^0,w,c
 14558   0046FA  262E               	addwf	___flmul@prod^0,f,c
 14559   0046FC  5033               	movf	(___flmul@temp+1)^0,w,c
 14560   0046FE  222F               	addwfc	(___flmul@prod+1)^0,f,c
 14561   004700  0E00               	movlw	0
 14562   004702  2230               	addwfc	(___flmul@prod+2)^0,f,c
 14563   004704  0E00               	movlw	0
 14564   004706  2231               	addwfc	(___flmul@prod+3)^0,f,c
 14565   004708  5021               	movf	(___flmul@a+2)^0,w,c
 14566   00470A  021D               	mulwf	(___flmul@b+2)^0,c
 14567   00470C  CFF3 F032          	movff	prodl,___flmul@temp
 14568   004710  CFF4 F033          	movff	prodh,___flmul@temp+1
 14569   004714  5032               	movf	___flmul@temp^0,w,c
 14570   004716  6E23               	movwf	??___flmul^0,c
 14571   004718  5033               	movf	(___flmul@temp+1)^0,w,c
 14572   00471A  6E24               	movwf	(??___flmul+1)^0,c
 14573   00471C  6A25               	clrf	(??___flmul+2)^0,c
 14574   00471E  6A26               	clrf	(??___flmul+3)^0,c
 14575   004720  C025  F026         	movff	??___flmul+2,??___flmul+3
 14576   004724  C024  F025         	movff	??___flmul+1,??___flmul+2
 14577   004728  C023  F024         	movff	??___flmul,??___flmul+1
 14578   00472C  6A23               	clrf	??___flmul^0,c
 14579   00472E  5023               	movf	??___flmul^0,w,c
 14580   004730  262E               	addwf	___flmul@prod^0,f,c
 14581   004732  5024               	movf	(??___flmul+1)^0,w,c
 14582   004734  222F               	addwfc	(___flmul@prod+1)^0,f,c
 14583   004736  5025               	movf	(??___flmul+2)^0,w,c
 14584   004738  2230               	addwfc	(___flmul@prod+2)^0,f,c
 14585   00473A  5026               	movf	(??___flmul+3)^0,w,c
 14586   00473C  2231               	addwfc	(___flmul@prod+3)^0,f,c
 14587   00473E  C029  F023         	movff	___flmul@grs,??___flmul
 14588   004742  C02A  F024         	movff	___flmul@grs+1,??___flmul+1
 14589   004746  C02B  F025         	movff	___flmul@grs+2,??___flmul+2
 14590   00474A  C02C  F026         	movff	___flmul@grs+3,??___flmul+3
 14591   00474E  0E19               	movlw	25
 14592   004750  EFAF  F023         	goto	u6240
 14593   004754                     u6245:
 14594   004754  90D8               	bcf	status,0,c
 14595   004756  3226               	rrcf	(??___flmul+3)^0,f,c
 14596   004758  3225               	rrcf	(??___flmul+2)^0,f,c
 14597   00475A  3224               	rrcf	(??___flmul+1)^0,f,c
 14598   00475C  3223               	rrcf	??___flmul^0,f,c
 14599   00475E                     u6240:
 14600   00475E  2EE8               	decfsz	wreg,f,c
 14601   004760  EFAA  F023         	goto	u6245
 14602   004764  5023               	movf	??___flmul^0,w,c
 14603   004766  262E               	addwf	___flmul@prod^0,f,c
 14604   004768  5024               	movf	(??___flmul+1)^0,w,c
 14605   00476A  222F               	addwfc	(___flmul@prod+1)^0,f,c
 14606   00476C  5025               	movf	(??___flmul+2)^0,w,c
 14607   00476E  2230               	addwfc	(___flmul@prod+2)^0,f,c
 14608   004770  5026               	movf	(??___flmul+3)^0,w,c
 14609   004772  2231               	addwfc	(___flmul@prod+3)^0,f,c
 14610   004774  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 14611   004778  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 14612   00477C  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 14613   004780  6A29               	clrf	___flmul@grs^0,c
 14614   004782  5028               	movf	___flmul@aexp^0,w,c
 14615   004784  C02D  F023         	movff	___flmul@bexp,??___flmul
 14616   004788  6A24               	clrf	(??___flmul+1)^0,c
 14617   00478A  2623               	addwf	??___flmul^0,f,c
 14618   00478C  0E00               	movlw	0
 14619   00478E  2224               	addwfc	(??___flmul+1)^0,f,c
 14620   004790  0E82               	movlw	130
 14621   004792  2423               	addwf	??___flmul^0,w,c
 14622   004794  6E32               	movwf	___flmul@temp^0,c
 14623   004796  0EFF               	movlw	255
 14624   004798  2024               	addwfc	(??___flmul+1)^0,w,c
 14625   00479A  6E33               	movwf	(___flmul@temp+1)^0,c
 14626   00479C  EFE5  F023         	goto	l6535
 14627   0047A0                     l6529:
 14628   0047A0  90D8               	bcf	status,0,c
 14629   0047A2  362E               	rlcf	___flmul@prod^0,f,c
 14630   0047A4  362F               	rlcf	(___flmul@prod+1)^0,f,c
 14631   0047A6  3630               	rlcf	(___flmul@prod+2)^0,f,c
 14632   0047A8  3631               	rlcf	(___flmul@prod+3)^0,f,c
 14633   0047AA  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 14634   0047AC  EFDA  F023         	goto	u6251
 14635   0047B0  EFDC  F023         	goto	u6250
 14636   0047B4                     u6251:
 14637   0047B4  EFDD  F023         	goto	l910
 14638   0047B8                     u6250:
 14639   0047B8  802E               	bsf	___flmul@prod^0,0,c
 14640   0047BA                     l910:
 14641   0047BA  90D8               	bcf	status,0,c
 14642   0047BC  3629               	rlcf	___flmul@grs^0,f,c
 14643   0047BE  362A               	rlcf	(___flmul@grs+1)^0,f,c
 14644   0047C0  362B               	rlcf	(___flmul@grs+2)^0,f,c
 14645   0047C2  362C               	rlcf	(___flmul@grs+3)^0,f,c
 14646   0047C4  0632               	decf	___flmul@temp^0,f,c
 14647   0047C6  A0D8               	btfss	status,0,c
 14648   0047C8  0633               	decf	(___flmul@temp+1)^0,f,c
 14649   0047CA                     l6535:
 14650   0047CA  AE30               	btfss	(___flmul@prod+2)^0,7,c
 14651   0047CC  EFEA  F023         	goto	u6261
 14652   0047D0  EFEC  F023         	goto	u6260
 14653   0047D4                     u6261:
 14654   0047D4  EFD0  F023         	goto	l6529
 14655   0047D8                     u6260:
 14656   0047D8  0E00               	movlw	0
 14657   0047DA  6E28               	movwf	___flmul@aexp^0,c
 14658   0047DC  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 14659   0047DE  EFF3  F023         	goto	u6271
 14660   0047E2  EFF5  F023         	goto	u6270
 14661   0047E6                     u6271:
 14662   0047E6  EF19  F024         	goto	l912
 14663   0047EA                     u6270:
 14664   0047EA  0EFF               	movlw	255
 14665   0047EC  1429               	andwf	___flmul@grs^0,w,c
 14666   0047EE  6E23               	movwf	??___flmul^0,c
 14667   0047F0  0EFF               	movlw	255
 14668   0047F2  142A               	andwf	(___flmul@grs+1)^0,w,c
 14669   0047F4  6E24               	movwf	(??___flmul+1)^0,c
 14670   0047F6  0EFF               	movlw	255
 14671   0047F8  142B               	andwf	(___flmul@grs+2)^0,w,c
 14672   0047FA  6E25               	movwf	(??___flmul+2)^0,c
 14673   0047FC  0E7F               	movlw	127
 14674   0047FE  142C               	andwf	(___flmul@grs+3)^0,w,c
 14675   004800  6E26               	movwf	(??___flmul+3)^0,c
 14676   004802  5023               	movf	??___flmul^0,w,c
 14677   004804  1024               	iorwf	(??___flmul+1)^0,w,c
 14678   004806  1025               	iorwf	(??___flmul+2)^0,w,c
 14679   004808  1026               	iorwf	(??___flmul+3)^0,w,c
 14680   00480A  B4D8               	btfsc	status,2,c
 14681   00480C  EF0A  F024         	goto	u6281
 14682   004810  EF0C  F024         	goto	u6280
 14683   004814                     u6281:
 14684   004814  EF10  F024         	goto	l913
 14685   004818                     u6280:
 14686   004818                     l6543:
 14687   004818  0E01               	movlw	1
 14688   00481A  6E28               	movwf	___flmul@aexp^0,c
 14689   00481C  EF19  F024         	goto	l912
 14690   004820                     l913:
 14691   004820  A02E               	btfss	___flmul@prod^0,0,c
 14692   004822  EF15  F024         	goto	u6291
 14693   004826  EF17  F024         	goto	u6290
 14694   00482A                     u6291:
 14695   00482A  EF19  F024         	goto	l912
 14696   00482E                     u6290:
 14697   00482E  EF0C  F024         	goto	l6543
 14698   004832                     l912:
 14699   004832  5028               	movf	___flmul@aexp^0,w,c
 14700   004834  B4D8               	btfsc	status,2,c
 14701   004836  EF1F  F024         	goto	u6301
 14702   00483A  EF21  F024         	goto	u6300
 14703   00483E                     u6301:
 14704   00483E  EF45  F024         	goto	l6555
 14705   004842                     u6300:
 14706   004842  0E01               	movlw	1
 14707   004844  262E               	addwf	___flmul@prod^0,f,c
 14708   004846  0E00               	movlw	0
 14709   004848  222F               	addwfc	(___flmul@prod+1)^0,f,c
 14710   00484A  2230               	addwfc	(___flmul@prod+2)^0,f,c
 14711   00484C  2231               	addwfc	(___flmul@prod+3)^0,f,c
 14712   00484E  A031               	btfss	(___flmul@prod+3)^0,0,c
 14713   004850  EF2C  F024         	goto	u6311
 14714   004854  EF2E  F024         	goto	u6310
 14715   004858                     u6311:
 14716   004858  EF45  F024         	goto	l6555
 14717   00485C                     u6310:
 14718   00485C  C02E  F023         	movff	___flmul@prod,??___flmul
 14719   004860  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
 14720   004864  C030  F025         	movff	___flmul@prod+2,??___flmul+2
 14721   004868  C031  F026         	movff	___flmul@prod+3,??___flmul+3
 14722   00486C  3426               	rlcf	(??___flmul+3)^0,w,c
 14723   00486E  3226               	rrcf	(??___flmul+3)^0,f,c
 14724   004870  3225               	rrcf	(??___flmul+2)^0,f,c
 14725   004872  3224               	rrcf	(??___flmul+1)^0,f,c
 14726   004874  3223               	rrcf	??___flmul^0,f,c
 14727   004876  C023  F02E         	movff	??___flmul,___flmul@prod
 14728   00487A  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
 14729   00487E  C025  F030         	movff	??___flmul+2,___flmul@prod+2
 14730   004882  C026  F031         	movff	??___flmul+3,___flmul@prod+3
 14731   004886  4A32               	infsnz	___flmul@temp^0,f,c
 14732   004888  2A33               	incf	(___flmul@temp+1)^0,f,c
 14733   00488A                     l6555:
 14734   00488A  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 14735   00488C  EF50  F024         	goto	u6321
 14736   004890  5033               	movf	(___flmul@temp+1)^0,w,c
 14737   004892  E108               	bnz	u6320
 14738   004894  2832               	incf	___flmul@temp^0,w,c
 14739   004896  A0D8               	btfss	status,0,c
 14740   004898  EF50  F024         	goto	u6321
 14741   00489C  EF52  F024         	goto	u6320
 14742   0048A0                     u6321:
 14743   0048A0  EF5C  F024         	goto	l6559
 14744   0048A4                     u6320:
 14745   0048A4  0E00               	movlw	0
 14746   0048A6  6E2E               	movwf	___flmul@prod^0,c
 14747   0048A8  0E00               	movlw	0
 14748   0048AA  6E2F               	movwf	(___flmul@prod+1)^0,c
 14749   0048AC  0E80               	movlw	128
 14750   0048AE  6E30               	movwf	(___flmul@prod+2)^0,c
 14751   0048B0  0E7F               	movlw	127
 14752   0048B2  6E31               	movwf	(___flmul@prod+3)^0,c
 14753   0048B4  EF8A  F024         	goto	l6571
 14754   0048B8                     l6559:
 14755   0048B8  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 14756   0048BA  EF69  F024         	goto	u6330
 14757   0048BE  5033               	movf	(___flmul@temp+1)^0,w,c
 14758   0048C0  E106               	bnz	u6331
 14759   0048C2  0432               	decf	___flmul@temp^0,w,c
 14760   0048C4  B0D8               	btfsc	status,0,c
 14761   0048C6  EF67  F024         	goto	u6331
 14762   0048CA  EF69  F024         	goto	u6330
 14763   0048CE                     u6331:
 14764   0048CE  EF75  F024         	goto	l920
 14765   0048D2                     u6330:
 14766   0048D2  0E00               	movlw	0
 14767   0048D4  6E2E               	movwf	___flmul@prod^0,c
 14768   0048D6  0E00               	movlw	0
 14769   0048D8  6E2F               	movwf	(___flmul@prod+1)^0,c
 14770   0048DA  0E00               	movlw	0
 14771   0048DC  6E30               	movwf	(___flmul@prod+2)^0,c
 14772   0048DE  0E00               	movlw	0
 14773   0048E0  6E31               	movwf	(___flmul@prod+3)^0,c
 14774   0048E2  0E00               	movlw	0
 14775   0048E4  6E27               	movwf	___flmul@sign^0,c
 14776   0048E6  EF8A  F024         	goto	l6571
 14777   0048EA                     l920:
 14778   0048EA  C032  F02D         	movff	___flmul@temp,___flmul@bexp
 14779   0048EE  0EFF               	movlw	255
 14780   0048F0  162E               	andwf	___flmul@prod^0,f,c
 14781   0048F2  0EFF               	movlw	255
 14782   0048F4  162F               	andwf	(___flmul@prod+1)^0,f,c
 14783   0048F6  0E7F               	movlw	127
 14784   0048F8  1630               	andwf	(___flmul@prod+2)^0,f,c
 14785   0048FA  0E00               	movlw	0
 14786   0048FC  1631               	andwf	(___flmul@prod+3)^0,f,c
 14787   0048FE  A02D               	btfss	___flmul@bexp^0,0,c
 14788   004900  EF84  F024         	goto	u6341
 14789   004904  EF86  F024         	goto	u6340
 14790   004908                     u6341:
 14791   004908  EF87  F024         	goto	l6569
 14792   00490C                     u6340:
 14793   00490C  8E30               	bsf	(___flmul@prod+2)^0,7,c
 14794   00490E                     l6569:
 14795   00490E  90D8               	bcf	status,0,c
 14796   004910  302D               	rrcf	___flmul@bexp^0,w,c
 14797   004912  6E31               	movwf	(___flmul@prod+3)^0,c
 14798   004914                     l6571:
 14799   004914  5027               	movf	___flmul@sign^0,w,c
 14800   004916  1231               	iorwf	(___flmul@prod+3)^0,f,c
 14801   004918  C02E  F01B         	movff	___flmul@prod,?___flmul
 14802   00491C  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
 14803   004920  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
 14804   004924  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
 14805   004928                     l907:
 14806   004928  0012               	return		;funcret
 14807   00492A                     __end_of___flmul:
 14808                           	callstack 0
 14809                           
 14810 ;; *************** function ___fladd *****************
 14811 ;; Defined at:
 14812 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 14813 ;; Parameters:    Size  Location     Type
 14814 ;;  b               4   51[COMRAM] unsigned char 
 14815 ;;  a               4   55[COMRAM] unsigned char 
 14816 ;; Auto vars:     Size  Location     Type
 14817 ;;  grs             1   66[COMRAM] unsigned char 
 14818 ;;  bexp            1   65[COMRAM] unsigned char 
 14819 ;;  aexp            1   64[COMRAM] unsigned char 
 14820 ;;  signs           1   63[COMRAM] unsigned char 
 14821 ;; Return value:  Size  Location     Type
 14822 ;;                  4   51[COMRAM] unsigned char 
 14823 ;; Registers used:
 14824 ;;		wreg, status,2, status,0
 14825 ;; Tracked objects:
 14826 ;;		On entry : 0/0
 14827 ;;		On exit  : 0/0
 14828 ;;		Unchanged: 0/0
 14829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14830 ;;      Params:         8       0       0       0       0       0       0       0       0
 14831 ;;      Locals:         4       0       0       0       0       0       0       0       0
 14832 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14833 ;;      Totals:        16       0       0       0       0       0       0       0       0
 14834 ;;Total ram usage:       16 bytes
 14835 ;; Hardware stack levels used: 1
 14836 ;; Hardware stack levels required when called: 2
 14837 ;; This function calls:
 14838 ;;		Nothing
 14839 ;; This function is called by:
 14840 ;;		_main
 14841 ;;		_FFT
 14842 ;;		_normalize
 14843 ;;		___flsub
 14844 ;;		_cosf
 14845 ;;		___cosdf
 14846 ;;		___rem_pio2f
 14847 ;;		___sindf
 14848 ;;		_logf
 14849 ;;		_efgtoa
 14850 ;;		_sinf
 14851 ;;		_sqrtf
 14852 ;; This function uses a non-reentrant model
 14853 ;;
 14854                           
 14855                           	psect	text51
 14856   003BB0                     __ptext51:
 14857                           	callstack 0
 14858   003BB0                     ___fladd:
 14859                           	callstack 22
 14860   003BB0  5037               	movf	(___fladd@b+3)^0,w,c
 14861   003BB2  0B80               	andlw	128
 14862   003BB4  6E40               	movwf	___fladd@signs^0,c
 14863   003BB6  5037               	movf	(___fladd@b+3)^0,w,c
 14864   003BB8  2437               	addwf	(___fladd@b+3)^0,w,c
 14865   003BBA  6E42               	movwf	___fladd@bexp^0,c
 14866   003BBC  AE36               	btfss	(___fladd@b+2)^0,7,c
 14867   003BBE  EFE3  F01D         	goto	u5531
 14868   003BC2  EFE5  F01D         	goto	u5530
 14869   003BC6                     u5531:
 14870   003BC6  EFE6  F01D         	goto	l6099
 14871   003BCA                     u5530:
 14872   003BCA  8042               	bsf	___fladd@bexp^0,0,c
 14873   003BCC                     l6099:
 14874   003BCC  5042               	movf	___fladd@bexp^0,w,c
 14875   003BCE  B4D8               	btfsc	status,2,c
 14876   003BD0  EFEC  F01D         	goto	u5541
 14877   003BD4  EFEE  F01D         	goto	u5540
 14878   003BD8                     u5541:
 14879   003BD8  EF03  F01E         	goto	l6109
 14880   003BDC                     u5540:
 14881   003BDC  2842               	incf	___fladd@bexp^0,w,c
 14882   003BDE  A4D8               	btfss	status,2,c
 14883   003BE0  EFF4  F01D         	goto	u5551
 14884   003BE4  EFF6  F01D         	goto	u5550
 14885   003BE8                     u5551:
 14886   003BE8  EFFE  F01D         	goto	l6105
 14887   003BEC                     u5550:
 14888   003BEC  0E00               	movlw	0
 14889   003BEE  6E34               	movwf	___fladd@b^0,c
 14890   003BF0  0E00               	movlw	0
 14891   003BF2  6E35               	movwf	(___fladd@b+1)^0,c
 14892   003BF4  0E00               	movlw	0
 14893   003BF6  6E36               	movwf	(___fladd@b+2)^0,c
 14894   003BF8  0E00               	movlw	0
 14895   003BFA  6E37               	movwf	(___fladd@b+3)^0,c
 14896   003BFC                     l6105:
 14897   003BFC  8E36               	bsf	(___fladd@b+2)^0,7,c
 14898   003BFE  0E00               	movlw	0
 14899   003C00  6E37               	movwf	(___fladd@b+3)^0,c
 14900   003C02  EF0B  F01E         	goto	l6111
 14901   003C06                     l6109:
 14902   003C06  0E00               	movlw	0
 14903   003C08  6E34               	movwf	___fladd@b^0,c
 14904   003C0A  0E00               	movlw	0
 14905   003C0C  6E35               	movwf	(___fladd@b+1)^0,c
 14906   003C0E  0E00               	movlw	0
 14907   003C10  6E36               	movwf	(___fladd@b+2)^0,c
 14908   003C12  0E00               	movlw	0
 14909   003C14  6E37               	movwf	(___fladd@b+3)^0,c
 14910   003C16                     l6111:
 14911   003C16  503B               	movf	(___fladd@a+3)^0,w,c
 14912   003C18  0B80               	andlw	128
 14913   003C1A  6E41               	movwf	___fladd@aexp^0,c
 14914   003C1C  5040               	movf	___fladd@signs^0,w,c
 14915   003C1E  1841               	xorwf	___fladd@aexp^0,w,c
 14916   003C20  B4D8               	btfsc	status,2,c
 14917   003C22  EF15  F01E         	goto	u5561
 14918   003C26  EF17  F01E         	goto	u5560
 14919   003C2A                     u5561:
 14920   003C2A  EF18  F01E         	goto	l6117
 14921   003C2E                     u5560:
 14922   003C2E  8C40               	bsf	___fladd@signs^0,6,c
 14923   003C30                     l6117:
 14924   003C30  503B               	movf	(___fladd@a+3)^0,w,c
 14925   003C32  243B               	addwf	(___fladd@a+3)^0,w,c
 14926   003C34  6E41               	movwf	___fladd@aexp^0,c
 14927   003C36  AE3A               	btfss	(___fladd@a+2)^0,7,c
 14928   003C38  EF20  F01E         	goto	u5571
 14929   003C3C  EF22  F01E         	goto	u5570
 14930   003C40                     u5571:
 14931   003C40  EF23  F01E         	goto	l6123
 14932   003C44                     u5570:
 14933   003C44  8041               	bsf	___fladd@aexp^0,0,c
 14934   003C46                     l6123:
 14935   003C46  5041               	movf	___fladd@aexp^0,w,c
 14936   003C48  B4D8               	btfsc	status,2,c
 14937   003C4A  EF29  F01E         	goto	u5581
 14938   003C4E  EF2B  F01E         	goto	u5580
 14939   003C52                     u5581:
 14940   003C52  EF40  F01E         	goto	l6133
 14941   003C56                     u5580:
 14942   003C56  2841               	incf	___fladd@aexp^0,w,c
 14943   003C58  A4D8               	btfss	status,2,c
 14944   003C5A  EF31  F01E         	goto	u5591
 14945   003C5E  EF33  F01E         	goto	u5590
 14946   003C62                     u5591:
 14947   003C62  EF3B  F01E         	goto	l6129
 14948   003C66                     u5590:
 14949   003C66  0E00               	movlw	0
 14950   003C68  6E38               	movwf	___fladd@a^0,c
 14951   003C6A  0E00               	movlw	0
 14952   003C6C  6E39               	movwf	(___fladd@a+1)^0,c
 14953   003C6E  0E00               	movlw	0
 14954   003C70  6E3A               	movwf	(___fladd@a+2)^0,c
 14955   003C72  0E00               	movlw	0
 14956   003C74  6E3B               	movwf	(___fladd@a+3)^0,c
 14957   003C76                     l6129:
 14958   003C76  8E3A               	bsf	(___fladd@a+2)^0,7,c
 14959   003C78  0E00               	movlw	0
 14960   003C7A  6E3B               	movwf	(___fladd@a+3)^0,c
 14961   003C7C  EF48  F01E         	goto	l6135
 14962   003C80                     l6133:
 14963   003C80  0E00               	movlw	0
 14964   003C82  6E38               	movwf	___fladd@a^0,c
 14965   003C84  0E00               	movlw	0
 14966   003C86  6E39               	movwf	(___fladd@a+1)^0,c
 14967   003C88  0E00               	movlw	0
 14968   003C8A  6E3A               	movwf	(___fladd@a+2)^0,c
 14969   003C8C  0E00               	movlw	0
 14970   003C8E  6E3B               	movwf	(___fladd@a+3)^0,c
 14971   003C90                     l6135:
 14972   003C90  5042               	movf	___fladd@bexp^0,w,c
 14973   003C92  5C41               	subwf	___fladd@aexp^0,w,c
 14974   003C94  B0D8               	btfsc	status,0,c
 14975   003C96  EF4F  F01E         	goto	u5601
 14976   003C9A  EF51  F01E         	goto	u5600
 14977   003C9E                     u5601:
 14978   003C9E  EF78  F01E         	goto	l6171
 14979   003CA2                     u5600:
 14980   003CA2  AC40               	btfss	___fladd@signs^0,6,c
 14981   003CA4  EF56  F01E         	goto	u5611
 14982   003CA8  EF58  F01E         	goto	u5610
 14983   003CAC                     u5611:
 14984   003CAC  EF5A  F01E         	goto	l6141
 14985   003CB0                     u5610:
 14986   003CB0  0E80               	movlw	128
 14987   003CB2  1A40               	xorwf	___fladd@signs^0,f,c
 14988   003CB4                     l6141:
 14989   003CB4  C042  F043         	movff	___fladd@bexp,___fladd@grs
 14990   003CB8  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 14991   003CBC  C043  F041         	movff	___fladd@grs,___fladd@aexp
 14992   003CC0  C034  F043         	movff	___fladd@b,___fladd@grs
 14993   003CC4  C038  F034         	movff	___fladd@a,___fladd@b
 14994   003CC8  C043  F038         	movff	___fladd@grs,___fladd@a
 14995   003CCC  C035  F043         	movff	___fladd@b+1,___fladd@grs
 14996   003CD0  C039  F035         	movff	___fladd@a+1,___fladd@b+1
 14997   003CD4  C043  F039         	movff	___fladd@grs,___fladd@a+1
 14998   003CD8  C036  F043         	movff	___fladd@b+2,___fladd@grs
 14999   003CDC  C03A  F036         	movff	___fladd@a+2,___fladd@b+2
 15000   003CE0  C043  F03A         	movff	___fladd@grs,___fladd@a+2
 15001   003CE4  C037  F043         	movff	___fladd@b+3,___fladd@grs
 15002   003CE8  C03B  F037         	movff	___fladd@a+3,___fladd@b+3
 15003   003CEC  C043  F03B         	movff	___fladd@grs,___fladd@a+3
 15004   003CF0                     l6171:
 15005   003CF0  0E00               	movlw	0
 15006   003CF2  6E43               	movwf	___fladd@grs^0,c
 15007   003CF4  5042               	movf	___fladd@bexp^0,w,c
 15008   003CF6  C041  F03C         	movff	___fladd@aexp,??___fladd
 15009   003CFA  6A3D               	clrf	(??___fladd+1)^0,c
 15010   003CFC  5E3C               	subwf	??___fladd^0,f,c
 15011   003CFE  0E00               	movlw	0
 15012   003D00  5A3D               	subwfb	(??___fladd+1)^0,f,c
 15013   003D02  BE3D               	btfsc	(??___fladd+1)^0,7,c
 15014   003D04  EF8D  F01E         	goto	u5621
 15015   003D08  503D               	movf	(??___fladd+1)^0,w,c
 15016   003D0A  E109               	bnz	u5620
 15017   003D0C  0E1A               	movlw	26
 15018   003D0E  5C3C               	subwf	??___fladd^0,w,c
 15019   003D10  A0D8               	btfss	status,0,c
 15020   003D12  EF8D  F01E         	goto	u5621
 15021   003D16  EF8F  F01E         	goto	u5620
 15022   003D1A                     u5621:
 15023   003D1A  EFC6  F01E         	goto	l818
 15024   003D1E                     u5620:
 15025   003D1E  5034               	movf	___fladd@b^0,w,c
 15026   003D20  1035               	iorwf	(___fladd@b+1)^0,w,c
 15027   003D22  1036               	iorwf	(___fladd@b+2)^0,w,c
 15028   003D24  1037               	iorwf	(___fladd@b+3)^0,w,c
 15029   003D26  A4D8               	btfss	status,2,c
 15030   003D28  EF98  F01E         	goto	u5631
 15031   003D2C  EF9B  F01E         	goto	u5630
 15032   003D30                     u5631:
 15033   003D30  0E01               	movlw	1
 15034   003D32  EF9C  F01E         	goto	u5640
 15035   003D36                     u5630:
 15036   003D36  0E00               	movlw	0
 15037   003D38                     u5640:
 15038   003D38  6E43               	movwf	___fladd@grs^0,c
 15039   003D3A  0E00               	movlw	0
 15040   003D3C  6E34               	movwf	___fladd@b^0,c
 15041   003D3E  0E00               	movlw	0
 15042   003D40  6E35               	movwf	(___fladd@b+1)^0,c
 15043   003D42  0E00               	movlw	0
 15044   003D44  6E36               	movwf	(___fladd@b+2)^0,c
 15045   003D46  0E00               	movlw	0
 15046   003D48  6E37               	movwf	(___fladd@b+3)^0,c
 15047   003D4A  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 15048   003D4E  EFCF  F01E         	goto	l817
 15049   003D52                     l819:
 15050   003D52  A043               	btfss	___fladd@grs^0,0,c
 15051   003D54  EFAE  F01E         	goto	u5651
 15052   003D58  EFB0  F01E         	goto	u5650
 15053   003D5C                     u5651:
 15054   003D5C  EFB6  F01E         	goto	l6183
 15055   003D60                     u5650:
 15056   003D60  90D8               	bcf	status,0,c
 15057   003D62  3043               	rrcf	___fladd@grs^0,w,c
 15058   003D64  0901               	iorlw	1
 15059   003D66  6E43               	movwf	___fladd@grs^0,c
 15060   003D68  EFB8  F01E         	goto	l6185
 15061   003D6C                     l6183:
 15062   003D6C  90D8               	bcf	status,0,c
 15063   003D6E  3243               	rrcf	___fladd@grs^0,f,c
 15064   003D70                     l6185:
 15065   003D70  A034               	btfss	___fladd@b^0,0,c
 15066   003D72  EFBD  F01E         	goto	u5661
 15067   003D76  EFBF  F01E         	goto	u5660
 15068   003D7A                     u5661:
 15069   003D7A  EFC0  F01E         	goto	l6189
 15070   003D7E                     u5660:
 15071   003D7E  8E43               	bsf	___fladd@grs^0,7,c
 15072   003D80                     l6189:
 15073   003D80  3437               	rlcf	(___fladd@b+3)^0,w,c
 15074   003D82  3237               	rrcf	(___fladd@b+3)^0,f,c
 15075   003D84  3236               	rrcf	(___fladd@b+2)^0,f,c
 15076   003D86  3235               	rrcf	(___fladd@b+1)^0,f,c
 15077   003D88  3234               	rrcf	___fladd@b^0,f,c
 15078   003D8A  2A42               	incf	___fladd@bexp^0,f,c
 15079   003D8C                     l818:
 15080   003D8C  5041               	movf	___fladd@aexp^0,w,c
 15081   003D8E  5C42               	subwf	___fladd@bexp^0,w,c
 15082   003D90  A0D8               	btfss	status,0,c
 15083   003D92  EFCD  F01E         	goto	u5671
 15084   003D96  EFCF  F01E         	goto	u5670
 15085   003D9A                     u5671:
 15086   003D9A  EFA9  F01E         	goto	l819
 15087   003D9E                     u5670:
 15088   003D9E                     l817:
 15089   003D9E  BC40               	btfsc	___fladd@signs^0,6,c
 15090   003DA0  EFD4  F01E         	goto	u5681
 15091   003DA4  EFD6  F01E         	goto	u5680
 15092   003DA8                     u5681:
 15093   003DA8  EF16  F01F         	goto	l6217
 15094   003DAC                     u5680:
 15095   003DAC  5042               	movf	___fladd@bexp^0,w,c
 15096   003DAE  A4D8               	btfss	status,2,c
 15097   003DB0  EFDC  F01E         	goto	u5691
 15098   003DB4  EFDE  F01E         	goto	u5690
 15099   003DB8                     u5691:
 15100   003DB8  EFE8  F01E         	goto	l6199
 15101   003DBC                     u5690:
 15102   003DBC  0E00               	movlw	0
 15103   003DBE  6E34               	movwf	?___fladd^0,c
 15104   003DC0  0E00               	movlw	0
 15105   003DC2  6E35               	movwf	(?___fladd+1)^0,c
 15106   003DC4  0E00               	movlw	0
 15107   003DC6  6E36               	movwf	(?___fladd+2)^0,c
 15108   003DC8  0E00               	movlw	0
 15109   003DCA  6E37               	movwf	(?___fladd+3)^0,c
 15110   003DCC  EF37  F020         	goto	l826
 15111   003DD0                     l6199:
 15112   003DD0  5038               	movf	___fladd@a^0,w,c
 15113   003DD2  2634               	addwf	___fladd@b^0,f,c
 15114   003DD4  5039               	movf	(___fladd@a+1)^0,w,c
 15115   003DD6  2235               	addwfc	(___fladd@b+1)^0,f,c
 15116   003DD8  503A               	movf	(___fladd@a+2)^0,w,c
 15117   003DDA  2236               	addwfc	(___fladd@b+2)^0,f,c
 15118   003DDC  503B               	movf	(___fladd@a+3)^0,w,c
 15119   003DDE  2237               	addwfc	(___fladd@b+3)^0,f,c
 15120   003DE0  A037               	btfss	(___fladd@b+3)^0,0,c
 15121   003DE2  EFF5  F01E         	goto	u5701
 15122   003DE6  EFF7  F01E         	goto	u5700
 15123   003DEA                     u5701:
 15124   003DEA  EFA3  F01F         	goto	l6253
 15125   003DEE                     u5700:
 15126   003DEE  A043               	btfss	___fladd@grs^0,0,c
 15127   003DF0  EFFC  F01E         	goto	u5711
 15128   003DF4  EFFE  F01E         	goto	u5710
 15129   003DF8                     u5711:
 15130   003DF8  EF04  F01F         	goto	l6207
 15131   003DFC                     u5710:
 15132   003DFC  90D8               	bcf	status,0,c
 15133   003DFE  3043               	rrcf	___fladd@grs^0,w,c
 15134   003E00  0901               	iorlw	1
 15135   003E02  6E43               	movwf	___fladd@grs^0,c
 15136   003E04  EF06  F01F         	goto	l6209
 15137   003E08                     l6207:
 15138   003E08  90D8               	bcf	status,0,c
 15139   003E0A  3243               	rrcf	___fladd@grs^0,f,c
 15140   003E0C                     l6209:
 15141   003E0C  A034               	btfss	___fladd@b^0,0,c
 15142   003E0E  EF0B  F01F         	goto	u5721
 15143   003E12  EF0D  F01F         	goto	u5720
 15144   003E16                     u5721:
 15145   003E16  EF0E  F01F         	goto	l6213
 15146   003E1A                     u5720:
 15147   003E1A  8E43               	bsf	___fladd@grs^0,7,c
 15148   003E1C                     l6213:
 15149   003E1C  3437               	rlcf	(___fladd@b+3)^0,w,c
 15150   003E1E  3237               	rrcf	(___fladd@b+3)^0,f,c
 15151   003E20  3236               	rrcf	(___fladd@b+2)^0,f,c
 15152   003E22  3235               	rrcf	(___fladd@b+1)^0,f,c
 15153   003E24  3234               	rrcf	___fladd@b^0,f,c
 15154   003E26  2A42               	incf	___fladd@bexp^0,f,c
 15155   003E28  EFA3  F01F         	goto	l6253
 15156   003E2C                     l6217:
 15157   003E2C  5038               	movf	___fladd@a^0,w,c
 15158   003E2E  5C34               	subwf	___fladd@b^0,w,c
 15159   003E30  5039               	movf	(___fladd@a+1)^0,w,c
 15160   003E32  5835               	subwfb	(___fladd@b+1)^0,w,c
 15161   003E34  503A               	movf	(___fladd@a+2)^0,w,c
 15162   003E36  5836               	subwfb	(___fladd@b+2)^0,w,c
 15163   003E38  5037               	movf	(___fladd@b+3)^0,w,c
 15164   003E3A  0A80               	xorlw	128
 15165   003E3C  6E3C               	movwf	??___fladd^0,c
 15166   003E3E  503B               	movf	(___fladd@a+3)^0,w,c
 15167   003E40  0A80               	xorlw	128
 15168   003E42  583C               	subwfb	??___fladd^0,w,c
 15169   003E44  B0D8               	btfsc	status,0,c
 15170   003E46  EF27  F01F         	goto	u5731
 15171   003E4A  EF29  F01F         	goto	u5730
 15172   003E4E                     u5731:
 15173   003E4E  EF54  F01F         	goto	l6227
 15174   003E52                     u5730:
 15175   003E52  5034               	movf	___fladd@b^0,w,c
 15176   003E54  5C38               	subwf	___fladd@a^0,w,c
 15177   003E56  6E3C               	movwf	??___fladd^0,c
 15178   003E58  5035               	movf	(___fladd@b+1)^0,w,c
 15179   003E5A  5839               	subwfb	(___fladd@a+1)^0,w,c
 15180   003E5C  6E3D               	movwf	(??___fladd+1)^0,c
 15181   003E5E  5036               	movf	(___fladd@b+2)^0,w,c
 15182   003E60  583A               	subwfb	(___fladd@a+2)^0,w,c
 15183   003E62  6E3E               	movwf	(??___fladd+2)^0,c
 15184   003E64  5037               	movf	(___fladd@b+3)^0,w,c
 15185   003E66  583B               	subwfb	(___fladd@a+3)^0,w,c
 15186   003E68  6E3F               	movwf	(??___fladd+3)^0,c
 15187   003E6A  0EFF               	movlw	255
 15188   003E6C  243C               	addwf	??___fladd^0,w,c
 15189   003E6E  6E34               	movwf	___fladd@b^0,c
 15190   003E70  0EFF               	movlw	255
 15191   003E72  203D               	addwfc	(??___fladd+1)^0,w,c
 15192   003E74  6E35               	movwf	(___fladd@b+1)^0,c
 15193   003E76  0EFF               	movlw	255
 15194   003E78  203E               	addwfc	(??___fladd+2)^0,w,c
 15195   003E7A  6E36               	movwf	(___fladd@b+2)^0,c
 15196   003E7C  0EFF               	movlw	255
 15197   003E7E  203F               	addwfc	(??___fladd+3)^0,w,c
 15198   003E80  6E37               	movwf	(___fladd@b+3)^0,c
 15199   003E82  0E80               	movlw	128
 15200   003E84  1A40               	xorwf	___fladd@signs^0,f,c
 15201   003E86  6C43               	negf	___fladd@grs^0,c
 15202   003E88  5043               	movf	___fladd@grs^0,w,c
 15203   003E8A  A4D8               	btfss	status,2,c
 15204   003E8C  EF4A  F01F         	goto	u5741
 15205   003E90  EF4C  F01F         	goto	u5740
 15206   003E94                     u5741:
 15207   003E94  EF5C  F01F         	goto	l834
 15208   003E98                     u5740:
 15209   003E98  0E01               	movlw	1
 15210   003E9A  2634               	addwf	___fladd@b^0,f,c
 15211   003E9C  0E00               	movlw	0
 15212   003E9E  2235               	addwfc	(___fladd@b+1)^0,f,c
 15213   003EA0  2236               	addwfc	(___fladd@b+2)^0,f,c
 15214   003EA2  2237               	addwfc	(___fladd@b+3)^0,f,c
 15215   003EA4  EF5C  F01F         	goto	l834
 15216   003EA8                     l6227:
 15217   003EA8  5038               	movf	___fladd@a^0,w,c
 15218   003EAA  5E34               	subwf	___fladd@b^0,f,c
 15219   003EAC  5039               	movf	(___fladd@a+1)^0,w,c
 15220   003EAE  5A35               	subwfb	(___fladd@b+1)^0,f,c
 15221   003EB0  503A               	movf	(___fladd@a+2)^0,w,c
 15222   003EB2  5A36               	subwfb	(___fladd@b+2)^0,f,c
 15223   003EB4  503B               	movf	(___fladd@a+3)^0,w,c
 15224   003EB6  5A37               	subwfb	(___fladd@b+3)^0,f,c
 15225   003EB8                     l834:
 15226   003EB8  5034               	movf	___fladd@b^0,w,c
 15227   003EBA  1035               	iorwf	(___fladd@b+1)^0,w,c
 15228   003EBC  1036               	iorwf	(___fladd@b+2)^0,w,c
 15229   003EBE  1037               	iorwf	(___fladd@b+3)^0,w,c
 15230   003EC0  A4D8               	btfss	status,2,c
 15231   003EC2  EF65  F01F         	goto	u5751
 15232   003EC6  EF67  F01F         	goto	u5750
 15233   003ECA                     u5751:
 15234   003ECA  EF9C  F01F         	goto	l6251
 15235   003ECE                     u5750:
 15236   003ECE  5043               	movf	___fladd@grs^0,w,c
 15237   003ED0  A4D8               	btfss	status,2,c
 15238   003ED2  EF6D  F01F         	goto	u5761
 15239   003ED6  EF6F  F01F         	goto	u5760
 15240   003EDA                     u5761:
 15241   003EDA  EF9C  F01F         	goto	l6251
 15242   003EDE                     u5760:
 15243   003EDE  0E00               	movlw	0
 15244   003EE0  6E34               	movwf	?___fladd^0,c
 15245   003EE2  0E00               	movlw	0
 15246   003EE4  6E35               	movwf	(?___fladd+1)^0,c
 15247   003EE6  0E00               	movlw	0
 15248   003EE8  6E36               	movwf	(?___fladd+2)^0,c
 15249   003EEA  0E00               	movlw	0
 15250   003EEC  6E37               	movwf	(?___fladd+3)^0,c
 15251   003EEE  EF37  F020         	goto	l826
 15252   003EF2                     l6235:
 15253   003EF2  90D8               	bcf	status,0,c
 15254   003EF4  3634               	rlcf	___fladd@b^0,f,c
 15255   003EF6  3635               	rlcf	(___fladd@b+1)^0,f,c
 15256   003EF8  3636               	rlcf	(___fladd@b+2)^0,f,c
 15257   003EFA  3637               	rlcf	(___fladd@b+3)^0,f,c
 15258   003EFC  AE43               	btfss	___fladd@grs^0,7,c
 15259   003EFE  EF83  F01F         	goto	u5771
 15260   003F02  EF85  F01F         	goto	u5770
 15261   003F06                     u5771:
 15262   003F06  EF86  F01F         	goto	l6241
 15263   003F0A                     u5770:
 15264   003F0A  8034               	bsf	___fladd@b^0,0,c
 15265   003F0C                     l6241:
 15266   003F0C  A043               	btfss	___fladd@grs^0,0,c
 15267   003F0E  EF8B  F01F         	goto	u5781
 15268   003F12  EF8D  F01F         	goto	u5780
 15269   003F16                     u5781:
 15270   003F16  EF91  F01F         	goto	l6245
 15271   003F1A                     u5780:
 15272   003F1A  80D8               	bsf	status,0,c
 15273   003F1C  3643               	rlcf	___fladd@grs^0,f,c
 15274   003F1E  EF93  F01F         	goto	l6247
 15275   003F22                     l6245:
 15276   003F22  90D8               	bcf	status,0,c
 15277   003F24  3643               	rlcf	___fladd@grs^0,f,c
 15278   003F26                     l6247:
 15279   003F26  5042               	movf	___fladd@bexp^0,w,c
 15280   003F28  B4D8               	btfsc	status,2,c
 15281   003F2A  EF99  F01F         	goto	u5791
 15282   003F2E  EF9B  F01F         	goto	u5790
 15283   003F32                     u5791:
 15284   003F32  EF9C  F01F         	goto	l6251
 15285   003F36                     u5790:
 15286   003F36  0642               	decf	___fladd@bexp^0,f,c
 15287   003F38                     l6251:
 15288   003F38  AE36               	btfss	(___fladd@b+2)^0,7,c
 15289   003F3A  EFA1  F01F         	goto	u5801
 15290   003F3E  EFA3  F01F         	goto	u5800
 15291   003F42                     u5801:
 15292   003F42  EF79  F01F         	goto	l6235
 15293   003F46                     u5800:
 15294   003F46                     l6253:
 15295   003F46  0E00               	movlw	0
 15296   003F48  6E41               	movwf	___fladd@aexp^0,c
 15297   003F4A  AE43               	btfss	___fladd@grs^0,7,c
 15298   003F4C  EFAA  F01F         	goto	u5811
 15299   003F50  EFAC  F01F         	goto	u5810
 15300   003F54                     u5811:
 15301   003F54  EFC4  F01F         	goto	l843
 15302   003F58                     u5810:
 15303   003F58  C043  F03C         	movff	___fladd@grs,??___fladd
 15304   003F5C  0E7F               	movlw	127
 15305   003F5E  163C               	andwf	??___fladd^0,f,c
 15306   003F60  B4D8               	btfsc	status,2,c
 15307   003F62  EFB5  F01F         	goto	u5821
 15308   003F66  EFB7  F01F         	goto	u5820
 15309   003F6A                     u5821:
 15310   003F6A  EFBB  F01F         	goto	l844
 15311   003F6E                     u5820:
 15312   003F6E                     l6259:
 15313   003F6E  0E01               	movlw	1
 15314   003F70  6E41               	movwf	___fladd@aexp^0,c
 15315   003F72  EFC4  F01F         	goto	l843
 15316   003F76                     l844:
 15317   003F76  A034               	btfss	___fladd@b^0,0,c
 15318   003F78  EFC0  F01F         	goto	u5831
 15319   003F7C  EFC2  F01F         	goto	u5830
 15320   003F80                     u5831:
 15321   003F80  EFC4  F01F         	goto	l843
 15322   003F84                     u5830:
 15323   003F84  EFB7  F01F         	goto	l6259
 15324   003F88                     l843:
 15325   003F88  5041               	movf	___fladd@aexp^0,w,c
 15326   003F8A  B4D8               	btfsc	status,2,c
 15327   003F8C  EFCA  F01F         	goto	u5841
 15328   003F90  EFCC  F01F         	goto	u5840
 15329   003F94                     u5841:
 15330   003F94  EFF7  F01F         	goto	l6271
 15331   003F98                     u5840:
 15332   003F98  0E01               	movlw	1
 15333   003F9A  2634               	addwf	___fladd@b^0,f,c
 15334   003F9C  0E00               	movlw	0
 15335   003F9E  2235               	addwfc	(___fladd@b+1)^0,f,c
 15336   003FA0  2236               	addwfc	(___fladd@b+2)^0,f,c
 15337   003FA2  2237               	addwfc	(___fladd@b+3)^0,f,c
 15338   003FA4  A037               	btfss	(___fladd@b+3)^0,0,c
 15339   003FA6  EFD7  F01F         	goto	u5851
 15340   003FAA  EFD9  F01F         	goto	u5850
 15341   003FAE                     u5851:
 15342   003FAE  EFF7  F01F         	goto	l6271
 15343   003FB2                     u5850:
 15344   003FB2  C034  F03C         	movff	___fladd@b,??___fladd
 15345   003FB6  C035  F03D         	movff	___fladd@b+1,??___fladd+1
 15346   003FBA  C036  F03E         	movff	___fladd@b+2,??___fladd+2
 15347   003FBE  C037  F03F         	movff	___fladd@b+3,??___fladd+3
 15348   003FC2  343F               	rlcf	(??___fladd+3)^0,w,c
 15349   003FC4  323F               	rrcf	(??___fladd+3)^0,f,c
 15350   003FC6  323E               	rrcf	(??___fladd+2)^0,f,c
 15351   003FC8  323D               	rrcf	(??___fladd+1)^0,f,c
 15352   003FCA  323C               	rrcf	??___fladd^0,f,c
 15353   003FCC  C03C  F034         	movff	??___fladd,___fladd@b
 15354   003FD0  C03D  F035         	movff	??___fladd+1,___fladd@b+1
 15355   003FD4  C03E  F036         	movff	??___fladd+2,___fladd@b+2
 15356   003FD8  C03F  F037         	movff	??___fladd+3,___fladd@b+3
 15357   003FDC  2842               	incf	___fladd@bexp^0,w,c
 15358   003FDE  B4D8               	btfsc	status,2,c
 15359   003FE0  EFF4  F01F         	goto	u5861
 15360   003FE4  EFF6  F01F         	goto	u5860
 15361   003FE8                     u5861:
 15362   003FE8  EFF7  F01F         	goto	l6271
 15363   003FEC                     u5860:
 15364   003FEC  2A42               	incf	___fladd@bexp^0,f,c
 15365   003FEE                     l6271:
 15366   003FEE  2842               	incf	___fladd@bexp^0,w,c
 15367   003FF0  B4D8               	btfsc	status,2,c
 15368   003FF2  EFFD  F01F         	goto	u5871
 15369   003FF6  EFFF  F01F         	goto	u5870
 15370   003FFA                     u5871:
 15371   003FFA  EF07  F020         	goto	l6275
 15372   003FFE                     u5870:
 15373   003FFE  5042               	movf	___fladd@bexp^0,w,c
 15374   004000  A4D8               	btfss	status,2,c
 15375   004002  EF05  F020         	goto	u5881
 15376   004006  EF07  F020         	goto	u5880
 15377   00400A                     u5881:
 15378   00400A  EF19  F020         	goto	l6279
 15379   00400E                     u5880:
 15380   00400E                     l6275:
 15381   00400E  0E00               	movlw	0
 15382   004010  6E34               	movwf	___fladd@b^0,c
 15383   004012  0E00               	movlw	0
 15384   004014  6E35               	movwf	(___fladd@b+1)^0,c
 15385   004016  0E00               	movlw	0
 15386   004018  6E36               	movwf	(___fladd@b+2)^0,c
 15387   00401A  0E00               	movlw	0
 15388   00401C  6E37               	movwf	(___fladd@b+3)^0,c
 15389   00401E  5042               	movf	___fladd@bexp^0,w,c
 15390   004020  A4D8               	btfss	status,2,c
 15391   004022  EF15  F020         	goto	u5891
 15392   004026  EF17  F020         	goto	u5890
 15393   00402A                     u5891:
 15394   00402A  EF19  F020         	goto	l6279
 15395   00402E                     u5890:
 15396   00402E  0E00               	movlw	0
 15397   004030  6E40               	movwf	___fladd@signs^0,c
 15398   004032                     l6279:
 15399   004032  A042               	btfss	___fladd@bexp^0,0,c
 15400   004034  EF1E  F020         	goto	u5901
 15401   004038  EF20  F020         	goto	u5900
 15402   00403C                     u5901:
 15403   00403C  EF23  F020         	goto	l6283
 15404   004040                     u5900:
 15405   004040  8E36               	bsf	(___fladd@b+2)^0,7,c
 15406   004042  EF24  F020         	goto	l6285
 15407   004046                     l6283:
 15408   004046  9E36               	bcf	(___fladd@b+2)^0,7,c
 15409   004048                     l6285:
 15410   004048  90D8               	bcf	status,0,c
 15411   00404A  3042               	rrcf	___fladd@bexp^0,w,c
 15412   00404C  6E37               	movwf	(___fladd@b+3)^0,c
 15413   00404E  AE40               	btfss	___fladd@signs^0,7,c
 15414   004050  EF2C  F020         	goto	u5911
 15415   004054  EF2E  F020         	goto	u5910
 15416   004058                     u5911:
 15417   004058  EF2F  F020         	goto	l6291
 15418   00405C                     u5910:
 15419   00405C  8E37               	bsf	(___fladd@b+3)^0,7,c
 15420   00405E                     l6291:
 15421   00405E  C034  F034         	movff	___fladd@b,?___fladd
 15422   004062  C035  F035         	movff	___fladd@b+1,?___fladd+1
 15423   004066  C036  F036         	movff	___fladd@b+2,?___fladd+2
 15424   00406A  C037  F037         	movff	___fladd@b+3,?___fladd+3
 15425   00406E                     l826:
 15426   00406E  0012               	return		;funcret
 15427   004070                     __end_of___fladd:
 15428                           	callstack 0
 15429                           
 15430 ;; *************** function ___awdiv *****************
 15431 ;; Defined at:
 15432 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
 15433 ;; Parameters:    Size  Location     Type
 15434 ;;  dividend        2   12[COMRAM] int 
 15435 ;;  divisor         2   14[COMRAM] int 
 15436 ;; Auto vars:     Size  Location     Type
 15437 ;;  quotient        2   18[COMRAM] int 
 15438 ;;  sign            1   17[COMRAM] unsigned char 
 15439 ;;  counter         1   16[COMRAM] unsigned char 
 15440 ;; Return value:  Size  Location     Type
 15441 ;;                  2   12[COMRAM] int 
 15442 ;; Registers used:
 15443 ;;		wreg, status,2, status,0
 15444 ;; Tracked objects:
 15445 ;;		On entry : 0/0
 15446 ;;		On exit  : 0/0
 15447 ;;		Unchanged: 0/0
 15448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15449 ;;      Params:         4       0       0       0       0       0       0       0       0
 15450 ;;      Locals:         4       0       0       0       0       0       0       0       0
 15451 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15452 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15453 ;;Total ram usage:        8 bytes
 15454 ;; Hardware stack levels used: 1
 15455 ;; Hardware stack levels required when called: 2
 15456 ;; This function calls:
 15457 ;;		Nothing
 15458 ;; This function is called by:
 15459 ;;		_FFT
 15460 ;;		_bitrevsort
 15461 ;;		_normalize
 15462 ;; This function uses a non-reentrant model
 15463 ;;
 15464                           
 15465                           	psect	text52
 15466   00655A                     __ptext52:
 15467                           	callstack 0
 15468   00655A                     ___awdiv:
 15469                           	callstack 27
 15470   00655A  0E00               	movlw	0
 15471   00655C  6E12               	movwf	___awdiv@sign^0,c
 15472   00655E  BE10               	btfsc	(___awdiv@divisor+1)^0,7,c
 15473   006560  EFB6  F032         	goto	u7760
 15474   006564  EFB4  F032         	goto	u7761
 15475   006568                     u7761:
 15476   006568  EFBC  F032         	goto	l7681
 15477   00656C                     u7760:
 15478   00656C  6C0F               	negf	___awdiv@divisor^0,c
 15479   00656E  1E10               	comf	(___awdiv@divisor+1)^0,f,c
 15480   006570  B0D8               	btfsc	status,0,c
 15481   006572  2A10               	incf	(___awdiv@divisor+1)^0,f,c
 15482   006574  0E01               	movlw	1
 15483   006576  6E12               	movwf	___awdiv@sign^0,c
 15484   006578                     l7681:
 15485   006578  BE0E               	btfsc	(___awdiv@dividend+1)^0,7,c
 15486   00657A  EFC3  F032         	goto	u7770
 15487   00657E  EFC1  F032         	goto	u7771
 15488   006582                     u7771:
 15489   006582  EFC9  F032         	goto	l7687
 15490   006586                     u7770:
 15491   006586  6C0D               	negf	___awdiv@dividend^0,c
 15492   006588  1E0E               	comf	(___awdiv@dividend+1)^0,f,c
 15493   00658A  B0D8               	btfsc	status,0,c
 15494   00658C  2A0E               	incf	(___awdiv@dividend+1)^0,f,c
 15495   00658E  0E01               	movlw	1
 15496   006590  1A12               	xorwf	___awdiv@sign^0,f,c
 15497   006592                     l7687:
 15498   006592  0E00               	movlw	0
 15499   006594  6E14               	movwf	(___awdiv@quotient+1)^0,c
 15500   006596  0E00               	movlw	0
 15501   006598  6E13               	movwf	___awdiv@quotient^0,c
 15502   00659A  500F               	movf	___awdiv@divisor^0,w,c
 15503   00659C  1010               	iorwf	(___awdiv@divisor+1)^0,w,c
 15504   00659E  B4D8               	btfsc	status,2,c
 15505   0065A0  EFD4  F032         	goto	u7781
 15506   0065A4  EFD6  F032         	goto	u7780
 15507   0065A8                     u7781:
 15508   0065A8  EFFE  F032         	goto	l7709
 15509   0065AC                     u7780:
 15510   0065AC  0E01               	movlw	1
 15511   0065AE  6E11               	movwf	___awdiv@counter^0,c
 15512   0065B0  EFDE  F032         	goto	l7695
 15513   0065B4                     l7693:
 15514   0065B4  90D8               	bcf	status,0,c
 15515   0065B6  360F               	rlcf	___awdiv@divisor^0,f,c
 15516   0065B8  3610               	rlcf	(___awdiv@divisor+1)^0,f,c
 15517   0065BA  2A11               	incf	___awdiv@counter^0,f,c
 15518   0065BC                     l7695:
 15519   0065BC  AE10               	btfss	(___awdiv@divisor+1)^0,7,c
 15520   0065BE  EFE3  F032         	goto	u7791
 15521   0065C2  EFE5  F032         	goto	u7790
 15522   0065C6                     u7791:
 15523   0065C6  EFDA  F032         	goto	l7693
 15524   0065CA                     u7790:
 15525   0065CA                     l7697:
 15526   0065CA  90D8               	bcf	status,0,c
 15527   0065CC  3613               	rlcf	___awdiv@quotient^0,f,c
 15528   0065CE  3614               	rlcf	(___awdiv@quotient+1)^0,f,c
 15529   0065D0  500F               	movf	___awdiv@divisor^0,w,c
 15530   0065D2  5C0D               	subwf	___awdiv@dividend^0,w,c
 15531   0065D4  5010               	movf	(___awdiv@divisor+1)^0,w,c
 15532   0065D6  580E               	subwfb	(___awdiv@dividend+1)^0,w,c
 15533   0065D8  A0D8               	btfss	status,0,c
 15534   0065DA  EFF1  F032         	goto	u7801
 15535   0065DE  EFF3  F032         	goto	u7800
 15536   0065E2                     u7801:
 15537   0065E2  EFF8  F032         	goto	l7705
 15538   0065E6                     u7800:
 15539   0065E6  500F               	movf	___awdiv@divisor^0,w,c
 15540   0065E8  5E0D               	subwf	___awdiv@dividend^0,f,c
 15541   0065EA  5010               	movf	(___awdiv@divisor+1)^0,w,c
 15542   0065EC  5A0E               	subwfb	(___awdiv@dividend+1)^0,f,c
 15543   0065EE  8013               	bsf	___awdiv@quotient^0,0,c
 15544   0065F0                     l7705:
 15545   0065F0  90D8               	bcf	status,0,c
 15546   0065F2  3210               	rrcf	(___awdiv@divisor+1)^0,f,c
 15547   0065F4  320F               	rrcf	___awdiv@divisor^0,f,c
 15548   0065F6  2E11               	decfsz	___awdiv@counter^0,f,c
 15549   0065F8  EFE5  F032         	goto	l7697
 15550   0065FC                     l7709:
 15551   0065FC  5012               	movf	___awdiv@sign^0,w,c
 15552   0065FE  B4D8               	btfsc	status,2,c
 15553   006600  EF04  F033         	goto	u7811
 15554   006604  EF06  F033         	goto	u7810
 15555   006608                     u7811:
 15556   006608  EF0A  F033         	goto	l7713
 15557   00660C                     u7810:
 15558   00660C  6C13               	negf	___awdiv@quotient^0,c
 15559   00660E  1E14               	comf	(___awdiv@quotient+1)^0,f,c
 15560   006610  B0D8               	btfsc	status,0,c
 15561   006612  2A14               	incf	(___awdiv@quotient+1)^0,f,c
 15562   006614                     l7713:
 15563   006614  C013  F00D         	movff	___awdiv@quotient,?___awdiv
 15564   006618  C014  F00E         	movff	___awdiv@quotient+1,?___awdiv+1
 15565   00661C  0012               	return		;funcret
 15566   00661E                     __end_of___awdiv:
 15567                           	callstack 0
 15568                           
 15569 ;; *************** function _samples *****************
 15570 ;; Defined at:
 15571 ;;		line 22 in file "main.c"
 15572 ;; Parameters:    Size  Location     Type
 15573 ;;		None
 15574 ;; Auto vars:     Size  Location     Type
 15575 ;;  sample          2   10[COMRAM] unsigned int 
 15576 ;; Return value:  Size  Location     Type
 15577 ;;                  1    wreg      void 
 15578 ;; Registers used:
 15579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15580 ;; Tracked objects:
 15581 ;;		On entry : 0/0
 15582 ;;		On exit  : 0/0
 15583 ;;		Unchanged: 0/0
 15584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15585 ;;      Params:         0       0       0       0       0       0       0       0       0
 15586 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15587 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15588 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15589 ;;Total ram usage:        6 bytes
 15590 ;; Hardware stack levels used: 1
 15591 ;; Hardware stack levels required when called: 1
 15592 ;; This function calls:
 15593 ;;		_convAD
 15594 ;; This function is called by:
 15595 ;;		Interrupt level 2
 15596 ;; This function uses a non-reentrant model
 15597 ;;
 15598                           
 15599                           	psect	intcode
 15600   000008                     __pintcode:
 15601                           	callstack 0
 15602   000008                     _samples:
 15603                           	callstack 20
 15604                           
 15605                           ;incstack = 0
 15606   000008  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15607   00000A  EDAC  F033         	call	int_func,f	;refresh shadow registers
 15608                           
 15609                           	psect	intcode_body
 15610   006758                     __pintcode_body:
 15611                           	callstack 20
 15612   006758                     int_func:
 15613                           	callstack 20
 15614   006758  0006               	pop		; remove dummy address from shadow register refresh
 15615   00675A  CFD9 F007          	movff	fsr2l,??_samples
 15616   00675E  CFDA F008          	movff	fsr2h,??_samples+1
 15617   006762  CFF3 F009          	movff	prodl,??_samples+2
 15618   006766  CFF4 F00A          	movff	prodh,??_samples+3
 15619   00676A                     
 15620                           ;main.c: 23:     unsigned int sample;;main.c: 24:     if(INTCONbits.TMR0IF){
 15621   00676A  A4F2               	btfss	242,2,c	;volatile
 15622   00676C  EFBA  F033         	goto	i2u538_41
 15623   006770  EFBC  F033         	goto	i2u538_40
 15624   006774                     i2u538_41:
 15625   006774  EFE8  F033         	goto	i2l152
 15626   006778                     i2u538_40:
 15627   006778                     
 15628                           ;main.c: 25:         INTCONbits.TMR0IF=0;
 15629   006778  94F2               	bcf	242,2,c	;volatile
 15630   00677A                     
 15631                           ;main.c: 26:         TMR0L=28;
 15632   00677A  0E1C               	movlw	28
 15633   00677C  6ED6               	movwf	214,c	;volatile
 15634   00677E                     
 15635                           ;main.c: 27:         sample=convAD();
 15636   00677E  EC98  F036         	call	_convAD	;wreg free
 15637   006782  C001  F00B         	movff	?_convAD,samples@sample
 15638   006786  C002  F00C         	movff	?_convAD+1,samples@sample+1
 15639   00678A                     
 15640                           ;main.c: 28:         if(!canal){
 15641   00678A  5050               	movf	_canal^0,w,c
 15642   00678C  A4D8               	btfss	status,2,c
 15643   00678E  EFCB  F033         	goto	i2u539_41
 15644   006792  EFCD  F033         	goto	i2u539_40
 15645   006796                     i2u539_41:
 15646   006796  EFDB  F033         	goto	i2l5701
 15647   00679A                     i2u539_40:
 15648   00679A                     
 15649                           ;main.c: 29:             a[k]=sample;
 15650   00679A  5051               	movf	_k^0,w,c
 15651   00679C  0D02               	mullw	2
 15652   00679E  0E40               	movlw	low _a
 15653   0067A0  24F3               	addwf	243,w,c
 15654   0067A2  6ED9               	movwf	fsr2l,c
 15655   0067A4  0E04               	movlw	high _a
 15656   0067A6  20F4               	addwfc	prodh,w,c
 15657   0067A8  6EDA               	movwf	fsr2h,c
 15658   0067AA  C00B  FFDE         	movff	samples@sample,postinc2
 15659   0067AE  C00C  FFDD         	movff	samples@sample+1,postdec2
 15660                           
 15661                           ;main.c: 30:         }else{
 15662   0067B2  EFE7  F033         	goto	i2l5703
 15663   0067B6                     i2l5701:
 15664                           
 15665                           ;main.c: 31:             b[k]=sample;
 15666   0067B6  5051               	movf	_k^0,w,c
 15667   0067B8  0D02               	mullw	2
 15668   0067BA  0E00               	movlw	low _b
 15669   0067BC  24F3               	addwf	243,w,c
 15670   0067BE  6ED9               	movwf	fsr2l,c
 15671   0067C0  0E04               	movlw	high _b
 15672   0067C2  20F4               	addwfc	prodh,w,c
 15673   0067C4  6EDA               	movwf	fsr2h,c
 15674   0067C6  C00B  FFDE         	movff	samples@sample,postinc2
 15675   0067CA  C00C  FFDD         	movff	samples@sample+1,postdec2
 15676   0067CE                     i2l5703:
 15677                           
 15678                           ;main.c: 33:         k++;
 15679   0067CE  2A51               	incf	_k^0,f,c
 15680   0067D0                     i2l152:
 15681   0067D0  C00A  FFF4         	movff	??_samples+3,prodh
 15682   0067D4  C009  FFF3         	movff	??_samples+2,prodl
 15683   0067D8  C008  FFDA         	movff	??_samples+1,fsr2h
 15684   0067DC  C007  FFD9         	movff	??_samples,fsr2l
 15685   0067E0  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15686   0067E2  0011               	retfie		f
 15687   0067E4                     __end_of_samples:
 15688                           	callstack 0
 15689                           
 15690 ;; *************** function _convAD *****************
 15691 ;; Defined at:
 15692 ;;		line 301 in file "main.c"
 15693 ;; Parameters:    Size  Location     Type
 15694 ;;		None
 15695 ;; Auto vars:     Size  Location     Type
 15696 ;;  result          2    4[COMRAM] unsigned int 
 15697 ;; Return value:  Size  Location     Type
 15698 ;;                  2    0[COMRAM] unsigned int 
 15699 ;; Registers used:
 15700 ;;		wreg, status,2
 15701 ;; Tracked objects:
 15702 ;;		On entry : 0/0
 15703 ;;		On exit  : 0/0
 15704 ;;		Unchanged: 0/0
 15705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15706 ;;      Params:         2       0       0       0       0       0       0       0       0
 15707 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15708 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15709 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15710 ;;Total ram usage:        6 bytes
 15711 ;; Hardware stack levels used: 1
 15712 ;; This function calls:
 15713 ;;		Nothing
 15714 ;; This function is called by:
 15715 ;;		_samples
 15716 ;; This function uses a non-reentrant model
 15717 ;;
 15718                           
 15719                           	psect	text54
 15720   006D30                     __ptext54:
 15721                           	callstack 0
 15722   006D30                     _convAD:
 15723                           	callstack 20
 15724   006D30                     
 15725                           ;main.c: 302:     unsigned int result;;main.c: 304:     ADRESH=0;
 15726   006D30  0E00               	movlw	0
 15727   006D32  6EC4               	movwf	196,c	;volatile
 15728                           
 15729                           ;main.c: 305:     ADRESL=0;
 15730   006D34  0E00               	movlw	0
 15731   006D36  6EC3               	movwf	195,c	;volatile
 15732   006D38                     
 15733                           ;main.c: 306:     ADCON0bits.ADON=1;
 15734   006D38  80C2               	bsf	194,0,c	;volatile
 15735   006D3A                     
 15736                           ;main.c: 307:     ADCON0bits.GO=1;
 15737   006D3A  82C2               	bsf	194,1,c	;volatile
 15738   006D3C                     i2l243:
 15739   006D3C  B2C2               	btfsc	194,1,c	;volatile
 15740   006D3E  EFA3  F036         	goto	i2u508_41
 15741   006D42  EFA5  F036         	goto	i2u508_40
 15742   006D46                     i2u508_41:
 15743   006D46  EF9E  F036         	goto	i2l243
 15744   006D4A                     i2u508_40:
 15745   006D4A                     
 15746                           ;main.c: 310:     result = ((unsigned int)ADRESH<<8) | (ADRESL);
 15747   006D4A  50C4               	movf	196,w,c	;volatile
 15748   006D4C  6E03               	movwf	??_convAD^0,c
 15749   006D4E  50C3               	movf	195,w,c	;volatile
 15750   006D50  6E05               	movwf	convAD@result^0,c
 15751   006D52  C003  F006         	movff	??_convAD,convAD@result+1
 15752   006D56                     
 15753                           ;main.c: 311:     return(result);
 15754   006D56  C005  F001         	movff	convAD@result,?_convAD
 15755   006D5A  C006  F002         	movff	convAD@result+1,?_convAD+1
 15756   006D5E  0012               	return		;funcret
 15757   006D60                     __end_of_convAD:
 15758                           	callstack 0
 15759                           
 15760                           	psect	rparam
 15761   000000                     
 15762                           	psect	temp
 15763   000052                     btemp:
 15764                           	callstack 0
 15765   000052                     	ds	1
 15766   000000                     int$flags	set	btemp
 15767   000000                     wtemp8	set	btemp+1
 15768   000000                     ttemp5	set	btemp+1
 15769   000000                     ttemp6	set	btemp+4
 15770   000000                     ttemp7	set	btemp+8
 15771                           
 15772                           	psect	idloc
 15773                           
 15774                           ;Config register IDLOC0 @ 0x200000
 15775                           ;	unspecified, using default values
 15776   200000                     	org	2097152
 15777   200000  FF                 	db	255
 15778                           
 15779                           ;Config register IDLOC1 @ 0x200001
 15780                           ;	unspecified, using default values
 15781   200001                     	org	2097153
 15782   200001  FF                 	db	255
 15783                           
 15784                           ;Config register IDLOC2 @ 0x200002
 15785                           ;	unspecified, using default values
 15786   200002                     	org	2097154
 15787   200002  FF                 	db	255
 15788                           
 15789                           ;Config register IDLOC3 @ 0x200003
 15790                           ;	unspecified, using default values
 15791   200003                     	org	2097155
 15792   200003  FF                 	db	255
 15793                           
 15794                           ;Config register IDLOC4 @ 0x200004
 15795                           ;	unspecified, using default values
 15796   200004                     	org	2097156
 15797   200004  FF                 	db	255
 15798                           
 15799                           ;Config register IDLOC5 @ 0x200005
 15800                           ;	unspecified, using default values
 15801   200005                     	org	2097157
 15802   200005  FF                 	db	255
 15803                           
 15804                           ;Config register IDLOC6 @ 0x200006
 15805                           ;	unspecified, using default values
 15806   200006                     	org	2097158
 15807   200006  FF                 	db	255
 15808                           
 15809                           ;Config register IDLOC7 @ 0x200007
 15810                           ;	unspecified, using default values
 15811   200007                     	org	2097159
 15812   200007  FF                 	db	255
 15813                           
 15814                           	psect	config
 15815                           
 15816                           ;Config register CONFIG1L @ 0x300000
 15817                           ;	PLL Prescaler Selection bits
 15818                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 15819                           ;	System Clock Postscaler Selection bits
 15820                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 15821                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 15822                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 15823   300000                     	org	3145728
 15824   300000  00                 	db	0
 15825                           
 15826                           ;Config register CONFIG1H @ 0x300001
 15827                           ;	Oscillator Selection bits
 15828                           ;	FOSC = HS, HS oscillator (HS)
 15829                           ;	Fail-Safe Clock Monitor Enable bit
 15830                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 15831                           ;	Internal/External Oscillator Switchover bit
 15832                           ;	IESO = OFF, Oscillator Switchover mode disabled
 15833   300001                     	org	3145729
 15834   300001  0C                 	db	12
 15835                           
 15836                           ;Config register CONFIG2L @ 0x300002
 15837                           ;	Power-up Timer Enable bit
 15838                           ;	PWRT = OFF, PWRT disabled
 15839                           ;	Brown-out Reset Enable bits
 15840                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 15841                           ;	Brown-out Reset Voltage bits
 15842                           ;	BORV = 3, Minimum setting 2.05V
 15843                           ;	USB Voltage Regulator Enable bit
 15844                           ;	VREGEN = OFF, USB voltage regulator disabled
 15845   300002                     	org	3145730
 15846   300002  19                 	db	25
 15847                           
 15848                           ;Config register CONFIG2H @ 0x300003
 15849                           ;	Watchdog Timer Enable bit
 15850                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 15851                           ;	Watchdog Timer Postscale Select bits
 15852                           ;	WDTPS = 32768, 1:32768
 15853   300003                     	org	3145731
 15854   300003  1E                 	db	30
 15855                           
 15856                           ; Padding undefined space
 15857   300004                     	org	3145732
 15858   300004  FF                 	db	255
 15859                           
 15860                           ;Config register CONFIG3H @ 0x300005
 15861                           ;	CCP2 MUX bit
 15862                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
 15863                           ;	PORTB A/D Enable bit
 15864                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 15865                           ;	Low-Power Timer 1 Oscillator Enable bit
 15866                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 15867                           ;	MCLR Pin Enable bit
 15868                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
 15869   300005                     	org	3145733
 15870   300005  02                 	db	2
 15871                           
 15872                           ;Config register CONFIG4L @ 0x300006
 15873                           ;	Stack Full/Underflow Reset Enable bit
 15874                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 15875                           ;	Single-Supply ICSP Enable bit
 15876                           ;	LVP = OFF, Single-Supply ICSP disabled
 15877                           ;	Extended Instruction Set Enable bit
 15878                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 15879                           ;	Background Debugger Enable bit
 15880                           ;	DEBUG = 0x1, unprogrammed default
 15881   300006                     	org	3145734
 15882   300006  80                 	db	128
 15883                           
 15884                           ; Padding undefined space
 15885   300007                     	org	3145735
 15886   300007  FF                 	db	255
 15887                           
 15888                           ;Config register CONFIG5L @ 0x300008
 15889                           ;	Code Protection bit
 15890                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 15891                           ;	Code Protection bit
 15892                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 15893                           ;	Code Protection bit
 15894                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 15895                           ;	Code Protection bit
 15896                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 15897   300008                     	org	3145736
 15898   300008  0F                 	db	15
 15899                           
 15900                           ;Config register CONFIG5H @ 0x300009
 15901                           ;	Boot Block Code Protection bit
 15902                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 15903                           ;	Data EEPROM Code Protection bit
 15904                           ;	CPD = OFF, Data EEPROM is not code-protected
 15905   300009                     	org	3145737
 15906   300009  C0                 	db	192
 15907                           
 15908                           ;Config register CONFIG6L @ 0x30000A
 15909                           ;	Write Protection bit
 15910                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 15911                           ;	Write Protection bit
 15912                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 15913                           ;	Write Protection bit
 15914                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 15915                           ;	Write Protection bit
 15916                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 15917   30000A                     	org	3145738
 15918   30000A  0F                 	db	15
 15919                           
 15920                           ;Config register CONFIG6H @ 0x30000B
 15921                           ;	Configuration Register Write Protection bit
 15922                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 15923                           ;	Boot Block Write Protection bit
 15924                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 15925                           ;	Data EEPROM Write Protection bit
 15926                           ;	WRTD = OFF, Data EEPROM is not write-protected
 15927   30000B                     	org	3145739
 15928   30000B  E0                 	db	224
 15929                           
 15930                           ;Config register CONFIG7L @ 0x30000C
 15931                           ;	Table Read Protection bit
 15932                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 15933                           ;	Table Read Protection bit
 15934                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 15935                           ;	Table Read Protection bit
 15936                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 15937                           ;	Table Read Protection bit
 15938                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 15939   30000C                     	org	3145740
 15940   30000C  0F                 	db	15
 15941                           
 15942                           ;Config register CONFIG7H @ 0x30000D
 15943                           ;	Boot Block Table Read Protection bit
 15944                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 15945   30000D                     	org	3145741
 15946   30000D  40                 	db	64
 15947                           tosu	equ	0xFFF
 15948                           tosh	equ	0xFFE
 15949                           tosl	equ	0xFFD
 15950                           stkptr	equ	0xFFC
 15951                           pclatu	equ	0xFFB
 15952                           pclath	equ	0xFFA
 15953                           pcl	equ	0xFF9
 15954                           tblptru	equ	0xFF8
 15955                           tblptrh	equ	0xFF7
 15956                           tblptrl	equ	0xFF6
 15957                           tablat	equ	0xFF5
 15958                           prodh	equ	0xFF4
 15959                           prodl	equ	0xFF3
 15960                           indf0	equ	0xFEF
 15961                           postinc0	equ	0xFEE
 15962                           postdec0	equ	0xFED
 15963                           preinc0	equ	0xFEC
 15964                           plusw0	equ	0xFEB
 15965                           fsr0h	equ	0xFEA
 15966                           fsr0l	equ	0xFE9
 15967                           wreg	equ	0xFE8
 15968                           indf1	equ	0xFE7
 15969                           postinc1	equ	0xFE6
 15970                           postdec1	equ	0xFE5
 15971                           preinc1	equ	0xFE4
 15972                           plusw1	equ	0xFE3
 15973                           fsr1h	equ	0xFE2
 15974                           fsr1l	equ	0xFE1
 15975                           bsr	equ	0xFE0
 15976                           indf2	equ	0xFDF
 15977                           postinc2	equ	0xFDE
 15978                           postdec2	equ	0xFDD
 15979                           preinc2	equ	0xFDC
 15980                           plusw2	equ	0xFDB
 15981                           fsr2h	equ	0xFDA
 15982                           fsr2l	equ	0xFD9
 15983                           status	equ	0xFD8

Data Sizes:
    Strings     78
    Constant    112
    Data        0
    BSS         1207
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     69      81
    BANK0           160    160     160
    BANK1           256    106     245
    BANK2           256      0     256
    BANK3           256     16     224
    BANK4           256      0     256
    BANK5           256      0     208
    BANK6           256      0     128
    BANK7           256      0       0

Pointer List with Targets:

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_13(CODE[1]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK5[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK5[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_10(CODE[4]), STR_7(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_10(CODE[4]), STR_7(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK5[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK5[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK5[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK5[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK5[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[13]), STR_4(CODE[16]), STR_3(CODE[10]), STR_2(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[13]), STR_4(CODE[16]), STR_3(CODE[10]), STR_2(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[13]), STR_4(CODE[16]), STR_3(CODE[10]), STR_2(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[13]), STR_4(CODE[16]), STR_3(CODE[10]), STR_2(CODE[14]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1343$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK5[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK5[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK5[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[13]), STR_4(CODE[16]), STR_3(CODE[10]), STR_2(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> info2(BANK1[10]), info(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1264$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1264$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    __rem_pio2f@y	PTR  size(2) Largest target is 4
		 -> sinf@y(BANK1[4]), cosf@y(BANK1[4]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_6(CODE[4]), info2(BANK1[10]), info(BANK1[10]), STR_1(CODE[13]), 

    normalize@X	PTR float  size(2) Largest target is 128
		 -> Re_X1(BANK2[128]), 

    bitrevsort@Im_x	PTR float  size(2) Largest target is 128
		 -> Im_X(BANK4[128]), 

    bitrevsort@Re_x	PTR float  size(2) Largest target is 128
		 -> Re_X(BANK3[128]), 

    FFT@Im_X	PTR float  size(2) Largest target is 128
		 -> Im_X(BANK4[128]), 

    FFT@Re_X	PTR float  size(2) Largest target is 128
		 -> Re_X(BANK3[128]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _efgtoa->___fltol
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _sqrtf->___fladd
    ___flge->___flmul
    _normalize->___fltol
    _configSampling->_configADCON
    _bitrevsort->___awdiv
    _SPI_config->_SPI_MCP41
    _SPI_MCP41->_SPI_transm
    _LCD_Initialize->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble
    _FFT->___fltol
    _logf->___fladd
    ___fldiv->___fladd
    ___sindf->___fladd
    ___rem_pio2f->___fltol
    ___fltol->___fladd
    ___flsub->___fladd
    ___flneg->___fladd
    ___cosdf->___fladd
    ___flmul->___xxtofl
    ___fladd->___flmul

Critical Paths under _samples in COMRAM

    _samples->_convAD

Critical Paths under _main in BANK0

    _main->_FFT
    _verifRes->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _floorf->___fldiv
    _normalize->___fltol
    _sinf->___rem_pio2f
    _logf->___fldiv
    ___fldiv->___flsub
    _cosf->___rem_pio2f
    ___sindf->___flneg
    ___rem_pio2f->___fltol
    ___fltol->_logf
    ___flneg->___fldiv

Critical Paths under _samples in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_FFT
    _verifRes->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _FFT->_cosf
    _FFT->_sinf

Critical Paths under _samples in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _samples in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _samples in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _samples in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _samples in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _samples in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _samples in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  603920
                                            104 BANK1      2     2      0
                                              0 BANK3     16    16      0
                                _FFT
                          _LCDPutCmd
                          _LCDPutStr
                     _LCD_Initialize
                         _SPI_config
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                         _bitrevsort
                     _configSampling
                               _logf
                          _normalize
                            _regInit
                              _sqrtf
                           _verifRes
 ---------------------------------------------------------------------------------
 (1) _verifRes                                             4     4      0   88931
                                            155 BANK0      4     4      0
                            _LCDGoto
                          _LCDPutCmd
                          _LCDPutStr
                          _SPI_MCP41
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                        _configADCON
                            _regInit
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8   63255
                                            142 BANK0     13    13      0
                                             56 BANK1      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   62217
                                            140 BANK0      2     2      0
                                             50 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           24    18      6   61723
                                            126 BANK0     14    14      0
                                             44 BANK1      6     0      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   58022
                                            117 BANK0      9     2      7
                                              0 BANK1     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     4      4     497
                                             12 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3073
                                             28 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             21 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                             12 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                             12 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                             12 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             33 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                             12 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                             12 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 9     7      2    1404
                                             18 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     259
                                             12 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              4     2      2     281
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     412
                                             12 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _regInit                                              4     4      0     130
                                             12 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _LCDPutStr                                            5     3      2    1287
                                             17 COMRAM     5     3      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (3) _LCDPutChar                                           2     2      0     586
                                             15 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (2) _LCDGoto                                              6     5      1     958
                                             17 COMRAM     6     5      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _sqrtf                                               49    45      4   27233
                                              0 BANK0     45    41      4
                            ___fladd
                             ___flge
                            ___flmul
                               _nanf
 ---------------------------------------------------------------------------------
 (2) _nanf                                                 8     4      4     124
                                             12 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1886
                                             51 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _normalize                                           11     7      4   36849
                                            117 BANK0     11     7      4
                            ___awdiv
                            ___fladd
                            ___fldiv
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _configSampling                                       2     2      0     633
                                             15 COMRAM     2     2      0
                        _configADCON
 ---------------------------------------------------------------------------------
 (2) _configADCON                                          3     1      2     633
                                             12 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _bitrevsort                                          23    17      6    2783
                                             20 COMRAM    23    17      6
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _SPI_config                                           0     0      0     373
                          _SPI_MCP41
 ---------------------------------------------------------------------------------
 (2) _SPI_MCP41                                            2     1      1     373
                                             13 COMRAM     2     1      1
                         _SPI_transm
 ---------------------------------------------------------------------------------
 (3) _SPI_transm                                           1     1      0      41
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     586
                                             17 COMRAM     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            2     2      0     586
                                             15 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (4) _LCDWriteNibble                                       3     2      1     490
                                             12 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _FFT                                                 69    63      6  347667
                                            157 BANK0      3     3      0
                                             38 BANK1     66    60      6
                            ___awdiv
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _cosf
                               _logf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                38    34      4  123948
                                              0 BANK1     38    34      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                            ___flsub
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (1) _logf                                                76    72      4   47828
                                             33 BANK0     76    72      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    5243
                                              8 BANK0     25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _cosf                                                38    34      4  123849
                                              0 BANK1     38    34      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                            ___flsub
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   25282
                                             37 BANK0     32    28      4
                            ___fladd
                            ___flmul
                            ___flneg (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         44    38      6   44705
                                            117 BANK0     40    34      6
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     251
                                             12 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1826
                                             12 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1147
                                             67 COMRAM     2     2      0
                                            109 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                               _logf (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8   14987
                                              0 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4    1235
                                             33 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   25186
                                              0 BANK0     28    24      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8   12593
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8   11182
                                             51 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1525
                                             12 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _samples                                             6     6      0      68
                                              6 COMRAM     6     6      0
                             _convAD
 ---------------------------------------------------------------------------------
 (11) _convAD                                              6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FFT
     ___awdiv
     ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___flneg
       ___cosdf (ARG)
         ___fladd
         ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___flsub
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _logf (ARG)
         ___fladd
         ___fldiv
         ___flmul
         ___flsub
         ___xxtofl
     ___xxtofl
     _cosf
       ___cosdf
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul
         ___flneg (ARG)
         ___flsub (ARG)
     _logf
     _sinf
       ___cosdf
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
       ___rem_pio2f (ARG)
       ___sindf (ARG)
   _LCDPutCmd
     _LCDWriteNibble
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd
   _SPI_config
     _SPI_MCP41
       _SPI_transm
   ___fladd
   ___fldiv
   ___flge
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___flsub
   ___fltol
   ___xxtofl
   _bitrevsort
     ___awdiv
   _configSampling
     _configADCON
   _logf
   _normalize
     ___awdiv
     ___fladd
     ___fldiv
     ___flsub
     ___fltol
     ___xxtofl
   _regInit
   _sqrtf
     ___fladd
     ___flge
     ___flmul
     _nanf
   _verifRes
     _LCDGoto
       _LCDPutCmd
     _LCDPutCmd
     _LCDPutStr
     _SPI_MCP41
     ___fldiv
     ___flge
     ___flmul
     ___xxtofl
     _configADCON
     _regInit
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
             _strcpy
           _fputc
           _isdigit

 _samples (ROOT)
   _convAD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      80      17       50.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      D0      15       81.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0     100      13      100.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     10      E0      11       87.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6A      F5       7       95.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     45      51       1       86.2%
BITBIGSFRllhlll     2B      0       0      27        0.0%
BITBIGSFRllll       20      0       0      29        0.0%
BITBIGSFRlh         1A      0       0      21        0.0%
BITBIGSFRlllh        F      0       0      28        0.0%
BITBIGSFRh           D      0       0      20        0.0%
BITBIGSFRllhllh      6      0       0      24        0.0%
BITBIGSFRllhlh       2      0       0      23        0.0%
BITBIGSFRllhllh      1      0       0      25        0.0%
BITBIGSFRllhllh      1      0       0      26        0.0%
BITBIGSFRllhh        1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     616      30        0.0%
DATA                 0      0     616       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Dec 14 20:52:23 2022

           ___fldiv@aexp 0080             ___fldiv@bexp 007F                        _a 0440  
                      _b 0400                        _e 0170                        _k 0051  
                      _v 0172           _LCD_Initialize 6A7C             ___fldiv@sign 0078  
            _SSPSTATbits 000FC7                       _C0 085D                       _C1 0859  
                     _C2 0855                       _C3 0851                       _D2 0100  
            ?_LCDPutChar 0001                       _S1 0839                       _S2 0835  
                     _S3 0831                       _S4 082D             ___awdiv@sign 0012  
             _SPI_config 6E30      ___wmul@multiplicand 000F              bitrevsort@N 0015  
            bitrevsort@k 0026              bitrevsort@m 002A              bitrevsort@n 0028  
                    l203 5048                      l212 26B8                      l215 2A24  
                    l240 6E88                      l218 2B92                      l228 59B0  
                    l252 69BA                      l172 1164                      l237 5D8A  
                    l181 648E                      l262 6D8C                      l191 673C  
                    l271 68D6                      l520 661C                      l280 6E54  
                    l192 674E                      l265 6DBA                      l193 6756  
                    l274 6CC0                      l259 6AD2                      l283 6E64  
                    l188 672E                      l196 4CE0                      l277 6E4C  
                    l286 6E78                      l289 6E0C                      l554 624E  
                    l563 6CFA                      l548 66C6                      l910 47BA  
                    l903 45C4                      l559 6294                      l920 48EA  
                    l912 4832                      l817 3D9E                      l913 4820  
                    l834 3EB8                      l826 406E                      l818 3D8C  
                    l586 6190                      l843 3F88                      l819 3D52  
                    l907 4928                      l844 3F76                      l951 5E7A  
                    l871 4CC4                      l944 5DE2                      l873 4B24  
                    l882 4B6A                      l859 6BBC                      l947 5F3E  
                    l884 4BE2                      l876 4AE8                      l981 36EE  
                    l885 4BD0                      l958 5ED6                      l977 3152  
                    _FFT 2476               _SPI_transm 6E4E                      _Lg1 0821  
                    _Lg2 081D                      _Lg3 0819                      _Lg4 0815  
                    _pad 67E4                      prod 000FF3                      wreg 000FE8  
           ___flmul@aexp 0028             ___flmul@bexp 002D             ___flmul@sign 0027  
           ___flmul@temp 0032             ___flmul@prod 002E                     FFT@L 01EF  
                   FFT@M 01CF                     FFT@N 01B1                     FFT@k 01E3  
                   FFT@m 01ED                     FFT@n 01F1                     FFT@p 01DD  
        __end_of_LCDGoto 69BC                     ?_FFT 01B1             ___fltol@exp1 0045  
                   l1017 5BAE                     l1035 44FE                     l1140 1D2A  
                   l1037 432A                     l1125 6806                     l1054 6D2E  
                   l1303 6558                     l1311 6C46                     l1143 169A  
                   l1215 6B24                     l1208 5360                     l1049 5592  
                   l1225 6392                     l1129 685C                     l1145 14DE  
                   l1314 6E8A                     l1331 2B94                     l1251 6088  
                   l1091 6A7A                     l1260 56EC                     l1077 2474  
                   l1173 1AEE                     l1335 3150                     l1248 6080  
                   l1257 57A8                     l1370 3BAE                     l1282 6A10  
                   l1267 6DE6                     l1275 6C02                     l1291 6B74  
                   l1381 3A10                     l1285 6A20                     l1374 38EE  
                   l1391 6E2E                     l1383 3B18                     l1378 394C  
                   l1397 6C86                     l6101 3BDC                     l6111 3C16  
                   l6103 3BEC                     l6201 3DE0                     l6121 3C44  
                   l6113 3C1C                     l6105 3BFC                     l7001 5F58  
                   l6211 3E1A                     l6203 3DEE                     l6131 3C78  
                   l6123 3C46                     l6115 3C2E                     l6107 3BFE  
                   l7011 5FEC                     l7003 5F74                     l6221 3E86  
                   l6213 3E1C                     l6205 3DFC                     l6141 3CB4  
                   l6125 3C56                     l6133 3C80                     l6117 3C30  
                   l6109 3C06                     l7021 6064                     l7005 5FA8  
                   l6301 6C26                     l7101 50B0                     ?_pad 001D  
                   l6231 3EDE                     l6223 3E88                     l6215 3E26  
                   l6207 3E08                     l6151 3CC8                     l6143 3CB8  
                   l6135 3C90                     l6127 3C66                     l6119 3C36  
                   l6311 4938                     l7031 6CAC                     l6303 6DE8  
                   l7007 5FB0                     l7111 5144                     l7103 50B8  
                   l6241 3F0C                     l6225 3E98                     l6209 3E0C  
                   l6217 3E2C                     l6161 3CDC                     l6153 3CCC  
                   l6145 3CBC                     l6137 3CA2                     l6129 3C76  
                   l7201 59B2                     l7041 5DAC                     l6401 4B68  
                   l6321 4978                     l6313 4946                     l7033 6CBC  
                   l6305 6E04                     l7017 6022                     l7009 5FB8  
                   l6081 64A2                     l7121 51AE                     l7105 50C6  
                   l8001 4F06                     l6243 3F1A                     l6235 3EF2  
                   l6251 3F38                     l6219 3E52                     l6227 3EA8  
                   l6163 3CE0                     l6155 3CD0                     l6147 3CC0  
                   l6139 3CB0                     l6171 3CF0                     l7051 5E24  
                   l7043 5DF2                     l7211 4090                     l6411 4BC8  
                   l6403 4B7A                     l6331 499E                     l6323 497A  
                   l6315 4948                     l7035 6CBE                     l7027 6C8A  
                   l7019 6052                     l6083 64B4                     l7123 51B6  
                   l7131 51FA                     l7115 5152                     l7107 50EA  
                   l8011 4FBC                     l8003 4F68                     l6245 3F22  
                   l6237 3EFC                     l6229 3ECE                     l6253 3F46  
                   l6181 3D60                     l6173 3CF4                     l6165 3CE4  
                   l6157 3CD4                     l6149 3CC4                     l6093 3BB0  
                   l6501 4660                     l7061 5EAC                     l7053 5E30  
                   l7045 5E08                     l7037 5D8E                     l7221 4156  
                   l7213 40EE                     l7205 5362                     l6421 4C36  
                   l6405 4B88                     l6341 49DE                     l6333 49AC  
                   l6317 4958                     l6325 4982                     l6309 492A  
                   l7029 6CA2                     l7301 685E                     l6085 64BE  
                   l7141 52AC                     l7133 521A                     l7125 51BE  
                   l7109 5124                     l7117 518C                     l8021 5018  
                   l8013 4FC6                     l8005 4F6E                     l8101 0ADE  
                   l6263 3F98                     l6271 3FEE                     l6255 3F4A  
                   l6247 3F26                     l6239 3F0A                     l6191 3D8A  
                   l6183 3D6C                     l6175 3D1E                     l6167 3CE8  
                   l6159 3CD8                     l6095 3BBC                     l6511 46A6  
                   l6503 466E                     l7071 5EEA                     l7063 5EB8  
                   l7055 5E62                     l7039 5D9E                     l7231 42C6  
                   l7223 417A                     l7215 412C                     l6431 4CA0  
                   l6415 4BF2                     l6423 4C3A                     l6407 4B8C  
                   l6351 4A1E                     l6343 49E0                     l6335 49AE  
                   l6327 4992                     l6319 4968                     l7311 1D5C  
                   l7303 6866                     l6087 64DC                     l6079 6490  
                   l7143 52CC                     l7135 524E                     l7151 5326  
                   l7119 519C                     l8023 5024                     l8015 4FEC  
                   l8007 4F8A                     l8111 0B98                     l8103 0AEE  
                   l8031 08C4                     l6281 4040                     l6273 3FFE  
                   l6265 3FA4                     l6257 3F58                     l6249 3F36  
                   l6193 3DAC                     l6185 3D70                     l6177 3D3A  
                   l6169 3CEC                     l6097 3BCA                     l6521 4714  
                   l6513 46C0                     l6505 467A                     l7073 5F0E  
                   l7065 5EC6                     l7057 5E64                     l7049 5E1C  
                   l7241 435A                     l7233 42D8                     l7225 41E6  
                   l7209 4070                     l6433 4CA4                     l6425 4C54  
                   l6417 4BFE                     l6409 4B9A                     l6361 4A4E  
                   l6353 4A26                     l6337 49BE                     l6345 49E8  
                   l6329 4998                     l7313 1D66                     l6601 61C0  
                   l7305 6896                     l6089 6512                     l7129 51C6  
                   l7401 6A34                     l8025 503E                     l8017 4FF8  
                   l8009 4FB0                     l8121 0BB6                     l8105 0AF2  
                   l8041 08F8                     l8033 08C8                     l6291 405E  
                   l6283 4046                     l6275 400E                     l6267 3FB2  
                   l6259 3F6E                     l6195 3DBC                     l6187 3D7E  
                   l6179 3D4A                     l6099 3BCC                     l6531 47AA  
                   l6523 473E                     l6515 46D0                     l6507 468A  
                   l6451 451A                     l7075 5F1E                     l7067 5EE4  
                   l7059 5E70                     l7083 6CFC                     l7251 44B0  
                   l7243 43C6                     l7235 430E                     l7227 420C  
                   l7219 4138                     l6435 4CB2                     l6427 4C6A  
                   l6419 4C0C                     l6371 4A8C                     l6363 4A4E  
                   l6355 4A2A                     l6347 49F8                     l6339 49CE  
                   l7331 1EDE                     l7323 1E3C                     l7315 1D7C  
                   l6611 622E                     l6603 61D0                     l7411 694C  
                   l7307 689A                     l7139 5282                     l7155 5338  
                   l7091 504A                     l7403 6A3C                     l8027 5044  
                   l8019 5012                     l8123 108E                     l8115 0B9E  
                   l8051 095E                     l8043 08FC                     l8035 08CC  
                   l6285 4048                     l6277 402E                     l6269 3FEC  
                   l6189 3D80                     l6541 47EA                     l6533 47B8  
                   l6525 4774                     l6517 46EC                     l6509 4696  
                   l6461 4552                     l6453 451C                     l6621 6CC2  
                   l7077 5F2C                     l7069 5EE6                     l7085 6D1C  
                   l7245 43EC                     l7229 4264                     l7501 3508  
                   l6437 4CB8                     l6429 4C84                     l6381 4AD8  
                   l6373 4A9C                     l6349 4A0E                     l7341 1F54  
                   l7333 1EE6                     l7325 1E78                     l7317 1DB8  
                   l7309 1D2C                     l7181 6DA0                     l6613 623C  
                   l6605 61FE                     l7421 69A4                     l7413 695C  
                   l6701 6346                     l7149 52FA                     l7093 506E  
                   l7405 6A44                     l8133 10CE                     l8117 0BA2  
                   l8109 0B06                     l8045 0900                     l8037 08D8  
                   l8029 08C0                     l6287 404E                     l6279 4032  
                   l6199 3DD0                     l6551 485C                     l6543 4818  
                   l6535 47CA                     l6527 4782                     l6519 46F8  
                   l6471 457E                     l6463 4562                     l6455 452C  
                   l6447 4500                     l6623 6CDA                     l6631 60A2  
                   l7079 5F2E                     l7087 6D1E                     l7247 4444  
                   l7239 4336                     l7431 3172                     l6439 4CBA  
                   l6391 4B22                     l6383 4AE6                     l6375 4AAC  
                   l6367 4A62                     l6359 4A3E                     l7351 1F98  
                   l7335 1F1A                     l7327 1E80                     l7319 1DE0  
                   l7183 6DAA                     l6615 628C                     l6607 620E  
                   l7423 69AA                     l7415 6970                     l7191 6D7C  
                   l6295 6C04                     l6711 6C58                     l7095 507C  
                   l7263 6AD4                     l7407 6A62                     l8151 12FA  
                   l8135 112A                     l8143 1200                     l8127 1094  
                   l8071 09CC                     l8063 0992                     l8055 0964  
                   l8039 08F2                     l6289 405C                     l6561 48D2  
                   l6553 4886                     l6537 47D8                     l6529 47A0  
                   l6481 45D4                     l6473 458E                     l6465 4568  
                   l6457 453C                     l6449 450C                     l6625 6CEA  
                   l6641 60F2                     l7257 44E2                     l7249 449C  
                   l7513 358E                     l7433 31A2                     l6393 4B34  
                   l6385 4AF2                     l6377 4AB4                     l6369 4A7C  
                   l7361 20C0                     l7353 2014                     l7345 1F68  
                   l7337 1F2A                     l7601 2E7A                     l7185 6DB0  
                   l7425 6E68                     l6617 6292                     l6609 621C  
                   l7417 6980                     l7193 6D82                     l7281 63D0  
                   l7273 6394                     l6705 638A                     l6721 560C  
                   l6713 69BC                     l6297 6C10                     l6801 13D4  
                   l7097 5088                     l7265 6AE0                     l8145 1234  
                   l8137 11C0                     l8129 10BA                     l8081 0A30  
                   l8065 09C2                     l8057 097A                     l8049 0914  
                   l6563 48EE                     l6571 4914                     l6547 4842  
                   l6555 488A                     l6539 47DC                     l6491 460E  
                   l6483 45E4                     l6475 459E                     l6467 456E  
                   l6459 454C                     l6651 611C                     l6643 60F6  
                   l6635 60B6                     l7523 362A                     l7515 35C6  
                   l7507 3540                     l7451 3250                     l7443 31EC  
                   l7435 31A4                     l6395 4B4A                     l6387 4B10  
                   l6379 4AC4                     l7371 220C                     l7363 20F4  
                   l7355 2024                     l7347 1F84                     l7339 1F3E  
                   l7603 2E8C                     l7611 2EC4                     l7179 6D90  
                   l7195 6E50                     l7427 6E6A                     l7419 6994  
                   l7187 6D62                     l7283 63D4                     l7275 63B8  
                   l6731 56DC                     l6723 5620                     l6715 69DA  
                   l6299 6C22                     l6811 1408                     l6803 13D8  
                   l7099 508C                     l7267 6AFE                     l8147 1258  
                   l8139 11FA                     l8091 0A8E                     l8083 0A46  
                   l8075 09E0                     l8059 097E                     l7701 65E6  
                   l6573 4918                     l6565 48FE                     l6557 48A4  
                   l6549 484E                     l6493 4624                     l6477 45AE  
                   l6469 457C                     l6661 6144                     l6653 6126  
                   l6645 6104                     l6637 60E0                     l6629 608A  
                   l7533 368E                     l7509 3556                     l7453 3262  
                   l7437 31C2                     l6397 4B50                     l6389 4B12  
                   l7381 2304                     l7373 2240                     l7365 2128  
                   l7357 2034                     l7621 2F46                     l7197 6E62  
                   l7429 6E76                     l7189 6D72                     l7293 63EC  
                   l7285 63DC                     l7277 63BA                     l6741 5798  
                   l6725 562E                     l6733 5710                     l6717 5594  
                   l6709 6C48                     l6901 18D4                     l6821 1464  
                   l6805 13DE                     l7269 6B1A                     l8149 127E  
                   l8085 0A4A                     l8077 0A2A                     l8069 09C8  
                   l7711 660C                     l7703 65EE                     l6567 490C  
                   l6559 48B8                     l6495 4630                     l6487 45F8  
                   l6479 45B4                     l6663 6150                     l6655 6130  
                   l6639 60E2                     l7527 3666                     l7519 35EE  
                   l7455 329A                     l7463 330A                     l7439 31D8  
                   l7447 3214                     l6399 4B5A                     l7383 235C  
                   l7375 2274                     l7367 2180                     l7359 2068  
                   l7623 2F7A                     l7295 644C                     l7287 63E4  
                   l7279 63CA                     l6591 669A                     l6583 661E  
                   l6735 574C                     l6719 55B4                     l6751 6B4A  
                   l6911 1970                     l6903 18EA                     l6823 146A  
                   l6807 13E6                     l6815 1428                     l8095 0A94  
                   l7713 6614                     l7705 65F0                     l6569 490E  
                   l6497 4648                     l6489 4604                     l6577 6B76  
                   l6665 6160                     l7481 3402                     l7465 331C  
                   l7473 3378                     l7457 32CE                     l7449 3232  
                   l7385 23B4                     l7377 22A8                     l7369 21B4  
                   l7633 2FF0                     l7617 2EFC                     l7561 2C1A  
                   l7553 2BB4                     l7801 5880                     l7393 6E7C  
                   l7297 6450                     l6761 6BBE                     l6593 66BE  
                   l6585 664C                     l6737 5760                     l6729 56A0  
                   l6753 6B56                     l6745 6B26                     l6681 6826  
                   l6673 67E4                     l6913 19C6                     l6921 1A18  
                   l6905 191C                     l6841 14F4                     l6825 1472  
                   l6817 144E                     l6833 148E                     l6809 13FE  
                   l8097 0AB0                     l8089 0A5E                     l7707 65F6  
                   l6499 4654                     l6579 6B88                     l6667 6170  
                   l7483 3414                     l7467 3350                     l7387 23E8  
                   l7379 22DC                     l7643 3078                     l7635 3028  
                   l7619 2F0E                     l7627 2FA2                     l7571 2C92  
                   l7563 2C2E                     l7555 2BE4                     l7731 6AAA  
                   l7723 6A7C                     l7811 5976                     l7803 5910  
                   l7395 6E80                     l7299 646C                     l6763 6BC2  
                   l6595 66C4                     l6587 665C                     l6691 62F4  
                   l6739 5788                     l6747 6B3A                     l6755 6B5A  
                   l6683 682A                     l6675 67F2                     l6931 1A4A  
                   l6923 1A28                     l6915 19CC                     l6907 192C  
                   l6851 15EA                     l6843 1528                     l6835 14A8  
                   l6819 1460                     l8099 0ACE                     l7709 65FC  
                   l6669 6180                     l7485 344C                     l7493 34A8  
                   l7477 33C6                     l7389 241C                     l7653 30F0  
                   l7629 2FB8                     l7573 2CA4                     l7581 2D14  
                   l7557 2BE6                     l7821 24C4                     l7733 6AB0  
                   l7725 6A84                     l7741 6E30                     l7813 5982  
                   l7805 5930                     l7397 6E84                     l7717 6E0E  
                   l7901 3838                     l6757 6DBC                     l6765 6BD6  
                   l6589 668A                     l6693 631C                     l6749 6B46  
                   l6685 6848                     l6677 67FE                     l6941 1B1E  
                   l6933 1AC4                     l6925 1A30                     l6917 1A00  
                   l6909 193C                     l6861 16A2                     l6853 1620  
                   l6845 1566                     l6781 132E                     l6773 1306  
                   l7495 34BA                     l7487 3480                     l7479 33E4  
                   l7647 30B4                     l7639 3050                     l7591 2DCE  
                   l7583 2D48                     l7575 2CD8                     l7559 2C04  
                   l7567 2C56                     l7831 255C                     l7823 2528  
                   l7735 6AB6                     l7727 6A94                     l7743 6E3A  
                   l7807 593C                     l7815 5986                     l8471 6718  
                   l6599 6192                     l7719 6E1E                     l7911 38C6  
                   l7903 388E                     l6767 6BF8                     l6695 6328  
                   l6687 6296                     l6679 6812                     l6951 1B44  
                   l6943 1B22                     l6935 1AE4                     l6927 1A36  
                   l6919 1A14                     l6871 16D4                     l6863 16B0  
                   l6855 1628                     l6847 1598                     l6839 14EE  
                   l6791 1384                     l6783 1352                     l6775 130C  
                   l8463 51DC                     l7399 6A22                     l7681 6578  
                   l7673 655A                     l8481 36E0                     l8473 3116  
                   l7593 2E16                     l7569 2C74                     l7841 2662  
                   l7833 2580                     l7825 2536                     l7817 2476  
                   l7737 6ABC                     l7729 6A9A                     l7745 6E42  
                   l7809 5958                     l7761 6730                     l7753 66E0  
                   l7921 399A                     l7913 392E                     l7905 38A2  
                   l6769 6BFC                     l6689 62B6                     l6961 1B78  
                   l6953 1B4A                     l6945 1B28                     l6937 1B00  
                   l6929 1A3E                     l6873 16E6                     l6881 1726  
                   l6865 16BC                     l6849 15D6                     l6793 1390  
                   l6785 135C                     l6777 131C                     l8465 5296  
                   l7691 65AC                     l7683 6586                     l7675 655E  
                   l8483 36C2                     l8475 3142                     l7587 2D70  
                   l7851 2794                     l7843 2686                     l7835 25A2  
                   l7827 254C                     l7819 249E                     l7739 6AC2  
                   l7763 673E                     l7755 66F2                     l7747 66C8  
                   l7931 3A56                     l7923 39D8                     l7915 393C  
                   l7907 38AC                     l6699 6334                     l6963 1B7E  
                   l6947 1B30                     l6939 1B0E                     l6955 1B50  
                   l6971 1C18                     l6891 180E                     l6883 172E  
                   l6875 16F4                     l6867 16C6                     l6859 1668  
                   l6795 1398                     l6787 1364                     l6779 132A  
                   l8467 5318                     l7693 65B4                     l7685 658E  
                   l7677 656C                     l8477 3124                     l7589 2D82  
                   l7597 2E3E                     l7861 29E6                     l7853 2844  
                   l7845 26AA                     l7837 25F0                     l7829 2558  
                   l7765 6750                     l7749 66CC                     l7781 5C5A  
                   l7773 5BB0                     l7941 3AEE                     l7933 3A66  
                   l7925 3A20                     l7917 3966                     l7909 38B8  
                   l8469 5FD6                     l6981 1CB6                     l6973 1C3C  
                   l6965 1BD6                     l6957 1B62                     l6949 1B40  
                   l6893 1844                     l6885 173E                     l6877 170C  
                   l6869 16CE                     l6789 1374                     l6797 139C  
                   l7695 65BC                     l7687 6592                     l7679 6574  
                   l8479 36B4                     l7599 2E5C                     l7871 2B68  
                   l7855 28AE                     l7847 26C4                     l7863 29EE  
                   l7839 2614                     l7791 57AA                     l7759 6704  
                   l7783 5C76                     l7775 5BC2                     l7943 3B7E  
                   l7935 3A98                     l7927 3A2A                     l7919 3986  
                   l6991 1D0A                     l6983 1CC4                     l6975 1C5A  
                   l6967 1C0C                     l6959 1B74                     l6887 1752  
                   l6895 184A                     l6879 171E                     l6799 13C2  
                   l7951 4CC6                     l7697 65CA                     l7689 659A  
                   l7865 2A34                     l7857 2918                     l7849 26E6  
                   l7873 2B6E                     l7793 57C6                     l7785 5C80  
                   l7777 5C32                     l7945 3B8E                     l7937 3AAA  
                   l7929 3A40                     l7881 3710                     l6985 1CDC  
                   l6977 1C64                     l6969 1C14                     l6897 186E  
                   l6889 17B6                     l7961 4CEE                     l7953 4CD4  
                   l7699 65D0                     l7867 2B2C                     l7859 2980  
                   l7795 57D2                     l7787 5D64                     l7779 5C36  
                   l7947 3B9E                     l7939 3ADC                     l7891 37EE  
                   l7883 3746                     l7875 36F0                     l6995 5F40  
                   l6987 1CEC                     l6979 1C74                     l6899 18A2  
                   l7971 4DF2                     l7963 4CFE                     l7955 4CD8  
                   l7869 2B32                     l7797 57F0                     l7789 5D66  
                   l7893 3802                     l7877 36F0                     l6997 5F54  
                   l6989 1D02                     l7981 4E72                     l7973 4E3E  
                   l7965 4D90                     l7957 4CDC                     l7799 5840  
                   l7895 3810                     l7887 37A2                     l7879 3700  
                   l7991 4EA0                     l7983 4E7C                     l7975 4E4A  
                   l7967 4DDC                     l7959 4CDE                     l7897 3818  
                   l7889 37C0                     l7993 4EAA                     l7985 4E82  
                   l7977 4E64                     l7969 4DE8                     l7987 4E8A  
                   l7979 4E6A                     l7989 4E9C                     l7999 4EB4  
                   STR_1 088F                     STR_2 0881                     STR_3 08A9  
                   STR_4 0871                     STR_5 089C                     STR_6 08BB  
                   STR_7 08B3                     u6000 4A4E                     u6001 4A4A  
                   u6010 4AC4                     u6011 4AC0                     u6100 4BDE  
                   u6020 4AE6                     u6101 4BDA                     u6021 4AE2  
                   u6110 4BF2                     u6030 4B10                     u6111 4BEE  
                   u6031 4B0C                     u6200 458E                     u6120 4C0C  
                   u6040 4B34                     u7000 1AC4                     u6201 458A  
                   u6121 4C08                     u6041 4B30                     u7001 1AC0  
                   u6210 459E                     u6130 4C54                     u6050 4B4A  
                   u7010 1B00                     u6211 459A                     u6131 4C50  
                   u6051 4B46                     u7011 1AFC                     u6300 4842  
                   u6220 45D4                     u6140 4C84                     u6060 4B68  
                   u7100 5FA4                     u5500 64B4                     u7020 1B0E  
                   u6301 483E                     u6221 45D0                     u6141 4C80  
                   u6061 4B64                     u7101 5FA0                     u5501 64B0  
                   u7021 1B0A                     u6310 485C                     u6230 45E4  
                   u6150 4CB2                     u6070 4B88                     u7110 6052  
                   u5510 64DC                     u7030 1B62                     u6311 4858  
                   u6231 45E0                     u6151 4CAE                     u6071 4B84  
                   u7111 604E                     u5511 64D8                     u7031 1B5E  
                   u5600 3CA2                     u6320 48A4                     u6240 475E  
                   u6160 451A                     u7200 5ED6                     u6080 4B9A  
                   u6400 621C                     u8000 393C                     u7120 6064  
                   u5520 6512                     u7040 1C3C                     u5601 3C9E  
                   u6321 48A0                     u6161 4516                     u7201 5ED2  
                   u6081 4B96                     u6401 6218                     u8001 3938  
                   u7121 6060                     u5521 650E                     u7041 1C38  
                   u5610 3CB0                     u5530 3BCA                     u6330 48D2  
                   u6250 47B8                     u6170 452C                     u7210 5EE4  
                   u6090 4BC8                     u6410 623C                     u8010 39D8  
                   u7050 1C5A                     u5611 3CAC                     u5531 3BC6  
                   u6331 48CE                     u6251 47B4                     u6171 4528  
                   u7211 5EE0                     u6091 4BC4                     u6411 6238  
                   u8011 39D4                     u7051 1C56                     u5700 3DEE  
                   u5620 3D1E                     u5540 3BDC                     u6340 490C  
                   u6260 47D8                     u6180 453C                     u6500 6170  
                   u7220 5F1E                     u7140 5D9E                     u7300 40B2  
                   u6420 628C                     u8020 3A40                     u7060 1CD6  
                   u8100 4F8A                     u5701 3DEA                     u5621 3D1A  
                   u5541 3BD8                     u6341 4908                     u6261 47D4  
                   u6245 4754                     u6181 4538                     u6501 616C  
                   u7221 5F1A                     u7141 5D9A                     u6421 6288  
                   u8021 3A3C                     u7061 1CD0                     u8101 4F86  
                   u5710 3DFC                     u5630 3D36                     u5550 3BEC  
                   u6270 47EA                     u6190 457C                     u6430 6CDA  
                   u7230 5F2C                     u7150 5DAC                     u7310 40EE  
                   u8030 3A56                     u6350 664C                     u6510 67F2  
                   u7070 1CD8                     u8110 0910                     u5711 3DF8  
                   u5631 3D30                     u5551 3BE8                     u6271 47E6  
                   u6191 4578                     u6431 6CD6                     u7231 5F28  
                   u7151 5DA8                     u7311 40EA                     u7135 6CAA  
                   u8031 3A52                     u6351 6648                     u6511 67EE  
                   u8111 090C                     u5800 3F46                     u5720 3E1A  
                   u5640 3D38                     u5560 3C2E                     u6280 4818  
                   u6440 60A2                     u7160 5E08                     u7320 4156  
                   u7400 1D7C                     u7136 6CAC                     u8040 3A98  
                   u6360 668A                     u6520 6848                     u6600 6C86  
                   u7080 1CEC                     u7240 506E                     u8120 098E  
                   u5801 3F42                     u5721 3E16                     u5561 3C2A  
                   u6281 4814                     u6441 609E                     u7161 5E04  
                   u7321 4152                     u7305 40A6                     u7401 1D78  
                   u8041 3A94                     u6361 6686                     u6521 6844  
                   u6601 6C82                     u7081 1CE8                     u7241 506A  
                   u8121 098A                     u5810 3F58                     u5730 3E52  
                   u5650 3D60                     u5570 3C44                     u6290 482E  
                   u6450 60D6                     u7170 5E5E                     u7330 42D8  
                   u7410 1D9C                     u8050 3ADC                     u7090 5F74  
                   u6370 66BE                     u6530 62D6                     u6610 69DA  
                   u5490 64A2                     u7250 50B0                     u8130 09DC  
                   u5811 3F54                     u5731 3E4E                     u5651 3D5C  
                   u5571 3C40                     u6291 482A                     u7171 5E5A  
                   u7331 42D4                     u8051 3AD8                     u7091 5F70  
                   u6371 66BA                     u6611 69D6                     u5491 649E  
                   u7251 50AC                     u8131 09D8                     u5900 4040  
                   u5820 3F6E                     u5740 3E98                     u5660 3D7E  
                   u5580 3C56                     u6460 6104                     u7180 5EA8  
                   u7340 44B0                     u7420 1DB8                     u6380 61C0  
                   u7500 696C                     u6540 62F4                     u6700 574C  
                   u6620 55DE                     u7260 50EA                     u8140 0A5A  
                   u5901 403C                     u5821 3F6A                     u5741 3E94  
                   u5661 3D7A                     u5581 3C52                     u6461 6100  
                   u7181 5EA4                     u7341 44AC                     u7421 1DB4  
                   u6381 61BC                     u7501 6968                     u6541 62F0  
                   u6701 5748                     u7261 50E6                     u8141 0A56  
                   u5910 405C                     u5830 3F84                     u5750 3ECE  
                   u5670 3D9E                     u5590 3C66                     u6470 6118  
                   u7190 5EC6                     u7430 1DE0                     u6390 61FE  
                   u7510 6980                     u6550 631C                     u6710 5788  
                   u6630 560C                     u7270 518C                     u7350 6B1A  
                   u8070 4CEE                     u8150 0B02                     u5911 4058  
                   u5831 3F80                     u5751 3ECA                     u5671 3D9A  
                   u5591 3C62                     u6471 6114                     u6455 60CC  
                   u7191 5EC2                     u7431 1DDC                     u7415 1D92  
                   u6391 61FA                     u7511 697C                     u6551 6318  
                   u6535 62CC                     u6711 5784                     u6631 5608  
                   u7271 5188                     u7351 6B16                     u8071 4CEA  
                   u8151 0AFE                     u8207 08E4                     u5840 3F98  
                   u5760 3EDE                     u5680 3DAC                     u6480 6140  
                   u7600 3402                     u7520 3194                     u7440 1E5C  
                   u7360 646C                     u6560 6346                     u6640 562E  
                   u6720 6B74                     u5920 6C46                     u6800 13C2  
                   u7280 5216                     u8080 4E9C                     u8160 0BB2  
                   u5841 3F94                     u5761 3EDA                     u5681 3DA8  
                   u6481 613C                     u7601 33FE                     u8065 3B5E  
                   u7361 6468                     u6561 6342                     u6641 562A  
                   u6625 55D4                     u6721 6B70                     u5921 6C42  
                   u6801 13BE                     u7281 5212                     u8081 4E98  
                   u8217 4E56                     u8161 0BAE                     u5850 3FB2  
                   u5770 3F0A                     u5690 3DBC                     u6490 6160  
                   u7610 3414                     u7530 31C2                     u5930 4946  
                   u7450 1E78                     u7290 6E62                     u7370 6892  
                   u6730 6DE0                     u6810 13D4                     u8090 4F06  
                   u8170 10CA                     u5851 3FAE                     u5771 3F06  
                   u5691 3DB8                     u6491 615C                     u7611 3410  
                   u7531 31BE                     u5931 4942                     u7451 1E74  
                   u8307 6D96                     u7291 6E5E                     u6731 6DDA  
                   u6811 13D0                     u8227 5004                     u8091 4F02  
                   u8171 10C6                     u5860 3FEC                     u5780 3F1A  
                   u7620 34BA                     u7540 31D8                     u5940 4958  
                   u7460 1F54                     u7700 2D82                     u7380 68C6  
                   u6740 6DE2                     u6580 6380                     u6660 569C  
                   u6900 16B0                     u6820 144E                     u8180 112A  
                   u5861 3FE8                     u5781 3F16                     u7621 34B6  
                   u7541 31D4                     u7525 3188                     u5941 4954  
                   u7461 1F50                     u7445 1E52                     u7701 2D7E  
                   u8317 6CB2                     u6581 637A                     u6661 5698  
                   u6901 16AC                     u6821 144A                     u8237 5030  
                   u8181 1126                     u5870 3FFE                     u5790 3F36  
                   u7630 3556                     u7550 3232                     u5950 4968  
                   u7470 1F84                     u7710 2E5C                     u7390 68D6  
                   u6750 6BD6                     u6590 6382                     u6670 56C0  
                   u6910 16E6                     u6830 1460                     u8190 11C0  
                   u5871 3FFA                     u5791 3F32                     u7631 3552  
                   u7551 322E                     u5951 4964                     u7471 1F80  
                   u7711 2E58                     u7391 68D2                     u8247 63C0  
                   u6751 6BD2                     u6575 6358                     u6655 5642  
                   u6911 16E2                     u6831 145C                     u8191 11BC  
                   u7800 65E6                     u5880 400E                     u7560 3250  
                   u5960 49AC                     u7480 1FCA                     u7720 2E7A  
                   u7640 2BD6                     u6760 6BF8                     u6680 56DC  
                   u6656 564C                     u6920 16F4                     u6840 14DA  
                   _RCON 000FD0                     u7801 65E2                     u5881 400A  
                   u7561 324C                     u5961 49A8                     u7721 2E76  
                   u8257 6D68                     u7377 6888                     u6761 6BF4  
                   u6681 56D8                     u6657 565C                     u6921 16F0  
                   u6841 14D6                     u7810 660C                     u5890 402E  
                   u7570 3262                     u5970 49BE                     u7730 2E8C  
                   u7650 2C04                     u7490 695C                     u6690 5730  
                   u6930 171E                     u6850 1566                     u6770 132A  
                   u7811 6608                     u5891 402A                     u7571 325E  
                   u5971 49BA                     u7731 2E88                     u7651 2C00  
                   u8267 69B0                     u7491 6958                     u7387 68BC  
                   u6675 56B6                     u6931 171A                     u6851 1562  
                   u6771 1326                     u7580 331C                     u5980 49CE  
                   u7740 2F0E                     u7660 2C1A                     u7900 2A24  
                   u7820 66DC                     u6940 186E                     u6860 1598  
                   u6780 1374                     u7581 3318                     u5981 49CA  
                   u7485 1FC0                     u7741 2F0A                     u7661 2C16  
                   u7645 2BCA                     u7901 2A20                     u8277 6A8A  
                   u7821 66D8                     u6941 186A                     u6861 1594  
                   u6781 1370                     u7590 33E4                     u5990 4A0E  
                   u7750 2FB8                     u7670 2C74                     u7910 2B68  
                   u7830 674E                     u6950 18D4                     u6870 15D6  
                   u6790 1384                     u7591 33E0                     u5991 4A0A  
                   u7751 2FB4                     u7671 2C70                     u7911 2B64  
                   u8287 6AA0                     u7831 674A                     u6695 5726  
                   u6951 18D0                     u6871 15D2                     u6791 1380  
                   u7760 656C                     u7680 2C92                     u7920 2B92  
                   u7840 5C5A                     u6960 191C                     u6880 1664  
                   u7761 6568                     u7681 2C8E                     u7921 2B8E  
                   u8297 6AC8                     u7841 5C56                     u6961 1918  
                   u6881 1660                     u7770 6586                     u7690 2CA4  
                   u7850 5D8A                     u7930 3746                     u6970 192C  
                   u6890 169A                     u7771 6582                     u7691 2CA0  
                   u7851 5D86                     u7931 3742                     u6971 1928  
                   u6891 1696                     u7780 65AC                     u7860 57F0  
                   u7940 37C0                     u6980 19C6                     u7781 65A8  
                   u7861 57EC                     u7941 37BC                     u6981 19C2  
                   u7790 65CA                     u7870 5976                     u7950 37EE  
                   u6990 1A14                     u7791 65C6                     u7871 5972  
                   u7951 37EA                     u6991 1A10                     u7880 59B0  
                   u7960 3810                     u7881 59AC                     u7961 380C  
                   u7890 2580                     u7891 257C                     u7980 388E  
                   u7981 388A                     u7990 38C6                     u7991 38C2  
                   u7975 384C                     u7976 3856                     u7977 3866  
                   _Im_X 0480                     _Re_X 0350                     _dbuf 0580  
                   _half 0849                     _max1 0164                     _max2 0160  
                   _labs 69BC                     _atoi 5F40                     _cosf 3152  
                   _main 08C0                     _nanf 6E0E                     _info 0181  
                   _logf 1D2C                     _prec 004C                     _sinf 2B94  
                   pad@i 0024                     pad@p 0021                     _tiny 0801  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 0026  
                   fsr2l 000FD9                     btemp 0052            ___fpclassifyf 6296  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
        ___fldiv@new_exp 0079   __end_of_LCD_Initialize 6AD4             ___param_bank 000000  
                  ??_FFT 00FD                    ??_pad 0023                    FFT@sI 01D9  
                  FFT@uI 01E9                    FFT@sR 01D5                    FFT@uR 01DF  
            LCDPutCmd@ch 0011            ___fltol@sign1 0044                    ?_labs 000D  
                  ?_atoi 0013                    ?_cosf 018B          __end_of___fladd 4070  
                  ?_main 0001                    ?_nanf 000D                    ?_logf 0081  
        __end_of___fldiv 4CC6          __end_of___awdiv 661E          __end_of___cosdf 5BB0  
        __end_of___flneg 6CFC                    STR_10 08B7                    STR_13 089B  
                  ?_sinf 018B          __end_of___flmul 492A          __end_of___flsub 6BBE  
        __end_of___fltol 6192                    _T0CON 000FD5          ___awdiv@divisor 000F  
        __end_of___sindf 5594                    i2l152 67D0                    i2l243 6D3C  
                  i2l246 6D5E             ___sindf$1802 0091             ___sindf$1803 0095  
           ___sindf$1804 0099          ___awdiv@counter 0011             vfpfcnvrt@fmt 01B9  
                  _TMR0L 000FD6                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _TRISA 000F92                    _TRISB 000F93  
                  _Im_X1 0200                    _Re_X1 0280          __end_of_pio2_1t 0841  
                  _canal 0050                    _fabsf 6CFC                    _flags 0174  
                  _info2 0177          __end_of_regInit 6490                    _errno 004E  
                  _fputc 6490                    _fputs 6C04          __end_of_isdigit 6DE8  
                  _passo 0176                    labs@a 000D                    atoi@n 001A  
                  pad@fp 001D                    cosf@n 0193                    atoi@s 0013  
                  cosf@x 018B                    _width 004A                    cosf@y 01A9  
        __end_of_invpio2 0849                    _putch 6E8A                    _toint 084D  
                  _sqrtf 36F0                    nanf@s 000D                    nanf@u 0011  
        __end_of_isspace 6C04          __end_of_samples 67E4                    logf@R 008B  
                  logf@f 00C5                    logf@k 00A7                    logf@s 00B1  
                  logf@u 00C1                    logf@w 00B9                    logf@x 0081  
                  logf@z 00B5                    tablat 000FF5                    sinf@n 0193  
                  sinf@x 018B                    sinf@y 01A9                    ttemp5 0053  
                  ttemp6 0056                    ttemp7 005A                    status 000FD8  
                  wtemp8 0053          __end_of_sprintf 6A7C           ?___fpclassifyf 000D  
         bitrevsort@Im_x 0019           bitrevsort@Re_x 0017          ?_LCD_Initialize 0001  
        __initialization 68D8             __end_of_half 084D             __end_of_labs 6A22  
           __end_of_atoi 608A             __end_of_cosf 36F0             __end_of_main 1306  
           __end_of_nanf 6E30             __end_of_logf 2476             __end_of_sinf 3152  
           __end_of_tiny 0805              ?_SPI_config 0001                   ??_labs 0011  
                 ??_atoi 0015                   ??_cosf 018F                   ??_main 01F3  
                 ??_nanf 0011                   ??_logf 0085                   ??_sinf 018F  
            ?_SPI_transm 0001            __activetblptr 000002                ??_LCDGoto 0013  
      __end_of_LCDPutCmd 6DBC             LCDPutChar@ch 0011        __end_of_LCDPutStr 68D8  
                 ?_fabsf 000D                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   ?_fputc 000D                   ?_fputs 0016  
                 _ADRESH 000FC4                   _ADRESL 000FC3         ___awdiv@dividend 000D  
                 ?_putch 0001                   ?_sqrtf 0060                   i2l5371 6D30  
                 i2l5373 6D38                   i2l5701 67B6                   i2l5375 6D3A  
                 i2l5703 67CE                   _INTCON 000FF2                   i2l5377 6D4A  
                 i2l5379 6D56                   i2l5691 6778                   i2l5693 677A  
                 i2l5695 677E                   i2l5697 678A                   i2l5689 676A  
                 i2l5699 679A            ___rem_pio2f@n 00F9            ___rem_pio2f@t 00F5  
          ___rem_pio2f@u 00E9            ___rem_pio2f@x 00D5            ___rem_pio2f@y 00D9  
                 _OSCCON 000FD3             LCDPutStr@str 0012                   _TRISB0 007C98  
                 _TRISB1 007C99                   _TRISA5 007C95                   _TRISC7 007CA7  
                 _SSPBUF 000FC9         __end_of___xxtofl 5F40     cosf@__xc8_float_word 0197  
         _LCDWriteNibble 6C88                   _Im_Xm1 0600                   _c1pio2 086D  
                 _c2pio2 0869                   _c3pio2 0865                   _c4pio2 0861  
                 _Re_Xm1 0500         ??_configSampling 0010             vfprintf@cfmt 00EC  
                 _s1pio2 0811                   _s2pio2 080D                   _s3pio2 0809  
                 _s4pio2 0805                   ___flge 6192                   ___fleq 661E  
              ??___fladd 003C                   ___wmul 6DE8                   _ln2_hi 0829  
              ??___fldiv 0070                ??___awdiv 0011                   _ln2_lo 0825  
              ??___cosdf 0044                ??___flneg 0044                ??___flmul 0023  
              ??___flsub 0044                ??___fltol 00D1                   _efgtoa 1306  
                 _convAD 6D30                   _aux_D2 0168                ??___sindf 0044  
                 _pio2_1 0841        __end_of_SPI_MCP41 6E7A                   _floorf 5594  
                 fabsf@u 0011                   fabsf@x 000D                   _memcpy 6B26  
                 clear_0 68DE                   clear_1 68EA                   clear_2 68F8  
                 clear_3 690A                   clear_4 6918                   clear_5 692A  
                 clear_6 6936         ___awdiv@quotient 0013                   isa$std 000001  
                 pad@buf 001F                   cosf@ix 01AD                   _strcpy 6C48  
                 logf@t1 008F                   logf@t2 0093                   logf@dk 00AD  
                 logf@ix 00C9                   fputc@c 000D                ??_regInit 000D  
                 fputs@c 001A                   fputs@i 001B                   fputs@s 0016  
              ??_isdigit 000F          ___fpclassifyf@e 0015          ___fpclassifyf@u 0017  
        ___fpclassifyf@x 000D             __mediumconst 0000                ??_isspace 000F  
                 sinf@ix 01AD                ??_samples 0007         __end_of_verifRes 504A  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0001         __end_of_vfprintf 6B26                   sqrtf@i 006D  
                 sqrtf@m 0081                   sqrtf@q 0075                   sqrtf@r 0085  
                 sqrtf@s 0069                   sqrtf@t 0079                   sqrtf@x 0060  
                 sqrtf@z 007D                ??_sprintf 0046               ___flge@ff1 0034  
             ___flge@ff2 0038          ??___fpclassifyf 0011             ___xxtofl@arg 0017  
           ___xxtofl@exp 0016             ___xxtofl@val 000D               ___fleq@ff1 000D  
             ___fleq@ff2 0011   __end_of_LCDWriteNibble 6CC2               __accesstop 0060  
__end_of__initialization 693C               ___flneg@f1 0081            ___rparam_used 000001  
             ___fltol@f1 00CD                LCDGoto@ln 0012          bitrevsort@tempI 0022  
        bitrevsort@tempR 001E           SPI_transm@dado 000D           __pcstackCOMRAM 0001  
          __end_of_fabsf 6D30            __end_of_fputc 655A             ??_LCDPutChar 0010  
          __end_of_fputs 6C48            __end_of_putch 6E8C            __end_of_toint 0851  
          __end_of_sqrtf 3BB0               __end_of_C0 0861               __end_of_C1 085D  
             __end_of_C2 0859               __end_of_C3 0855               __end_of_S1 083D  
             __end_of_S2 0839               __end_of_S3 0835               __end_of_S4 0831  
                ??_fabsf 0011                  FFT@Im_X 01B5                  ??_fputc 0011  
                ??_fputs 001A                  FFT@Re_X 01B3                  ??_putch 000D  
                ??_sqrtf 0064               __pbssBANK1 0100               __pbssBANK2 0200  
             __pbssBANK3 0300               __pbssBANK4 0400               __pbssBANK5 0500  
             __pbssBANK6 0600          ?_LCDWriteNibble 000D       __end_of_LCDPutChar 6D8E  
                ?___flge 0034                  ?___fleq 000D                  ?___wmul 000D  
                ?_efgtoa 00D5                  ?_convAD 0001            ??___rem_pio2f 00DB  
                ?_floorf 0081                  ?_memcpy 000D                  ?_strcpy 000D  
                _LCDGoto 694A                  _INTCON2 000FF1                ?___xxtofl 000D  
             _bitrevsort 57AA           ___rem_pio2f@fn 00F1           ___rem_pio2f@ix 00E3  
         ___rem_pio2f@ty 00DF                  _SSPCON1 000FC6                  _SSPSTAT 000FC7  
       ??_LCD_Initialize 0012                  __Hparam 0000                  __Lparam 0000  
              ?_verifRes 0001                  ___fladd 3BB0                  ___fldiv 492A  
                ___awdiv 655A                  ___cosdf 59B2                  ___flneg 6CC2  
                ___flmul 4500                  ___flsub 6B76                  ___fltol 608A  
                ___sindf 5362                ?_vfprintf 01BD             __psmallconst 0800  
           ??_SPI_config 0010                  __pcinit 68D8                  __ramtop 0800  
                __ptext0 08C0                  __ptext1 4CC6                  __ptext2 6A22  
                __ptext3 6AD4                  __ptext4 504A                  __ptext5 1306  
                __ptext6 6C48                  __ptext7 67E4                  __ptext8 6C04  
                __ptext9 6490             ??_SPI_transm 000D                _T0CONbits 000FD5  
                _pio2_1t 083D                  _regInit 6394                  _isdigit 6DBC  
             ??___xxtofl 0011      __end_of___rem_pio2f 4500                  _invpio2 0845  
                _isspace 6BBE                  _samples 0008                  efgtoa@c 00DB  
                efgtoa@d 0196                  efgtoa@e 019A                  efgtoa@f 00D7  
                efgtoa@g 01AD                  efgtoa@h 01A4                  efgtoa@i 01A2  
                efgtoa@l 01A8                  efgtoa@m 0198                  efgtoa@n 01B1  
                efgtoa@p 018D                  efgtoa@t 018F                  efgtoa@u 01B3  
                efgtoa@w 019C                  atoi@neg 0018                _LCDPutCmd 6D8E  
                main@aux 03D0                  _sprintf 6A22                _LCDPutStr 685E  
                _voltage 0300         ___rem_pio2f$1801 00ED           __pintcode_body 6758  
   end_of_initialization 693C                  floorf@e 008F                  floorf@m 008B  
                floorf@u 0091                  floorf@x 0081                  memcpy@d 0014  
                memcpy@n 0011                  memcpy@s 0016                  fputc@fp 000F  
       ___rem_pio2f@F532 0046            __Lmediumconst 0000                  int_func 6758  
                fputs@fp 0018       __end_of_SPI_config 6E4E        __end_of_normalize 5D8C  
     __end_of_SPI_transm 6E66         ___rem_pio2f@sign 00E7        __end_of_vfpfcnvrt 5362  
             efgtoa@mode 0194               efgtoa@sign 01AC                  postdec1 000FE5  
                postdec2 000FDD               ??_verifRes 00FB                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE         vfpfcnvrt@convarg 00E1  
             ??_vfprintf 0046                  sqrtf@ix 0089                  strcpy@d 0013  
                strcpy@s 0011                _PORTAbits 000F80                _PORTBbits 000F81  
              _SPI_MCP41 6E66              ___fladd@grs 0043            samples@sample 000B  
            ?_bitrevsort 0015            ___xxtofl@sign 0015              ___fldiv@grs 007B  
            ___fldiv@rem 0074               ?_LCDPutCmd 0001               ?_LCDPutStr 0012  
          ??_configADCON 000F              ___flmul@grs 0029               LCDGoto@pos 0017  
         __end_of_c1pio2 0871           __end_of_c2pio2 086D           __end_of_c3pio2 0869  
         __end_of_c4pio2 0865           __end_of_s1pio2 0815           __end_of_s2pio2 0811  
         __end_of_s3pio2 080D           __end_of_s4pio2 0809           __end_of___flge 6296  
         __end_of___fleq 66C8              vfpfcnvrt@ap 01BB              vfpfcnvrt@cp 00EA  
            ___rem_pio2f 4070              vfpfcnvrt@fp 01B7               LCDPutStr@i 0016  
         __end_of___wmul 6E0E           __end_of_ln2_hi 082D           __end_of_ln2_lo 0829  
         __end_of_efgtoa 1D2C           __end_of_convAD 6D60           __end_of_pio2_1 0845  
         __end_of_floorf 57AA           __end_of_memcpy 6B76               floorf@F526 0150  
             ?_SPI_MCP41 000E           __end_of_strcpy 6C88      start_initialization 68D8  
            __end_of_FFT 2B94              __end_of_Lg1 0825              __end_of_Lg2 0821  
            __end_of_Lg3 081D              __end_of_Lg4 0819         ??_LCDWriteNibble 000E  
            __end_of_pad 685E    __end_of___fpclassifyf 6394      __end_of_configADCON 6E8A  
            vfprintf@fmt 01BF                 ??___flge 003C                 ??___fleq 0015  
               ??___wmul 0011                 ??_efgtoa 00DC                 ??_convAD 0003  
               ??_floorf 0085                 ??_memcpy 0013                 ??_strcpy 0011  
              ___fladd@a 0038                ___fladd@b 0034                 FFT@tempI 01D1  
               FFT@tempR 01E5                 ?_LCDGoto 0012                ___fldiv@a 006C  
              ___fldiv@b 0068                ___cosdf@r 0064                ___cosdf@w 0074  
              ___cosdf@x 0060                ___cosdf@z 0078                ___flmul@a 001F  
              ___flmul@b 001B              __pbssCOMRAM 0046                ___flsub@a 0064  
              ___flsub@b 0060            __pcstackBANK0 0060            __pcstackBANK1 018B  
          __pcstackBANK3 03D0              ??_LCDPutCmd 0010                ___sindf@r 0089  
              ___sindf@s 009D                ___sindf@w 008D                ___sindf@x 0085  
              ___sindf@z 00A1              ??_LCDPutStr 0014                _cosf$1173 019B  
              _cosf$1174 019F                _cosf$1797 01A3              _efgtoa$1402 0191  
              _main$1790 03D8                _main$1788 03DC                _main$1789 03D4  
              __pintcode 0008                 ?___fladd 0034                 ?___fldiv 0068  
               ?___awdiv 000D                 ?___cosdf 0060                 ?___flneg 0081  
               ?___flmul 001B                 ?___flsub 0060                 ?___fltol 00CD  
               ?___sindf 0085         LCDWriteNibble@ch 000F         LCDWriteNibble@rs 000D  
              _logf$1805 00BD                _logf$1806 0097                _logf$1807 009B  
              _logf$1808 009F                _logf$1809 00A3           normalize@media 00DD  
            ??_SPI_MCP41 000F                fabsf@F465 015C              __smallconst 0800  
               _FFT$1791 01B7                 _FFT$1792 01BB                 _FFT$1793 01BF  
               _FFT$1794 01C3                 _FFT$1795 01C7                 _FFT$1796 01CB  
               ?_regInit 0001                 ?_isdigit 000D                 ?_isspace 000D  
               ?_samples 0001                _sinf$1810 01A5                 ?_sprintf 01C3  
              _sinf$1556 019B                _sinf$1557 019F              _configADCON 6E7A  
         ___wmul@product 0011         SPI_MCP41@comando 000F              _LCDGoto$659 0015  
             normalize@N 00D5               normalize@X 00D7               normalize@k 00DF  
               i2u508_40 6D4A                 i2u508_41 6D46                 i2u538_40 6778  
               i2u538_41 6774                 i2u539_40 679A                 i2u539_41 6796  
              _normalize 5BB0                _pot_value 0175                _vfpfcnvrt 504A  
             _ADCON0bits 000FC2        ___wmul@multiplier 000D        configADCON@adcon0 000F  
      configADCON@adcon1 000D        configADCON@adcon2 000E             ??_bitrevsort 001B  
           _isspace$1480 0011               vfpfcnvrt@c 00E9                 __Hrparam 0000  
              memcpy@tmp 0013               vfprintf@ap 01C1                 __Lrparam 0000  
             vfprintf@fp 01BD               ?_normalize 00D5       __end_of_bitrevsort 59B2  
           ?___rem_pio2f 00D5               ?_vfpfcnvrt 01B7           _configSampling 66C8  
     ___fpclassifyf@F465 0154               sprintf@fmt 01C5                 ___xxtofl 5D8C  
               __ptext10 6E8A                 __ptext11 6B26                 __ptext20 6394  
               __ptext12 69BC                 __ptext21 685E                 __ptext13 5594  
               __ptext30 57AA                 __ptext22 6D60                 __ptext14 6296  
               __ptext31 6E30                 __ptext23 694A                 __ptext15 661E  
               __ptext40 492A                 __ptext32 6E66                 __ptext24 36F0  
               __ptext16 5F40                 __ptext41 3152                 __ptext33 6E4E  
               __ptext25 6E0E                 __ptext17 6BBE                 __ptext50 4500  
               __ptext42 5362                 __ptext34 6A7C                 __ptext26 6192  
               __ptext18 6DBC                 __ptext51 3BB0                 __ptext43 4070  
               __ptext35 6D8E                 __ptext27 5BB0                 __ptext19 6DE8  
               __ptext52 655A                 __ptext44 6CFC                 __ptext36 6C88  
               __ptext28 66C8                 __ptext45 5D8C                 __ptext37 2476  
               __ptext29 6E7A                 __ptext54 6D30                 __ptext46 608A  
               __ptext38 2B94                 __ptext47 6B76                 __ptext39 1D2C  
               __ptext48 6CC2                 __ptext49 59B2                 _aux_Voff 016C  
             strcpy@dest 000D     sinf@__xc8_float_word 0197                 efgtoa@fp 00D5  
               efgtoa@ne 018B                 efgtoa@pp 0193                 efgtoa@ou 019E  
               isa$xinst 000000                 _verifRes 4CC6                 int$flags 0052  
               cosf@sign 01A7                 _vfprintf 6AD4               _LCDPutChar 6D60  
 __end_of_configSampling 6758                verifRes@i 00FD                 logf@F472 0158  
             _INTCONbits 000FF2                 memcpy@d1 000D                 memcpy@s1 000F  
               logf@hfsq 00A9                 regInit@j 000F                 isdigit@c 000D  
               intlevel2 0000                sprintf@ap 00EE                 isspace@c 000D  
              strcpy@src 000F                 sinf@sign 01A3             convAD@result 0005  
            ??_normalize 00D9              efgtoa@nmode 0195              ??_vfpfcnvrt 00DE  
        ?_configSampling 0001                 sprintf@f 00F0                 sprintf@s 01C3  
          SPI_MCP41@dado 000E            ___fladd@signs 0040             ?_configADCON 000D  
  sqrtf@__xc8_float_word 0071             ___fladd@aexp 0041             ___fladd@bexp 0042  
           ___cosdf$1800 0070             ___cosdf$1798 0068             ___cosdf$1799 006C  
